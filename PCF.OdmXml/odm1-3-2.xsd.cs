// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.32989
//    <NameSpace>PCF.OdmXml</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>True</TrackingChangesEnable><GenTrackingClasses>True</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>True</IncludeSerializeMethod><UseBaseClass>True</UseBaseClass><GenBaseClass>True</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net35</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>Save</SaveToFileMethodName><LoadFromFileMethodName>Load</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
// This file has been modified from it's generated state.
namespace PCF.OdmXml
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Collections.Specialized;
    using System.ComponentModel;
    using System.Diagnostics;
    using System.IO;
    using System.Reflection;
    using System.Runtime.Serialization;
    using System.Xml;
    using System.Xml.Serialization;


    #region Base entity class
    public partial class EntityBase<T> : INotifyPropertyChanged
    {

        private ObjectChangeTracker changeTrackerField;

        private static XmlSerializer serializer;

        [XmlIgnore]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if ((this.changeTrackerField == null))
                {
                    this.changeTrackerField = new ObjectChangeTracker(this);
                }
                return changeTrackerField;
            }
        }

        private static XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new XmlSerializer(typeof(T));
                }
                return serializer;
            }
        }

        public event PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName, object value)
        {
            this.ChangeTracker.RecordCurrentValue(propertyName, value);
            PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current EntityBase object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize()
        {
            StreamReader streamReader = null;
            MemoryStream memoryStream = null;
            try
            {
                memoryStream = new MemoryStream();
                Serializer.Serialize(memoryStream, this);
                memoryStream.Seek(0, SeekOrigin.Begin);
                streamReader = new StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes workflow markup into an EntityBase object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output EntityBase object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out T obj, out System.Exception exception)
        {
            exception = null;
            obj = default(T);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out T obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static T Deserialize(string xml)
        {
            StringReader stringReader = null;
            try
            {
                stringReader = new StringReader(xml);
                return ((T)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current EntityBase object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool Save(string fileName, out System.Exception exception)
        {
            exception = null;
            try
            {
                Save(fileName);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual void Save(string fileName)
        {
            StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize();
                FileInfo xmlFile = new FileInfo(fileName);
                streamWriter = xmlFile.CreateText();
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an EntityBase object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output EntityBase object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Load(string fileName, out T obj, out System.Exception exception)
        {
            exception = null;
            obj = default(T);
            try
            {
                obj = Load(fileName);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Load(string fileName, out T obj)
        {
            System.Exception exception = null;
            return Load(fileName, out obj, out exception);
        }

        public static T Load(string fileName)
        {
            FileStream file = null;
            StreamReader sr = null;
            try
            {
                file = new FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new StreamReader(file);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion
    }
    #endregion

    #region PropertyValueState class
    public class PropertyValueState
    {

        public string PropertyName { get; set; }
        public object OriginalValue { get; set; }
        public object CurrentValue { get; set; }
        public ObjectState State { get; set; }
    }
    #endregion

    #region ObjectStateChangingEventArgs class
    public class ObjectStateChangingEventArgs : EventArgs
    {

        public ObjectState NewState { get; set; }
    }
    #endregion

    #region ObjectList class
    public class ObjectList : List<object>
    {
    }
    #endregion

    #region ObjectState enum
    public enum ObjectState
    {

        Unchanged,

        Added,

        Modified,

        Deleted,
    }
    #endregion

    #region NotifyTrackableCollectionChangedEventHandler class
    public delegate void NotifyTrackableCollectionChangedEventHandler(object sender, NotifyCollectionChangedEventArgs e, string propertyName);
    #endregion

    #region Tracking changes class
    public class ObjectChangeTracker : INotifyPropertyChanged
    {

        #region  Fields
        private bool isDeserializingField;
        private ObjectState originalobjectStateField = ObjectState.Added;
        private bool isInitilizedField = false;
        private readonly ObservableCollection<PropertyValueState> changeSetsField = new ObservableCollection<PropertyValueState>();
        private Delegate collectionChangedDelegateField = null;

        private bool objectTrackingEnabledField;
        private readonly object trackedObjectField;

        private PropertyValueStatesDictionary propertyValueStatesFields;
        //private ValueStatesDictionary valueStatesField;

        private ObjectsAddedToCollectionProperties objectsAddedToCollectionsField = new ObjectsAddedToCollectionProperties();
        private ObjectsRemovedFromCollectionProperties objectsRemovedFromCollectionsField = new ObjectsRemovedFromCollectionProperties();
        private ObjectsOriginalFromCollectionProperties objectsOriginalFromCollectionsField = new ObjectsOriginalFromCollectionProperties();
        #endregion

        public ObjectChangeTracker(object trackedObject)
        {
            trackedObjectField = trackedObject;
        }

        #region Events

        public event EventHandler<ObjectStateChangingEventArgs> ObjectStateChanging;

        #endregion

        protected virtual void OnObjectStateChanging(ObjectState newState)
        {
            if (ObjectStateChanging != null)
            {
                ObjectStateChanging(this, new ObjectStateChangingEventArgs() { NewState = newState });
            }
        }

        /// <summary>
        /// indicate current state
        /// </summary>
        private ObjectState stateField;

        /// <summary>
        /// Gets the state.
        /// </summary>
        /// <value>The state.</value>
        public ObjectState State
        {
            get
            {
                return stateField;
            }
        }

        /// <summary>
        /// Updates the state of the change.
        /// </summary>
        private void UpdateChangeState()
        {
            ObjectState resultState = ObjectState.Added;
            this.changeSetsField.Clear();
            if (this.originalobjectStateField == ObjectState.Added)
            {
                if (stateField != ObjectState.Added)
                {
                    stateField = ObjectState.Added;
                    OnPropertyChanged("State");
                    OnObjectStateChanging(stateField);
                }
                return;
            }
            foreach (var propertyValuestate in PropertyValueStates)
            {
                if (propertyValuestate.Value.State == ObjectState.Modified)
                {
                    changeSetsField.Add(propertyValuestate.Value);
                    resultState = ObjectState.Modified;
                }
            }

            if (ObjectsRemovedFromCollectionProperties.Count > 0)
            {
                foreach (var objectsRemovedFromCollectionProperty in ObjectsRemovedFromCollectionProperties)
                {
                    foreach (var objectsRemoved in objectsRemovedFromCollectionProperty.Value)
                    {
                        changeSetsField.Add(new PropertyValueState() { PropertyName = objectsRemovedFromCollectionProperty.Key, State = ObjectState.Deleted, CurrentValue = objectsRemoved.ToString() });
                    }
                }
                resultState = ObjectState.Modified;
            }

            if (ObjectsAddedToCollectionProperties.Count > 0)
            {
                foreach (var objectsAddedFromCollectionProperty in ObjectsAddedToCollectionProperties)
                {
                    foreach (var objectsAdded in objectsAddedFromCollectionProperty.Value)
                    {
                        changeSetsField.Add(new PropertyValueState() { PropertyName = objectsAddedFromCollectionProperty.Key, State = ObjectState.Added, CurrentValue = objectsAdded.ToString() });
                    }
                }
                resultState = ObjectState.Modified;
            }

            if (resultState == ObjectState.Modified)
            {
                if (stateField != ObjectState.Modified)
                {
                    stateField = ObjectState.Modified;
                    OnPropertyChanged("State");
                    OnObjectStateChanging(stateField);
                }
                return;
            }
            if (stateField != this.originalobjectStateField)
            {
                stateField = this.originalobjectStateField;
                OnPropertyChanged("State");
                OnObjectStateChanging(stateField);
            }
            return;
        }

        public ObservableCollection<PropertyValueState> ChangeSets
        {
            get
            {
                return this.changeSetsField;
            }
        }

        /// <summary>
        /// Gets or sets a value indicating whether [change tracking enabled].
        /// </summary>
        /// <value>
        /// 	<c>true</c> if [change tracking enabled]; otherwise, <c>false</c>.
        /// </value>
        public bool ObjectTrackingEnabled
        {
            get { return objectTrackingEnabledField; }
        }

        /// <summary>
        /// Starts record changes.
        /// </summary>
        public void StartTracking()
        {
            objectTrackingEnabledField = true;
            ResetTracking();
        }

        /// <summary>
        /// Starts record changes.
        /// </summary>
        public void StartTracking(bool keepLastRecords)
        {
            objectTrackingEnabledField = true;
            if (!keepLastRecords)
                StartTracking();
        }

        /// <summary>
        /// Starts record changes.
        /// </summary>
        public void StopTracking()
        {
            objectTrackingEnabledField = false;
        }

        // Resets the ObjectChangeTracker to the Unchanged state and
        // clears the original values as well as the record of changes
        // to collection properties
        public void ResetTracking()
        {
            if (this.objectTrackingEnabledField)
            {
                this.originalobjectStateField = ObjectState.Unchanged;
                ResetOriginalValue();
                ObjectsAddedToCollectionProperties.Clear();
                ObjectsRemovedFromCollectionProperties.Clear();
                ObjectsOriginalFromCollectionProperties.Clear();
                InitOriginalValue();
                UpdateChangeState();
            }
        }
        /// <summary>
        /// Inits the original value.
        /// </summary>
        private void InitOriginalValue()
        {
            var type = trackedObjectField.GetType();
            var propertyies = type.GetProperties();

            if (!isInitilizedField)
            {
                foreach (var propertyInfo in propertyies)
                {
                    if (!propertyInfo.Name.Equals("ChangeTracker") && !propertyInfo.Name.Equals("Item"))
                    {
                        object o = propertyInfo.GetValue(trackedObjectField, null);
                        if (propertyInfo.PropertyType.Name.Contains("TrackableCollection"))
                        {
                            var eventInfo = propertyInfo.PropertyType.GetEvent("TrackableCollectionChanged");
                            if (eventInfo != null)
                            {
                                Type tDelegate = eventInfo.EventHandlerType;
                                if (tDelegate != null)
                                {
                                    if (collectionChangedDelegateField == null)
                                        collectionChangedDelegateField = Delegate.CreateDelegate(tDelegate, this, "TrackableCollectionChanged");

                                    // Get the "add" accessor of the event and invoke it late bound, passing in the delegate instance. This is equivalent
                                    // to using the += operator in C#. The instance on which the "add" accessor is invoked.
                                    MethodInfo addHandler = eventInfo.GetAddMethod();
                                    Object[] addHandlerArgs = { collectionChangedDelegateField };
                                    addHandler.Invoke(o, addHandlerArgs);
                                }
                            }

                            var collection = o as IEnumerable;
                            if (collection != null)
                            {
                                foreach (var item in collection)
                                {
                                    RecordOriginalToCollectionProperties(propertyInfo.Name, item);
                                }
                            }
                        }
                        else
                        {
                            RecordCurrentValue(propertyInfo.Name, o);
                        }
                    }
                }
                isInitilizedField = true;
            }
        }

        /// <summary>
        /// Resets the original value.
        /// </summary>
        private void ResetOriginalValue()
        {
            PropertyValueStates.Clear();
            //ValueStates.Clear();

            if (isInitilizedField)
            {
                var type = trackedObjectField.GetType();
                var propertyies = type.GetProperties();
                foreach (var propertyInfo in propertyies)
                {
                    if (!propertyInfo.Name.Equals("ChangeTracker") && !propertyInfo.Name.Equals("Item"))
                    {
                        object o = propertyInfo.GetValue(trackedObjectField, null);
                        if (propertyInfo.PropertyType.Name.Contains("TrackableCollection"))
                        {
                            var eventInfo = propertyInfo.PropertyType.GetEvent("TrackableCollectionChanged");
                            if (eventInfo != null)
                            {
                                Type tDelegate = eventInfo.EventHandlerType;
                                if (tDelegate != null)
                                {
                                    if (collectionChangedDelegateField != null)
                                    {
                                        // Get the "remove" accessor of the event and invoke it latebound, passing in the delegate instance. This is equivalent
                                        // to using the += operator in C#. The instance on which the "add" accessor is invoked.
                                        MethodInfo removeHandler = eventInfo.GetRemoveMethod();
                                        Object[] addHandlerArgs = { collectionChangedDelegateField };
                                        removeHandler.Invoke(o, addHandlerArgs);
                                    }
                                }
                            }
                        }
                    }
                }
                isInitilizedField = false;
            }
        }

        /// <summary>
        /// Trackables the collection changed.
        /// </summary>
        /// <param name="sender">The sender.</param>
        /// <param name="e">The <see cref="NotifyTrackableCollectionChangedEventArgs"/> instance containing the event data.</param>
        /// <param name="propertyName">Name of the property.</param>
        private void TrackableCollectionChanged(object sender, NotifyCollectionChangedEventArgs e, string propertyName)
        {
            switch (e.Action)
            {
                case NotifyCollectionChangedAction.Add:
                    foreach (var newItem in e.NewItems)
                    {
                        //todo:implémenter la récursivité sur l'ajout des élements dans la collection
                        //var project = newItem as IObjectWithChangeTracker;
                        //if (project != null)
                        //{
                        //    if (this.ChangeTrackingEnabled)
                        //    {
                        //        project.ChangeTracker.Start();
                        //    }
                        //}
                        RecordAdditionToCollectionProperties(propertyName, newItem);
                    }
                    break;
                case NotifyCollectionChangedAction.Remove:
                    foreach (var odlItem in e.OldItems)
                    {
                        RecordRemovalFromCollectionProperties(propertyName, odlItem);
                    }
                    break;
                case NotifyCollectionChangedAction.Reset:
                    {
                        // Cas d'un Clear sur la collection.
                        // Vide le cache des modifications pour la collection.
                        if (ObjectsRemovedFromCollectionProperties.ContainsKey(propertyName))
                        {
                            ObjectsRemovedFromCollectionProperties.Remove(propertyName);
                        }

                        if (ObjectsAddedToCollectionProperties.ContainsKey(propertyName))
                        {
                            ObjectsAddedToCollectionProperties.Remove(propertyName);
                        }

                        // Tranfère les données de départ dans les élements supprimés.
                        if (ObjectsOriginalFromCollectionProperties.Count > 0)
                        {
                            foreach (var item in ObjectsOriginalFromCollectionProperties[propertyName])
                            {
                                RecordRemovalFromCollectionProperties(propertyName, item);
                            }
                        }
                    }
                    break;
                case NotifyCollectionChangedAction.Replace:
                    {
                        // Comment gérer le cas d'un changement d'instance dans la liste ?
                    }
                    break;
            }
            UpdateChangeState();
        }

        #region public properties
        // Returns the removed objects to collection valued properties that were changed.
        public ObjectsRemovedFromCollectionProperties ObjectsRemovedFromCollectionProperties
        {
            get { return objectsRemovedFromCollectionsField ?? (objectsRemovedFromCollectionsField = new ObjectsRemovedFromCollectionProperties()); }
        }

        // Returns the original values for properties that were changed.
        public PropertyValueStatesDictionary PropertyValueStates
        {
            get { return propertyValueStatesFields ?? (propertyValueStatesFields = new PropertyValueStatesDictionary()); }
        }

        // Returns the added objects to collection valued properties that were changed.
        public ObjectsAddedToCollectionProperties ObjectsAddedToCollectionProperties
        {
            get { return objectsAddedToCollectionsField ?? (objectsAddedToCollectionsField = new ObjectsAddedToCollectionProperties()); }
        }

        // Returns the added objects to collection valued properties that were changed.
        public ObjectsOriginalFromCollectionProperties ObjectsOriginalFromCollectionProperties
        {
            get { return objectsOriginalFromCollectionsField ?? (objectsOriginalFromCollectionsField = new ObjectsOriginalFromCollectionProperties()); }
        }

        #region MethodsForChangeTrackingOnClient

        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            isDeserializingField = true;
        }

        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            isDeserializingField = false;
        }
        #endregion

        /// <summary>
        /// Captures the original value for a property that is changing.
        /// </summary>
        /// <param name="propertyName">Name of the property.</param>
        /// <param name="value">The value.</param>
        public void RecordCurrentValue(string propertyName, object value)
        {
            if (objectTrackingEnabledField)
            {
                if (!PropertyValueStates.ContainsKey(propertyName))
                {
                    PropertyValueStates[propertyName] = new PropertyValueState() { PropertyName = propertyName, OriginalValue = value, CurrentValue = value, State = ObjectState.Unchanged };
                }
                // Compare original value new 
                else
                {
                    PropertyValueStates[propertyName].CurrentValue = value;
                    var originalValue = PropertyValueStates[propertyName].OriginalValue;
                    if (originalValue != null)
                    {
                        PropertyValueStates[propertyName].State = originalValue.Equals(value) ? ObjectState.Unchanged : ObjectState.Modified;
                    }
                    else
                    {
                        if (value == null)
                        {
                            PropertyValueStates[propertyName].State = ObjectState.Unchanged;
                        }
                        else
                        {
                            PropertyValueStates[propertyName].State = string.IsNullOrEmpty(value.ToString()) ? ObjectState.Unchanged : ObjectState.Modified;
                        }
                    }
                }
                UpdateChangeState();
            }
        }

        /// <summary>
        /// Records original items value of collection to collection valued properties on SelfTracking Entities.
        /// </summary>
        /// <param name="propertyName">Name of the property.</param>
        /// <param name="value">The value.</param>
        private void RecordOriginalToCollectionProperties(string propertyName, object value)
        {
            if (objectTrackingEnabledField)
            {
                if (!ObjectsOriginalFromCollectionProperties.ContainsKey(propertyName))
                {
                    ObjectsOriginalFromCollectionProperties[propertyName] = new ObjectList();
                    ObjectsOriginalFromCollectionProperties[propertyName].Add(value);
                }
                else
                {
                    ObjectsOriginalFromCollectionProperties[propertyName].Add(value);
                }
            }
        }


        /// <summary>
        /// Records an addition to collection valued properties on SelfTracking Entities.
        /// </summary>
        /// <param name="propertyName">Name of the property.</param>
        /// <param name="value">The value.</param>
        private void RecordAdditionToCollectionProperties(string propertyName, object value)
        {
            if (objectTrackingEnabledField)
            {
                // Add the entity back after deleting it, we should do nothing here then
                if (ObjectsRemovedFromCollectionProperties.ContainsKey(propertyName)
                    && ObjectsRemovedFromCollectionProperties[propertyName].Contains(value))
                {
                    ObjectsRemovedFromCollectionProperties[propertyName].Remove(value);
                    if (ObjectsRemovedFromCollectionProperties[propertyName].Count == 0)
                    {
                        ObjectsRemovedFromCollectionProperties.Remove(propertyName);
                    }
                    return;
                }

                if (!ObjectsAddedToCollectionProperties.ContainsKey(propertyName))
                {
                    ObjectsAddedToCollectionProperties[propertyName] = new ObjectList();
                    ObjectsAddedToCollectionProperties[propertyName].Add(value);
                }
                else
                {
                    ObjectsAddedToCollectionProperties[propertyName].Add(value);
                }
            }
        }

        /// <summary>
        /// Records a removal to collection valued properties on SelfTracking Entities.
        /// </summary>
        /// <param name="propertyName">Name of the property.</param>
        /// <param name="value">The object value.</param>
        internal void RecordRemovalFromCollectionProperties(string propertyName, object value)
        {
            if (objectTrackingEnabledField)
            {
                // Delete the entity back after adding it, we should do nothing here then
                if (ObjectsAddedToCollectionProperties.ContainsKey(propertyName)
                    && ObjectsAddedToCollectionProperties[propertyName].Contains(value))
                {
                    ObjectsAddedToCollectionProperties[propertyName].Remove(value);
                    if (ObjectsAddedToCollectionProperties[propertyName].Count == 0)
                    {
                        ObjectsAddedToCollectionProperties.Remove(propertyName);
                    }
                    return;
                }

                if (!ObjectsRemovedFromCollectionProperties.ContainsKey(propertyName))
                {
                    ObjectsRemovedFromCollectionProperties[propertyName] = new ObjectList();
                    ObjectsRemovedFromCollectionProperties[propertyName].Add(value);
                }
                else
                {
                    if (!ObjectsRemovedFromCollectionProperties[propertyName].Contains(value))
                    {
                        ObjectsRemovedFromCollectionProperties[propertyName].Add(value);
                    }
                }
            }
        }
        #endregion

        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// Called when [property changed].
        /// </summary>
        /// <param name="info">The info.</param>
        public virtual void OnPropertyChanged(string info)
        {
            PropertyChangedEventHandler handler = this.PropertyChanged;
            if (handler != null)
            {
                handler(this, new PropertyChangedEventArgs(info));
            }
        }
    }
    #endregion

    #region TrackableCollection class
    public class TrackableCollection<T> : ObservableCollection<T>
    {

        /// <summary>
        /// Name of property
        /// </summary>
        private string propertyNameField;

        /// <summary>
        /// Occurs when [trackable collection changed].
        /// </summary>
        public virtual event NotifyTrackableCollectionChangedEventHandler TrackableCollectionChanged;

        /// <summary>
        /// Initializes a new instance of the <see cref="TrackableCollection&lt;T&gt;"/> class.
        /// </summary>
        /// <param name="propertyName">Name of the property.</param>
        public TrackableCollection(string propertyName)
        {
            propertyNameField = propertyName;
            base.CollectionChanged += TrackableCollection_CollectionChanged;
        }

        /// <summary>
        /// Handles the CollectionChanged event of the TrackableCollection control.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">The <see cref="System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        void TrackableCollection_CollectionChanged(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (this.TrackableCollectionChanged != null)
            {
                this.TrackableCollectionChanged(sender, e, this.propertyNameField);
            }
        }


    }
    #endregion

    #region PropertyValueStatesDictionary
    public class PropertyValueStatesDictionary : Dictionary<string, PropertyValueState>
    {
    }
    #endregion

    #region ObjectsRemovedFromCollectionProperties
    public class ObjectsRemovedFromCollectionProperties : Dictionary<string, ObjectList>
    {
    }
    #endregion

    #region ObjectsAddedToCollectionProperties
    public class ObjectsAddedToCollectionProperties : Dictionary<string, ObjectList>
    {
    }
    #endregion

    #region ObjectsOriginalFromCollectionProperties
    public class ObjectsOriginalFromCollectionProperties : Dictionary<string, ObjectList>
    {
    }
    #endregion

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-FormalExpression", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("FormalExpression", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionFormalExpression : EntityBase<ODMcomplexTypeDefinitionFormalExpression>
    {

        private string contextField;

        private string valueField;

        [XmlAttribute]
        public string Context
        {
            get
            {
                return this.contextField;
            }
            set
            {
                if ((this.contextField != null))
                {
                    if ((contextField.Equals(value) != true))
                    {
                        this.contextField = value;
                        this.OnPropertyChanged("Context", value);
                    }
                }
                else
                {
                    this.contextField = value;
                    this.OnPropertyChanged("Context", value);
                }
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ConditionDef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ConditionDef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionConditionDef : EntityBase<ODMcomplexTypeDefinitionConditionDef>
    {

        private ODMcomplexTypeDefinitionDescription descriptionField;

        private List<ODMcomplexTypeDefinitionFormalExpression> formalExpressionField;

        private List<ODMcomplexTypeDefinitionAlias> aliasField;

        private string oIDField;

        private string nameField;

        public ODMcomplexTypeDefinitionConditionDef()
        {
            this.aliasField = new List<ODMcomplexTypeDefinitionAlias>();
            this.formalExpressionField = new List<ODMcomplexTypeDefinitionFormalExpression>();
            this.descriptionField = new ODMcomplexTypeDefinitionDescription();
        }

        public ODMcomplexTypeDefinitionDescription Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description", value);
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description", value);
                }
            }
        }

        [XmlElement("FormalExpression")]
        public List<ODMcomplexTypeDefinitionFormalExpression> FormalExpression
        {
            get
            {
                return this.formalExpressionField;
            }
            set
            {
                if ((this.formalExpressionField != null))
                {
                    if ((formalExpressionField.Equals(value) != true))
                    {
                        this.formalExpressionField = value;
                        this.OnPropertyChanged("FormalExpression", value);
                    }
                }
                else
                {
                    this.formalExpressionField = value;
                    this.OnPropertyChanged("FormalExpression", value);
                }
            }
        }

        [XmlElement("Alias")]
        public List<ODMcomplexTypeDefinitionAlias> Alias
        {
            get
            {
                return this.aliasField;
            }
            set
            {
                if ((this.aliasField != null))
                {
                    if ((aliasField.Equals(value) != true))
                    {
                        this.aliasField = value;
                        this.OnPropertyChanged("Alias", value);
                    }
                }
                else
                {
                    this.aliasField = value;
                    this.OnPropertyChanged("Alias", value);
                }
            }
        }

        [XmlAttribute]
        public string OID
        {
            get
            {
                return this.oIDField;
            }
            set
            {
                if ((this.oIDField != null))
                {
                    if ((oIDField.Equals(value) != true))
                    {
                        this.oIDField = value;
                        this.OnPropertyChanged("OID", value);
                    }
                }
                else
                {
                    this.oIDField = value;
                    this.OnPropertyChanged("OID", value);
                }
            }
        }

        [XmlAttribute]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name", value);
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Description", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Description", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionDescription : EntityBase<ODMcomplexTypeDefinitionDescription>
    {

        private List<ODMcomplexTypeDefinitionTranslatedText> translatedTextField;

        public ODMcomplexTypeDefinitionDescription()
        {
            this.translatedTextField = new List<ODMcomplexTypeDefinitionTranslatedText>();
        }

        [XmlElement("TranslatedText")]
        public List<ODMcomplexTypeDefinitionTranslatedText> TranslatedText
        {
            get
            {
                return this.translatedTextField;
            }
            set
            {
                if ((this.translatedTextField != null))
                {
                    if ((translatedTextField.Equals(value) != true))
                    {
                        this.translatedTextField = value;
                        this.OnPropertyChanged("TranslatedText", value);
                    }
                }
                else
                {
                    this.translatedTextField = value;
                    this.OnPropertyChanged("TranslatedText", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-TranslatedText", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("TranslatedText", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionTranslatedText : EntityBase<ODMcomplexTypeDefinitionTranslatedText>
    {

        private string langField;

        private string valueField;

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.w3.org/XML/1998/namespace")]
        public string lang
        {
            get
            {
                return this.langField;
            }
            set
            {
                if ((this.langField != null))
                {
                    if ((langField.Equals(value) != true))
                    {
                        this.langField = value;
                        this.OnPropertyChanged("lang", value);
                    }
                }
                else
                {
                    this.langField = value;
                    this.OnPropertyChanged("lang", value);
                }
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Alias", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Alias", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionAlias : EntityBase<ODMcomplexTypeDefinitionAlias>
    {

        private string contextField;

        private string nameField;

        [XmlAttribute]
        public string Context
        {
            get
            {
                return this.contextField;
            }
            set
            {
                if ((this.contextField != null))
                {
                    if ((contextField.Equals(value) != true))
                    {
                        this.contextField = value;
                        this.OnPropertyChanged("Context", value);
                    }
                }
                else
                {
                    this.contextField = value;
                    this.OnPropertyChanged("Context", value);
                }
            }
        }

        [XmlAttribute]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name", value);
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-MethodDef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("MethodDef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionMethodDef : EntityBase<ODMcomplexTypeDefinitionMethodDef>
    {

        private ODMcomplexTypeDefinitionDescription descriptionField;

        private List<ODMcomplexTypeDefinitionFormalExpression> formalExpressionField;

        private List<ODMcomplexTypeDefinitionAlias> aliasField;

        private string oIDField;

        private string nameField;

        private MethodType typeField;

        private bool typeFieldSpecified;

        public ODMcomplexTypeDefinitionMethodDef()
        {
            this.aliasField = new List<ODMcomplexTypeDefinitionAlias>();
            this.formalExpressionField = new List<ODMcomplexTypeDefinitionFormalExpression>();
            this.descriptionField = new ODMcomplexTypeDefinitionDescription();
        }

        public ODMcomplexTypeDefinitionDescription Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description", value);
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description", value);
                }
            }
        }

        [XmlElement("FormalExpression")]
        public List<ODMcomplexTypeDefinitionFormalExpression> FormalExpression
        {
            get
            {
                return this.formalExpressionField;
            }
            set
            {
                if ((this.formalExpressionField != null))
                {
                    if ((formalExpressionField.Equals(value) != true))
                    {
                        this.formalExpressionField = value;
                        this.OnPropertyChanged("FormalExpression", value);
                    }
                }
                else
                {
                    this.formalExpressionField = value;
                    this.OnPropertyChanged("FormalExpression", value);
                }
            }
        }

        [XmlElement("Alias")]
        public List<ODMcomplexTypeDefinitionAlias> Alias
        {
            get
            {
                return this.aliasField;
            }
            set
            {
                if ((this.aliasField != null))
                {
                    if ((aliasField.Equals(value) != true))
                    {
                        this.aliasField = value;
                        this.OnPropertyChanged("Alias", value);
                    }
                }
                else
                {
                    this.aliasField = value;
                    this.OnPropertyChanged("Alias", value);
                }
            }
        }

        [XmlAttribute]
        public string OID
        {
            get
            {
                return this.oIDField;
            }
            set
            {
                if ((this.oIDField != null))
                {
                    if ((oIDField.Equals(value) != true))
                    {
                        this.oIDField = value;
                        this.OnPropertyChanged("OID", value);
                    }
                }
                else
                {
                    this.oIDField = value;
                    this.OnPropertyChanged("OID", value);
                }
            }
        }

        [XmlAttribute]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name", value);
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name", value);
                }
            }
        }

        [XmlAttribute]
        public MethodType Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                if ((typeField.Equals(value) != true))
                {
                    this.typeField = value;
                    this.OnPropertyChanged("Type", value);
                }
            }
        }

        [XmlIgnore]
        public bool TypeSpecified
        {
            get
            {
                return this.typeFieldSpecified;
            }
            set
            {
                if ((typeFieldSpecified.Equals(value) != true))
                {
                    this.typeFieldSpecified = value;
                    this.OnPropertyChanged("TypeSpecified", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    public enum MethodType
    {

        /// <remarks/>
        Computation,

        /// <remarks/>
        Imputation,

        /// <remarks/>
        Transpose,

        /// <remarks/>
        Other,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true, Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot(Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODM : EntityBase<ODM>
    {

        private List<ODMcomplexTypeDefinitionStudy> studyField;

        private List<ODMcomplexTypeDefinitionAdminData> adminDataField;

        private List<ODMcomplexTypeDefinitionReferenceData> referenceDataField;

        private List<ODMcomplexTypeDefinitionClinicalData> clinicalDataField;

        private List<ODMcomplexTypeDefinitionAssociation> associationField;

        private List<SignatureType> signatureField;

        private string descriptionField;

        private FileType fileTypeField;

        private Granularity granularityField;

        private bool granularityFieldSpecified;

        private YesOnly archivalField;

        private bool archivalFieldSpecified;

        private string fileOIDField;

        private System.DateTime creationDateTimeField;

        private string priorFileOIDField;

        private System.DateTime asOfDateTimeField;

        private bool asOfDateTimeFieldSpecified;

        private ODMVersion oDMVersionField;

        private bool oDMVersionFieldSpecified;

        private string originatorField;

        private string sourceSystemField;

        private string sourceSystemVersionField;

        private string idField;

        public ODM()
        {
            this.signatureField = new List<SignatureType>();
            this.associationField = new List<ODMcomplexTypeDefinitionAssociation>();
            this.clinicalDataField = new List<ODMcomplexTypeDefinitionClinicalData>();
            this.referenceDataField = new List<ODMcomplexTypeDefinitionReferenceData>();
            this.adminDataField = new List<ODMcomplexTypeDefinitionAdminData>();
            this.studyField = new List<ODMcomplexTypeDefinitionStudy>();
        }

        [XmlElement("Study")]
        public List<ODMcomplexTypeDefinitionStudy> Study
        {
            get
            {
                return this.studyField;
            }
            set
            {
                if ((this.studyField != null))
                {
                    if ((studyField.Equals(value) != true))
                    {
                        this.studyField = value;
                        this.OnPropertyChanged("Study", value);
                    }
                }
                else
                {
                    this.studyField = value;
                    this.OnPropertyChanged("Study", value);
                }
            }
        }

        [XmlElement("AdminData")]
        public List<ODMcomplexTypeDefinitionAdminData> AdminData
        {
            get
            {
                return this.adminDataField;
            }
            set
            {
                if ((this.adminDataField != null))
                {
                    if ((adminDataField.Equals(value) != true))
                    {
                        this.adminDataField = value;
                        this.OnPropertyChanged("AdminData", value);
                    }
                }
                else
                {
                    this.adminDataField = value;
                    this.OnPropertyChanged("AdminData", value);
                }
            }
        }

        [XmlElement("ReferenceData")]
        public List<ODMcomplexTypeDefinitionReferenceData> ReferenceData
        {
            get
            {
                return this.referenceDataField;
            }
            set
            {
                if ((this.referenceDataField != null))
                {
                    if ((referenceDataField.Equals(value) != true))
                    {
                        this.referenceDataField = value;
                        this.OnPropertyChanged("ReferenceData", value);
                    }
                }
                else
                {
                    this.referenceDataField = value;
                    this.OnPropertyChanged("ReferenceData", value);
                }
            }
        }

        [XmlElement("ClinicalData")]
        public List<ODMcomplexTypeDefinitionClinicalData> ClinicalData
        {
            get
            {
                return this.clinicalDataField;
            }
            set
            {
                if ((this.clinicalDataField != null))
                {
                    if ((clinicalDataField.Equals(value) != true))
                    {
                        this.clinicalDataField = value;
                        this.OnPropertyChanged("ClinicalData", value);
                    }
                }
                else
                {
                    this.clinicalDataField = value;
                    this.OnPropertyChanged("ClinicalData", value);
                }
            }
        }

        [XmlElement("Association")]
        public List<ODMcomplexTypeDefinitionAssociation> Association
        {
            get
            {
                return this.associationField;
            }
            set
            {
                if ((this.associationField != null))
                {
                    if ((associationField.Equals(value) != true))
                    {
                        this.associationField = value;
                        this.OnPropertyChanged("Association", value);
                    }
                }
                else
                {
                    this.associationField = value;
                    this.OnPropertyChanged("Association", value);
                }
            }
        }

        [XmlElement("Signature", Namespace = "http://www.w3.org/2000/09/xmldsig#")]
        public List<SignatureType> Signature
        {
            get
            {
                return this.signatureField;
            }
            set
            {
                if ((this.signatureField != null))
                {
                    if ((signatureField.Equals(value) != true))
                    {
                        this.signatureField = value;
                        this.OnPropertyChanged("Signature", value);
                    }
                }
                else
                {
                    this.signatureField = value;
                    this.OnPropertyChanged("Signature", value);
                }
            }
        }

        [XmlAttribute]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description", value);
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description", value);
                }
            }
        }

        [XmlAttribute]
        public FileType FileType
        {
            get
            {
                return this.fileTypeField;
            }
            set
            {
                if ((fileTypeField.Equals(value) != true))
                {
                    this.fileTypeField = value;
                    this.OnPropertyChanged("FileType", value);
                }
            }
        }

        [XmlAttribute]
        public Granularity Granularity
        {
            get
            {
                return this.granularityField;
            }
            set
            {
                if ((granularityField.Equals(value) != true))
                {
                    this.granularityField = value;
                    this.OnPropertyChanged("Granularity", value);
                }
            }
        }

        [XmlIgnore]
        public bool GranularitySpecified
        {
            get
            {
                return this.granularityFieldSpecified;
            }
            set
            {
                if ((granularityFieldSpecified.Equals(value) != true))
                {
                    this.granularityFieldSpecified = value;
                    this.OnPropertyChanged("GranularitySpecified", value);
                }
            }
        }

        [XmlAttribute]
        public YesOnly Archival
        {
            get
            {
                return this.archivalField;
            }
            set
            {
                if ((archivalField.Equals(value) != true))
                {
                    this.archivalField = value;
                    this.OnPropertyChanged("Archival", value);
                }
            }
        }

        [XmlIgnore]
        public bool ArchivalSpecified
        {
            get
            {
                return this.archivalFieldSpecified;
            }
            set
            {
                if ((archivalFieldSpecified.Equals(value) != true))
                {
                    this.archivalFieldSpecified = value;
                    this.OnPropertyChanged("ArchivalSpecified", value);
                }
            }
        }

        [XmlAttribute]
        public string FileOID
        {
            get
            {
                return this.fileOIDField;
            }
            set
            {
                if ((this.fileOIDField != null))
                {
                    if ((fileOIDField.Equals(value) != true))
                    {
                        this.fileOIDField = value;
                        this.OnPropertyChanged("FileOID", value);
                    }
                }
                else
                {
                    this.fileOIDField = value;
                    this.OnPropertyChanged("FileOID", value);
                }
            }
        }

        [XmlAttribute]
        public System.DateTime CreationDateTime
        {
            get
            {
                return this.creationDateTimeField;
            }
            set
            {
                if ((creationDateTimeField.Equals(value) != true))
                {
                    this.creationDateTimeField = value;
                    this.OnPropertyChanged("CreationDateTime", value);
                }
            }
        }

        [XmlAttribute]
        public string PriorFileOID
        {
            get
            {
                return this.priorFileOIDField;
            }
            set
            {
                if ((this.priorFileOIDField != null))
                {
                    if ((priorFileOIDField.Equals(value) != true))
                    {
                        this.priorFileOIDField = value;
                        this.OnPropertyChanged("PriorFileOID", value);
                    }
                }
                else
                {
                    this.priorFileOIDField = value;
                    this.OnPropertyChanged("PriorFileOID", value);
                }
            }
        }

        [XmlAttribute]
        public System.DateTime AsOfDateTime
        {
            get
            {
                return this.asOfDateTimeField;
            }
            set
            {
                if ((asOfDateTimeField.Equals(value) != true))
                {
                    this.asOfDateTimeField = value;
                    this.OnPropertyChanged("AsOfDateTime", value);
                }
            }
        }

        [XmlIgnore]
        public bool AsOfDateTimeSpecified
        {
            get
            {
                return this.asOfDateTimeFieldSpecified;
            }
            set
            {
                if ((asOfDateTimeFieldSpecified.Equals(value) != true))
                {
                    this.asOfDateTimeFieldSpecified = value;
                    this.OnPropertyChanged("AsOfDateTimeSpecified", value);
                }
            }
        }

        [XmlAttribute]
        public ODMVersion ODMVersion
        {
            get
            {
                return this.oDMVersionField;
            }
            set
            {
                if ((oDMVersionField.Equals(value) != true))
                {
                    this.oDMVersionField = value;
                    this.OnPropertyChanged("ODMVersion", value);
                }
            }
        }

        [XmlIgnore]
        public bool ODMVersionSpecified
        {
            get
            {
                return this.oDMVersionFieldSpecified;
            }
            set
            {
                if ((oDMVersionFieldSpecified.Equals(value) != true))
                {
                    this.oDMVersionFieldSpecified = value;
                    this.OnPropertyChanged("ODMVersionSpecified", value);
                }
            }
        }

        [XmlAttribute]
        public string Originator
        {
            get
            {
                return this.originatorField;
            }
            set
            {
                if ((this.originatorField != null))
                {
                    if ((originatorField.Equals(value) != true))
                    {
                        this.originatorField = value;
                        this.OnPropertyChanged("Originator", value);
                    }
                }
                else
                {
                    this.originatorField = value;
                    this.OnPropertyChanged("Originator", value);
                }
            }
        }

        [XmlAttribute]
        public string SourceSystem
        {
            get
            {
                return this.sourceSystemField;
            }
            set
            {
                if ((this.sourceSystemField != null))
                {
                    if ((sourceSystemField.Equals(value) != true))
                    {
                        this.sourceSystemField = value;
                        this.OnPropertyChanged("SourceSystem", value);
                    }
                }
                else
                {
                    this.sourceSystemField = value;
                    this.OnPropertyChanged("SourceSystem", value);
                }
            }
        }

        [XmlAttribute]
        public string SourceSystemVersion
        {
            get
            {
                return this.sourceSystemVersionField;
            }
            set
            {
                if ((this.sourceSystemVersionField != null))
                {
                    if ((sourceSystemVersionField.Equals(value) != true))
                    {
                        this.sourceSystemVersionField = value;
                        this.OnPropertyChanged("SourceSystemVersion", value);
                    }
                }
                else
                {
                    this.sourceSystemVersionField = value;
                    this.OnPropertyChanged("SourceSystemVersion", value);
                }
            }
        }

        [XmlAttribute(DataType = "ID")]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                if ((this.idField != null))
                {
                    if ((idField.Equals(value) != true))
                    {
                        this.idField = value;
                        this.OnPropertyChanged("ID", value);
                    }
                }
                else
                {
                    this.idField = value;
                    this.OnPropertyChanged("ID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Study", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Study", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionStudy : EntityBase<ODMcomplexTypeDefinitionStudy>
    {

        private ODMcomplexTypeDefinitionGlobalVariables globalVariablesField;

        private ODMcomplexTypeDefinitionBasicDefinitions basicDefinitionsField;

        private List<ODMcomplexTypeDefinitionMetaDataVersion> metaDataVersionField;

        private string oIDField;

        public ODMcomplexTypeDefinitionStudy()
        {
            this.metaDataVersionField = new List<ODMcomplexTypeDefinitionMetaDataVersion>();
            this.basicDefinitionsField = new ODMcomplexTypeDefinitionBasicDefinitions();
            this.globalVariablesField = new ODMcomplexTypeDefinitionGlobalVariables();
        }

        public ODMcomplexTypeDefinitionGlobalVariables GlobalVariables
        {
            get
            {
                return this.globalVariablesField;
            }
            set
            {
                if ((this.globalVariablesField != null))
                {
                    if ((globalVariablesField.Equals(value) != true))
                    {
                        this.globalVariablesField = value;
                        this.OnPropertyChanged("GlobalVariables", value);
                    }
                }
                else
                {
                    this.globalVariablesField = value;
                    this.OnPropertyChanged("GlobalVariables", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionBasicDefinitions BasicDefinitions
        {
            get
            {
                return this.basicDefinitionsField;
            }
            set
            {
                if ((this.basicDefinitionsField != null))
                {
                    if ((basicDefinitionsField.Equals(value) != true))
                    {
                        this.basicDefinitionsField = value;
                        this.OnPropertyChanged("BasicDefinitions", value);
                    }
                }
                else
                {
                    this.basicDefinitionsField = value;
                    this.OnPropertyChanged("BasicDefinitions", value);
                }
            }
        }

        [XmlElement("MetaDataVersion")]
        public List<ODMcomplexTypeDefinitionMetaDataVersion> MetaDataVersion
        {
            get
            {
                return this.metaDataVersionField;
            }
            set
            {
                if ((this.metaDataVersionField != null))
                {
                    if ((metaDataVersionField.Equals(value) != true))
                    {
                        this.metaDataVersionField = value;
                        this.OnPropertyChanged("MetaDataVersion", value);
                    }
                }
                else
                {
                    this.metaDataVersionField = value;
                    this.OnPropertyChanged("MetaDataVersion", value);
                }
            }
        }

        [XmlAttribute]
        public string OID
        {
            get
            {
                return this.oIDField;
            }
            set
            {
                if ((this.oIDField != null))
                {
                    if ((oIDField.Equals(value) != true))
                    {
                        this.oIDField = value;
                        this.OnPropertyChanged("OID", value);
                    }
                }
                else
                {
                    this.oIDField = value;
                    this.OnPropertyChanged("OID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-GlobalVariables", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("GlobalVariables", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionGlobalVariables : EntityBase<ODMcomplexTypeDefinitionGlobalVariables>
    {

        private ODMcomplexTypeDefinitionStudyName studyNameField;

        private ODMcomplexTypeDefinitionStudyDescription studyDescriptionField;

        private ODMcomplexTypeDefinitionProtocolName protocolNameField;

        public ODMcomplexTypeDefinitionGlobalVariables()
        {
            this.protocolNameField = new ODMcomplexTypeDefinitionProtocolName();
            this.studyDescriptionField = new ODMcomplexTypeDefinitionStudyDescription();
            this.studyNameField = new ODMcomplexTypeDefinitionStudyName();
        }

        public ODMcomplexTypeDefinitionStudyName StudyName
        {
            get
            {
                return this.studyNameField;
            }
            set
            {
                if ((this.studyNameField != null))
                {
                    if ((studyNameField.Equals(value) != true))
                    {
                        this.studyNameField = value;
                        this.OnPropertyChanged("StudyName", value);
                    }
                }
                else
                {
                    this.studyNameField = value;
                    this.OnPropertyChanged("StudyName", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionStudyDescription StudyDescription
        {
            get
            {
                return this.studyDescriptionField;
            }
            set
            {
                if ((this.studyDescriptionField != null))
                {
                    if ((studyDescriptionField.Equals(value) != true))
                    {
                        this.studyDescriptionField = value;
                        this.OnPropertyChanged("StudyDescription", value);
                    }
                }
                else
                {
                    this.studyDescriptionField = value;
                    this.OnPropertyChanged("StudyDescription", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionProtocolName ProtocolName
        {
            get
            {
                return this.protocolNameField;
            }
            set
            {
                if ((this.protocolNameField != null))
                {
                    if ((protocolNameField.Equals(value) != true))
                    {
                        this.protocolNameField = value;
                        this.OnPropertyChanged("ProtocolName", value);
                    }
                }
                else
                {
                    this.protocolNameField = value;
                    this.OnPropertyChanged("ProtocolName", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-StudyName", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("StudyName", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionStudyName : EntityBase<ODMcomplexTypeDefinitionStudyName>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-StudyDescription", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("StudyDescription", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionStudyDescription : EntityBase<ODMcomplexTypeDefinitionStudyDescription>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ProtocolName", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ProtocolName", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionProtocolName : EntityBase<ODMcomplexTypeDefinitionProtocolName>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-BasicDefinitions", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("BasicDefinitions", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionBasicDefinitions : EntityBase<ODMcomplexTypeDefinitionBasicDefinitions>
    {

        private List<ODMcomplexTypeDefinitionMeasurementUnit> measurementUnitField;

        public ODMcomplexTypeDefinitionBasicDefinitions()
        {
            this.measurementUnitField = new List<ODMcomplexTypeDefinitionMeasurementUnit>();
        }

        [XmlElement("MeasurementUnit")]
        public List<ODMcomplexTypeDefinitionMeasurementUnit> MeasurementUnit
        {
            get
            {
                return this.measurementUnitField;
            }
            set
            {
                if ((this.measurementUnitField != null))
                {
                    if ((measurementUnitField.Equals(value) != true))
                    {
                        this.measurementUnitField = value;
                        this.OnPropertyChanged("MeasurementUnit", value);
                    }
                }
                else
                {
                    this.measurementUnitField = value;
                    this.OnPropertyChanged("MeasurementUnit", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-MeasurementUnit", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("MeasurementUnit", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionMeasurementUnit : EntityBase<ODMcomplexTypeDefinitionMeasurementUnit>
    {

        private ODMcomplexTypeDefinitionSymbol symbolField;

        private List<ODMcomplexTypeDefinitionAlias> aliasField;

        private string oIDField;

        private string nameField;

        public ODMcomplexTypeDefinitionMeasurementUnit()
        {
            this.aliasField = new List<ODMcomplexTypeDefinitionAlias>();
            this.symbolField = new ODMcomplexTypeDefinitionSymbol();
        }

        public ODMcomplexTypeDefinitionSymbol Symbol
        {
            get
            {
                return this.symbolField;
            }
            set
            {
                if ((this.symbolField != null))
                {
                    if ((symbolField.Equals(value) != true))
                    {
                        this.symbolField = value;
                        this.OnPropertyChanged("Symbol", value);
                    }
                }
                else
                {
                    this.symbolField = value;
                    this.OnPropertyChanged("Symbol", value);
                }
            }
        }

        [XmlElement("Alias")]
        public List<ODMcomplexTypeDefinitionAlias> Alias
        {
            get
            {
                return this.aliasField;
            }
            set
            {
                if ((this.aliasField != null))
                {
                    if ((aliasField.Equals(value) != true))
                    {
                        this.aliasField = value;
                        this.OnPropertyChanged("Alias", value);
                    }
                }
                else
                {
                    this.aliasField = value;
                    this.OnPropertyChanged("Alias", value);
                }
            }
        }

        [XmlAttribute]
        public string OID
        {
            get
            {
                return this.oIDField;
            }
            set
            {
                if ((this.oIDField != null))
                {
                    if ((oIDField.Equals(value) != true))
                    {
                        this.oIDField = value;
                        this.OnPropertyChanged("OID", value);
                    }
                }
                else
                {
                    this.oIDField = value;
                    this.OnPropertyChanged("OID", value);
                }
            }
        }

        [XmlAttribute]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name", value);
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Symbol", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Symbol", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionSymbol : EntityBase<ODMcomplexTypeDefinitionSymbol>
    {

        private List<ODMcomplexTypeDefinitionTranslatedText> translatedTextField;

        public ODMcomplexTypeDefinitionSymbol()
        {
            this.translatedTextField = new List<ODMcomplexTypeDefinitionTranslatedText>();
        }

        [XmlElement("TranslatedText")]
        public List<ODMcomplexTypeDefinitionTranslatedText> TranslatedText
        {
            get
            {
                return this.translatedTextField;
            }
            set
            {
                if ((this.translatedTextField != null))
                {
                    if ((translatedTextField.Equals(value) != true))
                    {
                        this.translatedTextField = value;
                        this.OnPropertyChanged("TranslatedText", value);
                    }
                }
                else
                {
                    this.translatedTextField = value;
                    this.OnPropertyChanged("TranslatedText", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-MetaDataVersion", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("MetaDataVersion", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionMetaDataVersion : EntityBase<ODMcomplexTypeDefinitionMetaDataVersion>
    {

        private ODMcomplexTypeDefinitionInclude includeField;

        private ODMcomplexTypeDefinitionProtocol protocolField;

        private List<ODMcomplexTypeDefinitionStudyEventDef> studyEventDefField;

        private List<ODMcomplexTypeDefinitionFormDef> formDefField;

        private List<ODMcomplexTypeDefinitionItemGroupDef> itemGroupDefField;

        private List<ODMcomplexTypeDefinitionItemDef> itemDefField;

        private List<ODMcomplexTypeDefinitionCodeList> codeListField;

        private List<ODMcomplexTypeDefinitionImputationMethod> imputationMethodField;

        private List<ODMcomplexTypeDefinitionPresentation> presentationField;

        private List<ODMcomplexTypeDefinitionConditionDef> conditionDefField;

        private List<ODMcomplexTypeDefinitionMethodDef> methodDefField;

        private string oIDField;

        private string nameField;

        private string descriptionField;

        public ODMcomplexTypeDefinitionMetaDataVersion()
        {
            this.methodDefField = new List<ODMcomplexTypeDefinitionMethodDef>();
            this.conditionDefField = new List<ODMcomplexTypeDefinitionConditionDef>();
            this.presentationField = new List<ODMcomplexTypeDefinitionPresentation>();
            this.imputationMethodField = new List<ODMcomplexTypeDefinitionImputationMethod>();
            this.codeListField = new List<ODMcomplexTypeDefinitionCodeList>();
            this.itemDefField = new List<ODMcomplexTypeDefinitionItemDef>();
            this.itemGroupDefField = new List<ODMcomplexTypeDefinitionItemGroupDef>();
            this.formDefField = new List<ODMcomplexTypeDefinitionFormDef>();
            this.studyEventDefField = new List<ODMcomplexTypeDefinitionStudyEventDef>();
            this.protocolField = new ODMcomplexTypeDefinitionProtocol();
            this.includeField = new ODMcomplexTypeDefinitionInclude();
        }

        public ODMcomplexTypeDefinitionInclude Include
        {
            get
            {
                return this.includeField;
            }
            set
            {
                if ((this.includeField != null))
                {
                    if ((includeField.Equals(value) != true))
                    {
                        this.includeField = value;
                        this.OnPropertyChanged("Include", value);
                    }
                }
                else
                {
                    this.includeField = value;
                    this.OnPropertyChanged("Include", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionProtocol Protocol
        {
            get
            {
                return this.protocolField;
            }
            set
            {
                if ((this.protocolField != null))
                {
                    if ((protocolField.Equals(value) != true))
                    {
                        this.protocolField = value;
                        this.OnPropertyChanged("Protocol", value);
                    }
                }
                else
                {
                    this.protocolField = value;
                    this.OnPropertyChanged("Protocol", value);
                }
            }
        }

        [XmlElement("StudyEventDef")]
        public List<ODMcomplexTypeDefinitionStudyEventDef> StudyEventDef
        {
            get
            {
                return this.studyEventDefField;
            }
            set
            {
                if ((this.studyEventDefField != null))
                {
                    if ((studyEventDefField.Equals(value) != true))
                    {
                        this.studyEventDefField = value;
                        this.OnPropertyChanged("StudyEventDef", value);
                    }
                }
                else
                {
                    this.studyEventDefField = value;
                    this.OnPropertyChanged("StudyEventDef", value);
                }
            }
        }

        [XmlElement("FormDef")]
        public List<ODMcomplexTypeDefinitionFormDef> FormDef
        {
            get
            {
                return this.formDefField;
            }
            set
            {
                if ((this.formDefField != null))
                {
                    if ((formDefField.Equals(value) != true))
                    {
                        this.formDefField = value;
                        this.OnPropertyChanged("FormDef", value);
                    }
                }
                else
                {
                    this.formDefField = value;
                    this.OnPropertyChanged("FormDef", value);
                }
            }
        }

        [XmlElement("ItemGroupDef")]
        public List<ODMcomplexTypeDefinitionItemGroupDef> ItemGroupDef
        {
            get
            {
                return this.itemGroupDefField;
            }
            set
            {
                if ((this.itemGroupDefField != null))
                {
                    if ((itemGroupDefField.Equals(value) != true))
                    {
                        this.itemGroupDefField = value;
                        this.OnPropertyChanged("ItemGroupDef", value);
                    }
                }
                else
                {
                    this.itemGroupDefField = value;
                    this.OnPropertyChanged("ItemGroupDef", value);
                }
            }
        }

        [XmlElement("ItemDef")]
        public List<ODMcomplexTypeDefinitionItemDef> ItemDef
        {
            get
            {
                return this.itemDefField;
            }
            set
            {
                if ((this.itemDefField != null))
                {
                    if ((itemDefField.Equals(value) != true))
                    {
                        this.itemDefField = value;
                        this.OnPropertyChanged("ItemDef", value);
                    }
                }
                else
                {
                    this.itemDefField = value;
                    this.OnPropertyChanged("ItemDef", value);
                }
            }
        }

        [XmlElement("CodeList")]
        public List<ODMcomplexTypeDefinitionCodeList> CodeList
        {
            get
            {
                return this.codeListField;
            }
            set
            {
                if ((this.codeListField != null))
                {
                    if ((codeListField.Equals(value) != true))
                    {
                        this.codeListField = value;
                        this.OnPropertyChanged("CodeList", value);
                    }
                }
                else
                {
                    this.codeListField = value;
                    this.OnPropertyChanged("CodeList", value);
                }
            }
        }

        [XmlElement("ImputationMethod")]
        public List<ODMcomplexTypeDefinitionImputationMethod> ImputationMethod
        {
            get
            {
                return this.imputationMethodField;
            }
            set
            {
                if ((this.imputationMethodField != null))
                {
                    if ((imputationMethodField.Equals(value) != true))
                    {
                        this.imputationMethodField = value;
                        this.OnPropertyChanged("ImputationMethod", value);
                    }
                }
                else
                {
                    this.imputationMethodField = value;
                    this.OnPropertyChanged("ImputationMethod", value);
                }
            }
        }

        [XmlElement("Presentation")]
        public List<ODMcomplexTypeDefinitionPresentation> Presentation
        {
            get
            {
                return this.presentationField;
            }
            set
            {
                if ((this.presentationField != null))
                {
                    if ((presentationField.Equals(value) != true))
                    {
                        this.presentationField = value;
                        this.OnPropertyChanged("Presentation", value);
                    }
                }
                else
                {
                    this.presentationField = value;
                    this.OnPropertyChanged("Presentation", value);
                }
            }
        }

        [XmlElement("ConditionDef")]
        public List<ODMcomplexTypeDefinitionConditionDef> ConditionDef
        {
            get
            {
                return this.conditionDefField;
            }
            set
            {
                if ((this.conditionDefField != null))
                {
                    if ((conditionDefField.Equals(value) != true))
                    {
                        this.conditionDefField = value;
                        this.OnPropertyChanged("ConditionDef", value);
                    }
                }
                else
                {
                    this.conditionDefField = value;
                    this.OnPropertyChanged("ConditionDef", value);
                }
            }
        }

        [XmlElement("MethodDef")]
        public List<ODMcomplexTypeDefinitionMethodDef> MethodDef
        {
            get
            {
                return this.methodDefField;
            }
            set
            {
                if ((this.methodDefField != null))
                {
                    if ((methodDefField.Equals(value) != true))
                    {
                        this.methodDefField = value;
                        this.OnPropertyChanged("MethodDef", value);
                    }
                }
                else
                {
                    this.methodDefField = value;
                    this.OnPropertyChanged("MethodDef", value);
                }
            }
        }

        [XmlAttribute]
        public string OID
        {
            get
            {
                return this.oIDField;
            }
            set
            {
                if ((this.oIDField != null))
                {
                    if ((oIDField.Equals(value) != true))
                    {
                        this.oIDField = value;
                        this.OnPropertyChanged("OID", value);
                    }
                }
                else
                {
                    this.oIDField = value;
                    this.OnPropertyChanged("OID", value);
                }
            }
        }

        [XmlAttribute]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name", value);
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name", value);
                }
            }
        }

        [XmlAttribute]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description", value);
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Include", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Include", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionInclude : EntityBase<ODMcomplexTypeDefinitionInclude>
    {

        private string studyOIDField;

        private string metaDataVersionOIDField;

        [XmlAttribute]
        public string StudyOID
        {
            get
            {
                return this.studyOIDField;
            }
            set
            {
                if ((this.studyOIDField != null))
                {
                    if ((studyOIDField.Equals(value) != true))
                    {
                        this.studyOIDField = value;
                        this.OnPropertyChanged("StudyOID", value);
                    }
                }
                else
                {
                    this.studyOIDField = value;
                    this.OnPropertyChanged("StudyOID", value);
                }
            }
        }

        [XmlAttribute]
        public string MetaDataVersionOID
        {
            get
            {
                return this.metaDataVersionOIDField;
            }
            set
            {
                if ((this.metaDataVersionOIDField != null))
                {
                    if ((metaDataVersionOIDField.Equals(value) != true))
                    {
                        this.metaDataVersionOIDField = value;
                        this.OnPropertyChanged("MetaDataVersionOID", value);
                    }
                }
                else
                {
                    this.metaDataVersionOIDField = value;
                    this.OnPropertyChanged("MetaDataVersionOID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Protocol", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Protocol", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionProtocol : EntityBase<ODMcomplexTypeDefinitionProtocol>
    {

        private ODMcomplexTypeDefinitionDescription descriptionField;

        private List<ODMcomplexTypeDefinitionStudyEventRef> studyEventRefField;

        private List<ODMcomplexTypeDefinitionAlias> aliasField;

        public ODMcomplexTypeDefinitionProtocol()
        {
            this.aliasField = new List<ODMcomplexTypeDefinitionAlias>();
            this.studyEventRefField = new List<ODMcomplexTypeDefinitionStudyEventRef>();
            this.descriptionField = new ODMcomplexTypeDefinitionDescription();
        }

        public ODMcomplexTypeDefinitionDescription Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description", value);
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description", value);
                }
            }
        }

        [XmlElement("StudyEventRef")]
        public List<ODMcomplexTypeDefinitionStudyEventRef> StudyEventRef
        {
            get
            {
                return this.studyEventRefField;
            }
            set
            {
                if ((this.studyEventRefField != null))
                {
                    if ((studyEventRefField.Equals(value) != true))
                    {
                        this.studyEventRefField = value;
                        this.OnPropertyChanged("StudyEventRef", value);
                    }
                }
                else
                {
                    this.studyEventRefField = value;
                    this.OnPropertyChanged("StudyEventRef", value);
                }
            }
        }

        [XmlElement("Alias")]
        public List<ODMcomplexTypeDefinitionAlias> Alias
        {
            get
            {
                return this.aliasField;
            }
            set
            {
                if ((this.aliasField != null))
                {
                    if ((aliasField.Equals(value) != true))
                    {
                        this.aliasField = value;
                        this.OnPropertyChanged("Alias", value);
                    }
                }
                else
                {
                    this.aliasField = value;
                    this.OnPropertyChanged("Alias", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-StudyEventRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("StudyEventRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionStudyEventRef : EntityBase<ODMcomplexTypeDefinitionStudyEventRef>
    {

        private string studyEventOIDField;

        private string orderNumberField;

        private YesOrNo mandatoryField;

        private string collectionExceptionConditionOIDField;

        [XmlAttribute]
        public string StudyEventOID
        {
            get
            {
                return this.studyEventOIDField;
            }
            set
            {
                if ((this.studyEventOIDField != null))
                {
                    if ((studyEventOIDField.Equals(value) != true))
                    {
                        this.studyEventOIDField = value;
                        this.OnPropertyChanged("StudyEventOID", value);
                    }
                }
                else
                {
                    this.studyEventOIDField = value;
                    this.OnPropertyChanged("StudyEventOID", value);
                }
            }
        }

        [XmlAttribute(DataType = "integer")]
        public string OrderNumber
        {
            get
            {
                return this.orderNumberField;
            }
            set
            {
                if ((this.orderNumberField != null))
                {
                    if ((orderNumberField.Equals(value) != true))
                    {
                        this.orderNumberField = value;
                        this.OnPropertyChanged("OrderNumber", value);
                    }
                }
                else
                {
                    this.orderNumberField = value;
                    this.OnPropertyChanged("OrderNumber", value);
                }
            }
        }

        [XmlAttribute]
        public YesOrNo Mandatory
        {
            get
            {
                return this.mandatoryField;
            }
            set
            {
                if ((mandatoryField.Equals(value) != true))
                {
                    this.mandatoryField = value;
                    this.OnPropertyChanged("Mandatory", value);
                }
            }
        }

        [XmlAttribute]
        public string CollectionExceptionConditionOID
        {
            get
            {
                return this.collectionExceptionConditionOIDField;
            }
            set
            {
                if ((this.collectionExceptionConditionOIDField != null))
                {
                    if ((collectionExceptionConditionOIDField.Equals(value) != true))
                    {
                        this.collectionExceptionConditionOIDField = value;
                        this.OnPropertyChanged("CollectionExceptionConditionOID", value);
                    }
                }
                else
                {
                    this.collectionExceptionConditionOIDField = value;
                    this.OnPropertyChanged("CollectionExceptionConditionOID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    public enum YesOrNo
    {

        /// <remarks/>
        Yes,

        /// <remarks/>
        No,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-StudyEventDef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("StudyEventDef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionStudyEventDef : EntityBase<ODMcomplexTypeDefinitionStudyEventDef>
    {

        private ODMcomplexTypeDefinitionDescription descriptionField;

        private List<ODMcomplexTypeDefinitionFormRef> formRefField;

        private List<ODMcomplexTypeDefinitionAlias> aliasField;

        private string oIDField;

        private string nameField;

        private YesOrNo repeatingField;

        private EventType typeField;

        private string categoryField;

        public ODMcomplexTypeDefinitionStudyEventDef()
        {
            this.aliasField = new List<ODMcomplexTypeDefinitionAlias>();
            this.formRefField = new List<ODMcomplexTypeDefinitionFormRef>();
            this.descriptionField = new ODMcomplexTypeDefinitionDescription();
        }

        public ODMcomplexTypeDefinitionDescription Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description", value);
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description", value);
                }
            }
        }

        [XmlElement("FormRef")]
        public List<ODMcomplexTypeDefinitionFormRef> FormRef
        {
            get
            {
                return this.formRefField;
            }
            set
            {
                if ((this.formRefField != null))
                {
                    if ((formRefField.Equals(value) != true))
                    {
                        this.formRefField = value;
                        this.OnPropertyChanged("FormRef", value);
                    }
                }
                else
                {
                    this.formRefField = value;
                    this.OnPropertyChanged("FormRef", value);
                }
            }
        }

        [XmlElement("Alias")]
        public List<ODMcomplexTypeDefinitionAlias> Alias
        {
            get
            {
                return this.aliasField;
            }
            set
            {
                if ((this.aliasField != null))
                {
                    if ((aliasField.Equals(value) != true))
                    {
                        this.aliasField = value;
                        this.OnPropertyChanged("Alias", value);
                    }
                }
                else
                {
                    this.aliasField = value;
                    this.OnPropertyChanged("Alias", value);
                }
            }
        }

        [XmlAttribute]
        public string OID
        {
            get
            {
                return this.oIDField;
            }
            set
            {
                if ((this.oIDField != null))
                {
                    if ((oIDField.Equals(value) != true))
                    {
                        this.oIDField = value;
                        this.OnPropertyChanged("OID", value);
                    }
                }
                else
                {
                    this.oIDField = value;
                    this.OnPropertyChanged("OID", value);
                }
            }
        }

        [XmlAttribute]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name", value);
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name", value);
                }
            }
        }

        [XmlAttribute]
        public YesOrNo Repeating
        {
            get
            {
                return this.repeatingField;
            }
            set
            {
                if ((repeatingField.Equals(value) != true))
                {
                    this.repeatingField = value;
                    this.OnPropertyChanged("Repeating", value);
                }
            }
        }

        [XmlAttribute]
        public EventType Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                if ((typeField.Equals(value) != true))
                {
                    this.typeField = value;
                    this.OnPropertyChanged("Type", value);
                }
            }
        }

        [XmlAttribute]
        public string Category
        {
            get
            {
                return this.categoryField;
            }
            set
            {
                if ((this.categoryField != null))
                {
                    if ((categoryField.Equals(value) != true))
                    {
                        this.categoryField = value;
                        this.OnPropertyChanged("Category", value);
                    }
                }
                else
                {
                    this.categoryField = value;
                    this.OnPropertyChanged("Category", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-FormRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("FormRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionFormRef : EntityBase<ODMcomplexTypeDefinitionFormRef>
    {

        private string formOIDField;

        private string orderNumberField;

        private YesOrNo mandatoryField;

        private string collectionExceptionConditionOIDField;

        [XmlAttribute]
        public string FormOID
        {
            get
            {
                return this.formOIDField;
            }
            set
            {
                if ((this.formOIDField != null))
                {
                    if ((formOIDField.Equals(value) != true))
                    {
                        this.formOIDField = value;
                        this.OnPropertyChanged("FormOID", value);
                    }
                }
                else
                {
                    this.formOIDField = value;
                    this.OnPropertyChanged("FormOID", value);
                }
            }
        }

        [XmlAttribute(DataType = "integer")]
        public string OrderNumber
        {
            get
            {
                return this.orderNumberField;
            }
            set
            {
                if ((this.orderNumberField != null))
                {
                    if ((orderNumberField.Equals(value) != true))
                    {
                        this.orderNumberField = value;
                        this.OnPropertyChanged("OrderNumber", value);
                    }
                }
                else
                {
                    this.orderNumberField = value;
                    this.OnPropertyChanged("OrderNumber", value);
                }
            }
        }

        [XmlAttribute]
        public YesOrNo Mandatory
        {
            get
            {
                return this.mandatoryField;
            }
            set
            {
                if ((mandatoryField.Equals(value) != true))
                {
                    this.mandatoryField = value;
                    this.OnPropertyChanged("Mandatory", value);
                }
            }
        }

        [XmlAttribute]
        public string CollectionExceptionConditionOID
        {
            get
            {
                return this.collectionExceptionConditionOIDField;
            }
            set
            {
                if ((this.collectionExceptionConditionOIDField != null))
                {
                    if ((collectionExceptionConditionOIDField.Equals(value) != true))
                    {
                        this.collectionExceptionConditionOIDField = value;
                        this.OnPropertyChanged("CollectionExceptionConditionOID", value);
                    }
                }
                else
                {
                    this.collectionExceptionConditionOIDField = value;
                    this.OnPropertyChanged("CollectionExceptionConditionOID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    public enum EventType
    {

        /// <remarks/>
        Scheduled,

        /// <remarks/>
        Unscheduled,

        /// <remarks/>
        Common,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-FormDef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("FormDef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionFormDef : EntityBase<ODMcomplexTypeDefinitionFormDef>
    {

        private ODMcomplexTypeDefinitionDescription descriptionField;

        private List<ODMcomplexTypeDefinitionItemGroupRef> itemGroupRefField;

        private List<ODMcomplexTypeDefinitionArchiveLayout> archiveLayoutField;

        private List<ODMcomplexTypeDefinitionAlias> aliasField;

        private string oIDField;

        private string nameField;

        private YesOrNo repeatingField;

        public ODMcomplexTypeDefinitionFormDef()
        {
            this.aliasField = new List<ODMcomplexTypeDefinitionAlias>();
            this.archiveLayoutField = new List<ODMcomplexTypeDefinitionArchiveLayout>();
            this.itemGroupRefField = new List<ODMcomplexTypeDefinitionItemGroupRef>();
            this.descriptionField = new ODMcomplexTypeDefinitionDescription();
        }

        public ODMcomplexTypeDefinitionDescription Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description", value);
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description", value);
                }
            }
        }

        [XmlElement("ItemGroupRef")]
        public List<ODMcomplexTypeDefinitionItemGroupRef> ItemGroupRef
        {
            get
            {
                return this.itemGroupRefField;
            }
            set
            {
                if ((this.itemGroupRefField != null))
                {
                    if ((itemGroupRefField.Equals(value) != true))
                    {
                        this.itemGroupRefField = value;
                        this.OnPropertyChanged("ItemGroupRef", value);
                    }
                }
                else
                {
                    this.itemGroupRefField = value;
                    this.OnPropertyChanged("ItemGroupRef", value);
                }
            }
        }

        [XmlElement("ArchiveLayout")]
        public List<ODMcomplexTypeDefinitionArchiveLayout> ArchiveLayout
        {
            get
            {
                return this.archiveLayoutField;
            }
            set
            {
                if ((this.archiveLayoutField != null))
                {
                    if ((archiveLayoutField.Equals(value) != true))
                    {
                        this.archiveLayoutField = value;
                        this.OnPropertyChanged("ArchiveLayout", value);
                    }
                }
                else
                {
                    this.archiveLayoutField = value;
                    this.OnPropertyChanged("ArchiveLayout", value);
                }
            }
        }

        [XmlElement("Alias")]
        public List<ODMcomplexTypeDefinitionAlias> Alias
        {
            get
            {
                return this.aliasField;
            }
            set
            {
                if ((this.aliasField != null))
                {
                    if ((aliasField.Equals(value) != true))
                    {
                        this.aliasField = value;
                        this.OnPropertyChanged("Alias", value);
                    }
                }
                else
                {
                    this.aliasField = value;
                    this.OnPropertyChanged("Alias", value);
                }
            }
        }

        [XmlAttribute]
        public string OID
        {
            get
            {
                return this.oIDField;
            }
            set
            {
                if ((this.oIDField != null))
                {
                    if ((oIDField.Equals(value) != true))
                    {
                        this.oIDField = value;
                        this.OnPropertyChanged("OID", value);
                    }
                }
                else
                {
                    this.oIDField = value;
                    this.OnPropertyChanged("OID", value);
                }
            }
        }

        [XmlAttribute]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name", value);
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name", value);
                }
            }
        }

        [XmlAttribute]
        public YesOrNo Repeating
        {
            get
            {
                return this.repeatingField;
            }
            set
            {
                if ((repeatingField.Equals(value) != true))
                {
                    this.repeatingField = value;
                    this.OnPropertyChanged("Repeating", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemGroupRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemGroupRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemGroupRef : EntityBase<ODMcomplexTypeDefinitionItemGroupRef>
    {

        private string itemGroupOIDField;

        private string orderNumberField;

        private YesOrNo mandatoryField;

        private string collectionExceptionConditionOIDField;

        [XmlAttribute]
        public string ItemGroupOID
        {
            get
            {
                return this.itemGroupOIDField;
            }
            set
            {
                if ((this.itemGroupOIDField != null))
                {
                    if ((itemGroupOIDField.Equals(value) != true))
                    {
                        this.itemGroupOIDField = value;
                        this.OnPropertyChanged("ItemGroupOID", value);
                    }
                }
                else
                {
                    this.itemGroupOIDField = value;
                    this.OnPropertyChanged("ItemGroupOID", value);
                }
            }
        }

        [XmlAttribute(DataType = "integer")]
        public string OrderNumber
        {
            get
            {
                return this.orderNumberField;
            }
            set
            {
                if ((this.orderNumberField != null))
                {
                    if ((orderNumberField.Equals(value) != true))
                    {
                        this.orderNumberField = value;
                        this.OnPropertyChanged("OrderNumber", value);
                    }
                }
                else
                {
                    this.orderNumberField = value;
                    this.OnPropertyChanged("OrderNumber", value);
                }
            }
        }

        [XmlAttribute]
        public YesOrNo Mandatory
        {
            get
            {
                return this.mandatoryField;
            }
            set
            {
                if ((mandatoryField.Equals(value) != true))
                {
                    this.mandatoryField = value;
                    this.OnPropertyChanged("Mandatory", value);
                }
            }
        }

        [XmlAttribute]
        public string CollectionExceptionConditionOID
        {
            get
            {
                return this.collectionExceptionConditionOIDField;
            }
            set
            {
                if ((this.collectionExceptionConditionOIDField != null))
                {
                    if ((collectionExceptionConditionOIDField.Equals(value) != true))
                    {
                        this.collectionExceptionConditionOIDField = value;
                        this.OnPropertyChanged("CollectionExceptionConditionOID", value);
                    }
                }
                else
                {
                    this.collectionExceptionConditionOIDField = value;
                    this.OnPropertyChanged("CollectionExceptionConditionOID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ArchiveLayout", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ArchiveLayout", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionArchiveLayout : EntityBase<ODMcomplexTypeDefinitionArchiveLayout>
    {

        private string oIDField;

        private string pdfFileNameField;

        private string presentationOIDField;

        [XmlAttribute]
        public string OID
        {
            get
            {
                return this.oIDField;
            }
            set
            {
                if ((this.oIDField != null))
                {
                    if ((oIDField.Equals(value) != true))
                    {
                        this.oIDField = value;
                        this.OnPropertyChanged("OID", value);
                    }
                }
                else
                {
                    this.oIDField = value;
                    this.OnPropertyChanged("OID", value);
                }
            }
        }

        [XmlAttribute(DataType = "anyURI")]
        public string PdfFileName
        {
            get
            {
                return this.pdfFileNameField;
            }
            set
            {
                if ((this.pdfFileNameField != null))
                {
                    if ((pdfFileNameField.Equals(value) != true))
                    {
                        this.pdfFileNameField = value;
                        this.OnPropertyChanged("PdfFileName", value);
                    }
                }
                else
                {
                    this.pdfFileNameField = value;
                    this.OnPropertyChanged("PdfFileName", value);
                }
            }
        }

        [XmlAttribute]
        public string PresentationOID
        {
            get
            {
                return this.presentationOIDField;
            }
            set
            {
                if ((this.presentationOIDField != null))
                {
                    if ((presentationOIDField.Equals(value) != true))
                    {
                        this.presentationOIDField = value;
                        this.OnPropertyChanged("PresentationOID", value);
                    }
                }
                else
                {
                    this.presentationOIDField = value;
                    this.OnPropertyChanged("PresentationOID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemGroupDef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemGroupDef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemGroupDef : EntityBase<ODMcomplexTypeDefinitionItemGroupDef>
    {

        private ODMcomplexTypeDefinitionDescription descriptionField;

        private List<ODMcomplexTypeDefinitionItemRef> itemRefField;

        private List<ODMcomplexTypeDefinitionAlias> aliasField;

        private string oIDField;

        private string nameField;

        private YesOrNo repeatingField;

        private YesOrNo isReferenceDataField;

        private bool isReferenceDataFieldSpecified;

        private string sASDatasetNameField;

        private string domainField;

        private string originField;

        private string roleField;

        private string purposeField;

        private string commentField;

        public ODMcomplexTypeDefinitionItemGroupDef()
        {
            this.aliasField = new List<ODMcomplexTypeDefinitionAlias>();
            this.itemRefField = new List<ODMcomplexTypeDefinitionItemRef>();
            this.descriptionField = new ODMcomplexTypeDefinitionDescription();
        }

        public ODMcomplexTypeDefinitionDescription Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description", value);
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description", value);
                }
            }
        }

        [XmlElement("ItemRef")]
        public List<ODMcomplexTypeDefinitionItemRef> ItemRef
        {
            get
            {
                return this.itemRefField;
            }
            set
            {
                if ((this.itemRefField != null))
                {
                    if ((itemRefField.Equals(value) != true))
                    {
                        this.itemRefField = value;
                        this.OnPropertyChanged("ItemRef", value);
                    }
                }
                else
                {
                    this.itemRefField = value;
                    this.OnPropertyChanged("ItemRef", value);
                }
            }
        }

        [XmlElement("Alias")]
        public List<ODMcomplexTypeDefinitionAlias> Alias
        {
            get
            {
                return this.aliasField;
            }
            set
            {
                if ((this.aliasField != null))
                {
                    if ((aliasField.Equals(value) != true))
                    {
                        this.aliasField = value;
                        this.OnPropertyChanged("Alias", value);
                    }
                }
                else
                {
                    this.aliasField = value;
                    this.OnPropertyChanged("Alias", value);
                }
            }
        }

        [XmlAttribute]
        public string OID
        {
            get
            {
                return this.oIDField;
            }
            set
            {
                if ((this.oIDField != null))
                {
                    if ((oIDField.Equals(value) != true))
                    {
                        this.oIDField = value;
                        this.OnPropertyChanged("OID", value);
                    }
                }
                else
                {
                    this.oIDField = value;
                    this.OnPropertyChanged("OID", value);
                }
            }
        }

        [XmlAttribute]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name", value);
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name", value);
                }
            }
        }

        [XmlAttribute]
        public YesOrNo Repeating
        {
            get
            {
                return this.repeatingField;
            }
            set
            {
                if ((repeatingField.Equals(value) != true))
                {
                    this.repeatingField = value;
                    this.OnPropertyChanged("Repeating", value);
                }
            }
        }

        [XmlAttribute]
        public YesOrNo IsReferenceData
        {
            get
            {
                return this.isReferenceDataField;
            }
            set
            {
                if ((isReferenceDataField.Equals(value) != true))
                {
                    this.isReferenceDataField = value;
                    this.OnPropertyChanged("IsReferenceData", value);
                }
            }
        }

        [XmlIgnore]
        public bool IsReferenceDataSpecified
        {
            get
            {
                return this.isReferenceDataFieldSpecified;
            }
            set
            {
                if ((isReferenceDataFieldSpecified.Equals(value) != true))
                {
                    this.isReferenceDataFieldSpecified = value;
                    this.OnPropertyChanged("IsReferenceDataSpecified", value);
                }
            }
        }

        [XmlAttribute]
        public string SASDatasetName
        {
            get
            {
                return this.sASDatasetNameField;
            }
            set
            {
                if ((this.sASDatasetNameField != null))
                {
                    if ((sASDatasetNameField.Equals(value) != true))
                    {
                        this.sASDatasetNameField = value;
                        this.OnPropertyChanged("SASDatasetName", value);
                    }
                }
                else
                {
                    this.sASDatasetNameField = value;
                    this.OnPropertyChanged("SASDatasetName", value);
                }
            }
        }

        [XmlAttribute]
        public string Domain
        {
            get
            {
                return this.domainField;
            }
            set
            {
                if ((this.domainField != null))
                {
                    if ((domainField.Equals(value) != true))
                    {
                        this.domainField = value;
                        this.OnPropertyChanged("Domain", value);
                    }
                }
                else
                {
                    this.domainField = value;
                    this.OnPropertyChanged("Domain", value);
                }
            }
        }

        [XmlAttribute]
        public string Origin
        {
            get
            {
                return this.originField;
            }
            set
            {
                if ((this.originField != null))
                {
                    if ((originField.Equals(value) != true))
                    {
                        this.originField = value;
                        this.OnPropertyChanged("Origin", value);
                    }
                }
                else
                {
                    this.originField = value;
                    this.OnPropertyChanged("Origin", value);
                }
            }
        }

        [XmlAttribute]
        public string Role
        {
            get
            {
                return this.roleField;
            }
            set
            {
                if ((this.roleField != null))
                {
                    if ((roleField.Equals(value) != true))
                    {
                        this.roleField = value;
                        this.OnPropertyChanged("Role", value);
                    }
                }
                else
                {
                    this.roleField = value;
                    this.OnPropertyChanged("Role", value);
                }
            }
        }

        [XmlAttribute]
        public string Purpose
        {
            get
            {
                return this.purposeField;
            }
            set
            {
                if ((this.purposeField != null))
                {
                    if ((purposeField.Equals(value) != true))
                    {
                        this.purposeField = value;
                        this.OnPropertyChanged("Purpose", value);
                    }
                }
                else
                {
                    this.purposeField = value;
                    this.OnPropertyChanged("Purpose", value);
                }
            }
        }

        [XmlAttribute]
        public string Comment
        {
            get
            {
                return this.commentField;
            }
            set
            {
                if ((this.commentField != null))
                {
                    if ((commentField.Equals(value) != true))
                    {
                        this.commentField = value;
                        this.OnPropertyChanged("Comment", value);
                    }
                }
                else
                {
                    this.commentField = value;
                    this.OnPropertyChanged("Comment", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemRef : EntityBase<ODMcomplexTypeDefinitionItemRef>
    {

        private string itemOIDField;

        private string keySequenceField;

        private string methodOIDField;

        private string imputationMethodOIDField;

        private string roleField;

        private string roleCodeListOIDField;

        private string orderNumberField;

        private YesOrNo mandatoryField;

        private string collectionExceptionConditionOIDField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute(DataType = "integer")]
        public string KeySequence
        {
            get
            {
                return this.keySequenceField;
            }
            set
            {
                if ((this.keySequenceField != null))
                {
                    if ((keySequenceField.Equals(value) != true))
                    {
                        this.keySequenceField = value;
                        this.OnPropertyChanged("KeySequence", value);
                    }
                }
                else
                {
                    this.keySequenceField = value;
                    this.OnPropertyChanged("KeySequence", value);
                }
            }
        }

        [XmlAttribute]
        public string MethodOID
        {
            get
            {
                return this.methodOIDField;
            }
            set
            {
                if ((this.methodOIDField != null))
                {
                    if ((methodOIDField.Equals(value) != true))
                    {
                        this.methodOIDField = value;
                        this.OnPropertyChanged("MethodOID", value);
                    }
                }
                else
                {
                    this.methodOIDField = value;
                    this.OnPropertyChanged("MethodOID", value);
                }
            }
        }

        [XmlAttribute]
        public string ImputationMethodOID
        {
            get
            {
                return this.imputationMethodOIDField;
            }
            set
            {
                if ((this.imputationMethodOIDField != null))
                {
                    if ((imputationMethodOIDField.Equals(value) != true))
                    {
                        this.imputationMethodOIDField = value;
                        this.OnPropertyChanged("ImputationMethodOID", value);
                    }
                }
                else
                {
                    this.imputationMethodOIDField = value;
                    this.OnPropertyChanged("ImputationMethodOID", value);
                }
            }
        }

        [XmlAttribute]
        public string Role
        {
            get
            {
                return this.roleField;
            }
            set
            {
                if ((this.roleField != null))
                {
                    if ((roleField.Equals(value) != true))
                    {
                        this.roleField = value;
                        this.OnPropertyChanged("Role", value);
                    }
                }
                else
                {
                    this.roleField = value;
                    this.OnPropertyChanged("Role", value);
                }
            }
        }

        [XmlAttribute]
        public string RoleCodeListOID
        {
            get
            {
                return this.roleCodeListOIDField;
            }
            set
            {
                if ((this.roleCodeListOIDField != null))
                {
                    if ((roleCodeListOIDField.Equals(value) != true))
                    {
                        this.roleCodeListOIDField = value;
                        this.OnPropertyChanged("RoleCodeListOID", value);
                    }
                }
                else
                {
                    this.roleCodeListOIDField = value;
                    this.OnPropertyChanged("RoleCodeListOID", value);
                }
            }
        }

        [XmlAttribute(DataType = "integer")]
        public string OrderNumber
        {
            get
            {
                return this.orderNumberField;
            }
            set
            {
                if ((this.orderNumberField != null))
                {
                    if ((orderNumberField.Equals(value) != true))
                    {
                        this.orderNumberField = value;
                        this.OnPropertyChanged("OrderNumber", value);
                    }
                }
                else
                {
                    this.orderNumberField = value;
                    this.OnPropertyChanged("OrderNumber", value);
                }
            }
        }

        [XmlAttribute]
        public YesOrNo Mandatory
        {
            get
            {
                return this.mandatoryField;
            }
            set
            {
                if ((mandatoryField.Equals(value) != true))
                {
                    this.mandatoryField = value;
                    this.OnPropertyChanged("Mandatory", value);
                }
            }
        }

        [XmlAttribute]
        public string CollectionExceptionConditionOID
        {
            get
            {
                return this.collectionExceptionConditionOIDField;
            }
            set
            {
                if ((this.collectionExceptionConditionOIDField != null))
                {
                    if ((collectionExceptionConditionOIDField.Equals(value) != true))
                    {
                        this.collectionExceptionConditionOIDField = value;
                        this.OnPropertyChanged("CollectionExceptionConditionOID", value);
                    }
                }
                else
                {
                    this.collectionExceptionConditionOIDField = value;
                    this.OnPropertyChanged("CollectionExceptionConditionOID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDef : EntityBase<ODMcomplexTypeDefinitionItemDef>
    {

        private ODMcomplexTypeDefinitionDescription descriptionField;

        private ODMcomplexTypeDefinitionQuestion questionField;

        private ODMcomplexTypeDefinitionExternalQuestion externalQuestionField;

        private List<ODMcomplexTypeDefinitionMeasurementUnitRef> measurementUnitRefField;

        private List<ODMcomplexTypeDefinitionRangeCheck> rangeCheckField;

        private ODMcomplexTypeDefinitionCodeListRef codeListRefField;

        private List<ODMcomplexTypeDefinitionRole> roleField;

        private List<ODMcomplexTypeDefinitionAlias> aliasField;

        private string oIDField;

        private string nameField;

        private DataType dataTypeField;

        private string lengthField;

        private string significantDigitsField;

        private string sASFieldNameField;

        private string sDSVarNameField;

        private string originField;

        private string commentField;

        public ODMcomplexTypeDefinitionItemDef()
        {
            this.aliasField = new List<ODMcomplexTypeDefinitionAlias>();
            this.roleField = new List<ODMcomplexTypeDefinitionRole>();
            this.codeListRefField = new ODMcomplexTypeDefinitionCodeListRef();
            this.rangeCheckField = new List<ODMcomplexTypeDefinitionRangeCheck>();
            this.measurementUnitRefField = new List<ODMcomplexTypeDefinitionMeasurementUnitRef>();
            this.externalQuestionField = new ODMcomplexTypeDefinitionExternalQuestion();
            this.questionField = new ODMcomplexTypeDefinitionQuestion();
            this.descriptionField = new ODMcomplexTypeDefinitionDescription();
        }

        public ODMcomplexTypeDefinitionDescription Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description", value);
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionQuestion Question
        {
            get
            {
                return this.questionField;
            }
            set
            {
                if ((this.questionField != null))
                {
                    if ((questionField.Equals(value) != true))
                    {
                        this.questionField = value;
                        this.OnPropertyChanged("Question", value);
                    }
                }
                else
                {
                    this.questionField = value;
                    this.OnPropertyChanged("Question", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionExternalQuestion ExternalQuestion
        {
            get
            {
                return this.externalQuestionField;
            }
            set
            {
                if ((this.externalQuestionField != null))
                {
                    if ((externalQuestionField.Equals(value) != true))
                    {
                        this.externalQuestionField = value;
                        this.OnPropertyChanged("ExternalQuestion", value);
                    }
                }
                else
                {
                    this.externalQuestionField = value;
                    this.OnPropertyChanged("ExternalQuestion", value);
                }
            }
        }

        [XmlElement("MeasurementUnitRef")]
        public List<ODMcomplexTypeDefinitionMeasurementUnitRef> MeasurementUnitRef
        {
            get
            {
                return this.measurementUnitRefField;
            }
            set
            {
                if ((this.measurementUnitRefField != null))
                {
                    if ((measurementUnitRefField.Equals(value) != true))
                    {
                        this.measurementUnitRefField = value;
                        this.OnPropertyChanged("MeasurementUnitRef", value);
                    }
                }
                else
                {
                    this.measurementUnitRefField = value;
                    this.OnPropertyChanged("MeasurementUnitRef", value);
                }
            }
        }

        [XmlElement("RangeCheck")]
        public List<ODMcomplexTypeDefinitionRangeCheck> RangeCheck
        {
            get
            {
                return this.rangeCheckField;
            }
            set
            {
                if ((this.rangeCheckField != null))
                {
                    if ((rangeCheckField.Equals(value) != true))
                    {
                        this.rangeCheckField = value;
                        this.OnPropertyChanged("RangeCheck", value);
                    }
                }
                else
                {
                    this.rangeCheckField = value;
                    this.OnPropertyChanged("RangeCheck", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionCodeListRef CodeListRef
        {
            get
            {
                return this.codeListRefField;
            }
            set
            {
                if ((this.codeListRefField != null))
                {
                    if ((codeListRefField.Equals(value) != true))
                    {
                        this.codeListRefField = value;
                        this.OnPropertyChanged("CodeListRef", value);
                    }
                }
                else
                {
                    this.codeListRefField = value;
                    this.OnPropertyChanged("CodeListRef", value);
                }
            }
        }

        [XmlElement("Role")]
        public List<ODMcomplexTypeDefinitionRole> Role
        {
            get
            {
                return this.roleField;
            }
            set
            {
                if ((this.roleField != null))
                {
                    if ((roleField.Equals(value) != true))
                    {
                        this.roleField = value;
                        this.OnPropertyChanged("Role", value);
                    }
                }
                else
                {
                    this.roleField = value;
                    this.OnPropertyChanged("Role", value);
                }
            }
        }

        [XmlElement("Alias")]
        public List<ODMcomplexTypeDefinitionAlias> Alias
        {
            get
            {
                return this.aliasField;
            }
            set
            {
                if ((this.aliasField != null))
                {
                    if ((aliasField.Equals(value) != true))
                    {
                        this.aliasField = value;
                        this.OnPropertyChanged("Alias", value);
                    }
                }
                else
                {
                    this.aliasField = value;
                    this.OnPropertyChanged("Alias", value);
                }
            }
        }

        [XmlAttribute]
        public string OID
        {
            get
            {
                return this.oIDField;
            }
            set
            {
                if ((this.oIDField != null))
                {
                    if ((oIDField.Equals(value) != true))
                    {
                        this.oIDField = value;
                        this.OnPropertyChanged("OID", value);
                    }
                }
                else
                {
                    this.oIDField = value;
                    this.OnPropertyChanged("OID", value);
                }
            }
        }

        [XmlAttribute]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name", value);
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name", value);
                }
            }
        }

        [XmlAttribute]
        public DataType DataType
        {
            get
            {
                return this.dataTypeField;
            }
            set
            {
                if ((dataTypeField.Equals(value) != true))
                {
                    this.dataTypeField = value;
                    this.OnPropertyChanged("DataType", value);
                }
            }
        }

        [XmlAttribute(DataType = "positiveInteger")]
        public string Length
        {
            get
            {
                return this.lengthField;
            }
            set
            {
                if ((this.lengthField != null))
                {
                    if ((lengthField.Equals(value) != true))
                    {
                        this.lengthField = value;
                        this.OnPropertyChanged("Length", value);
                    }
                }
                else
                {
                    this.lengthField = value;
                    this.OnPropertyChanged("Length", value);
                }
            }
        }

        [XmlAttribute(DataType = "nonNegativeInteger")]
        public string SignificantDigits
        {
            get
            {
                return this.significantDigitsField;
            }
            set
            {
                if ((this.significantDigitsField != null))
                {
                    if ((significantDigitsField.Equals(value) != true))
                    {
                        this.significantDigitsField = value;
                        this.OnPropertyChanged("SignificantDigits", value);
                    }
                }
                else
                {
                    this.significantDigitsField = value;
                    this.OnPropertyChanged("SignificantDigits", value);
                }
            }
        }

        [XmlAttribute]
        public string SASFieldName
        {
            get
            {
                return this.sASFieldNameField;
            }
            set
            {
                if ((this.sASFieldNameField != null))
                {
                    if ((sASFieldNameField.Equals(value) != true))
                    {
                        this.sASFieldNameField = value;
                        this.OnPropertyChanged("SASFieldName", value);
                    }
                }
                else
                {
                    this.sASFieldNameField = value;
                    this.OnPropertyChanged("SASFieldName", value);
                }
            }
        }

        [XmlAttribute]
        public string SDSVarName
        {
            get
            {
                return this.sDSVarNameField;
            }
            set
            {
                if ((this.sDSVarNameField != null))
                {
                    if ((sDSVarNameField.Equals(value) != true))
                    {
                        this.sDSVarNameField = value;
                        this.OnPropertyChanged("SDSVarName", value);
                    }
                }
                else
                {
                    this.sDSVarNameField = value;
                    this.OnPropertyChanged("SDSVarName", value);
                }
            }
        }

        [XmlAttribute]
        public string Origin
        {
            get
            {
                return this.originField;
            }
            set
            {
                if ((this.originField != null))
                {
                    if ((originField.Equals(value) != true))
                    {
                        this.originField = value;
                        this.OnPropertyChanged("Origin", value);
                    }
                }
                else
                {
                    this.originField = value;
                    this.OnPropertyChanged("Origin", value);
                }
            }
        }

        [XmlAttribute]
        public string Comment
        {
            get
            {
                return this.commentField;
            }
            set
            {
                if ((this.commentField != null))
                {
                    if ((commentField.Equals(value) != true))
                    {
                        this.commentField = value;
                        this.OnPropertyChanged("Comment", value);
                    }
                }
                else
                {
                    this.commentField = value;
                    this.OnPropertyChanged("Comment", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Question", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Question", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionQuestion : EntityBase<ODMcomplexTypeDefinitionQuestion>
    {

        private List<ODMcomplexTypeDefinitionTranslatedText> translatedTextField;

        public ODMcomplexTypeDefinitionQuestion()
        {
            this.translatedTextField = new List<ODMcomplexTypeDefinitionTranslatedText>();
        }

        [XmlElement("TranslatedText")]
        public List<ODMcomplexTypeDefinitionTranslatedText> TranslatedText
        {
            get
            {
                return this.translatedTextField;
            }
            set
            {
                if ((this.translatedTextField != null))
                {
                    if ((translatedTextField.Equals(value) != true))
                    {
                        this.translatedTextField = value;
                        this.OnPropertyChanged("TranslatedText", value);
                    }
                }
                else
                {
                    this.translatedTextField = value;
                    this.OnPropertyChanged("TranslatedText", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ExternalQuestion", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ExternalQuestion", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionExternalQuestion : EntityBase<ODMcomplexTypeDefinitionExternalQuestion>
    {

        private string dictionaryField;

        private string versionField;

        private string codeField;

        [XmlAttribute]
        public string Dictionary
        {
            get
            {
                return this.dictionaryField;
            }
            set
            {
                if ((this.dictionaryField != null))
                {
                    if ((dictionaryField.Equals(value) != true))
                    {
                        this.dictionaryField = value;
                        this.OnPropertyChanged("Dictionary", value);
                    }
                }
                else
                {
                    this.dictionaryField = value;
                    this.OnPropertyChanged("Dictionary", value);
                }
            }
        }

        [XmlAttribute]
        public string Version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                if ((this.versionField != null))
                {
                    if ((versionField.Equals(value) != true))
                    {
                        this.versionField = value;
                        this.OnPropertyChanged("Version", value);
                    }
                }
                else
                {
                    this.versionField = value;
                    this.OnPropertyChanged("Version", value);
                }
            }
        }

        [XmlAttribute]
        public string Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                if ((this.codeField != null))
                {
                    if ((codeField.Equals(value) != true))
                    {
                        this.codeField = value;
                        this.OnPropertyChanged("Code", value);
                    }
                }
                else
                {
                    this.codeField = value;
                    this.OnPropertyChanged("Code", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-MeasurementUnitRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("MeasurementUnitRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionMeasurementUnitRef : EntityBase<ODMcomplexTypeDefinitionMeasurementUnitRef>
    {

        private string measurementUnitOIDField;

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-RangeCheck", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("RangeCheck", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionRangeCheck : EntityBase<ODMcomplexTypeDefinitionRangeCheck>
    {

        private List<object> itemsField;

        private ODMcomplexTypeDefinitionMeasurementUnitRef measurementUnitRefField;

        private ODMcomplexTypeDefinitionErrorMessage errorMessageField;

        private Comparator comparatorField;

        private bool comparatorFieldSpecified;

        private SoftOrHard softHardField;

        public ODMcomplexTypeDefinitionRangeCheck()
        {
            this.errorMessageField = new ODMcomplexTypeDefinitionErrorMessage();
            this.measurementUnitRefField = new ODMcomplexTypeDefinitionMeasurementUnitRef();
            this.itemsField = new List<object>();
        }

        [XmlElement("CheckValue", typeof(ODMcomplexTypeDefinitionCheckValue))]
        [XmlElement("FormalExpression", typeof(ODMcomplexTypeDefinitionFormalExpression))]
        public List<object> Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                if ((this.itemsField != null))
                {
                    if ((itemsField.Equals(value) != true))
                    {
                        this.itemsField = value;
                        this.OnPropertyChanged("Items", value);
                    }
                }
                else
                {
                    this.itemsField = value;
                    this.OnPropertyChanged("Items", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionMeasurementUnitRef MeasurementUnitRef
        {
            get
            {
                return this.measurementUnitRefField;
            }
            set
            {
                if ((this.measurementUnitRefField != null))
                {
                    if ((measurementUnitRefField.Equals(value) != true))
                    {
                        this.measurementUnitRefField = value;
                        this.OnPropertyChanged("MeasurementUnitRef", value);
                    }
                }
                else
                {
                    this.measurementUnitRefField = value;
                    this.OnPropertyChanged("MeasurementUnitRef", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionErrorMessage ErrorMessage
        {
            get
            {
                return this.errorMessageField;
            }
            set
            {
                if ((this.errorMessageField != null))
                {
                    if ((errorMessageField.Equals(value) != true))
                    {
                        this.errorMessageField = value;
                        this.OnPropertyChanged("ErrorMessage", value);
                    }
                }
                else
                {
                    this.errorMessageField = value;
                    this.OnPropertyChanged("ErrorMessage", value);
                }
            }
        }

        [XmlAttribute]
        public Comparator Comparator
        {
            get
            {
                return this.comparatorField;
            }
            set
            {
                if ((comparatorField.Equals(value) != true))
                {
                    this.comparatorField = value;
                    this.OnPropertyChanged("Comparator", value);
                }
            }
        }

        [XmlIgnore]
        public bool ComparatorSpecified
        {
            get
            {
                return this.comparatorFieldSpecified;
            }
            set
            {
                if ((comparatorFieldSpecified.Equals(value) != true))
                {
                    this.comparatorFieldSpecified = value;
                    this.OnPropertyChanged("ComparatorSpecified", value);
                }
            }
        }

        [XmlAttribute]
        public SoftOrHard SoftHard
        {
            get
            {
                return this.softHardField;
            }
            set
            {
                if ((softHardField.Equals(value) != true))
                {
                    this.softHardField = value;
                    this.OnPropertyChanged("SoftHard", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-CheckValue", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("CheckValue", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionCheckValue : EntityBase<ODMcomplexTypeDefinitionCheckValue>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ErrorMessage", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ErrorMessage", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionErrorMessage : EntityBase<ODMcomplexTypeDefinitionErrorMessage>
    {

        private List<ODMcomplexTypeDefinitionTranslatedText> translatedTextField;

        public ODMcomplexTypeDefinitionErrorMessage()
        {
            this.translatedTextField = new List<ODMcomplexTypeDefinitionTranslatedText>();
        }

        [XmlElement("TranslatedText")]
        public List<ODMcomplexTypeDefinitionTranslatedText> TranslatedText
        {
            get
            {
                return this.translatedTextField;
            }
            set
            {
                if ((this.translatedTextField != null))
                {
                    if ((translatedTextField.Equals(value) != true))
                    {
                        this.translatedTextField = value;
                        this.OnPropertyChanged("TranslatedText", value);
                    }
                }
                else
                {
                    this.translatedTextField = value;
                    this.OnPropertyChanged("TranslatedText", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    public enum Comparator
    {

        /// <remarks/>
        LT,

        /// <remarks/>
        LE,

        /// <remarks/>
        GT,

        /// <remarks/>
        GE,

        /// <remarks/>
        EQ,

        /// <remarks/>
        NE,

        /// <remarks/>
        IN,

        /// <remarks/>
        NOTIN,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    public enum SoftOrHard
    {

        /// <remarks/>
        Soft,

        /// <remarks/>
        Hard,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-CodeListRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("CodeListRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionCodeListRef : EntityBase<ODMcomplexTypeDefinitionCodeListRef>
    {

        private string codeListOIDField;

        [XmlAttribute]
        public string CodeListOID
        {
            get
            {
                return this.codeListOIDField;
            }
            set
            {
                if ((this.codeListOIDField != null))
                {
                    if ((codeListOIDField.Equals(value) != true))
                    {
                        this.codeListOIDField = value;
                        this.OnPropertyChanged("CodeListOID", value);
                    }
                }
                else
                {
                    this.codeListOIDField = value;
                    this.OnPropertyChanged("CodeListOID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Role", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Role", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionRole : EntityBase<ODMcomplexTypeDefinitionRole>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    public enum DataType
    {

        /// <remarks/>
        integer,

        /// <remarks/>
        @float,

        /// <remarks/>
        date,

        /// <remarks/>
        datetime,

        /// <remarks/>
        time,

        /// <remarks/>
        text,

        /// <remarks/>
        @string,

        /// <remarks/>
        @double,

        /// <remarks/>
        URI,

        /// <remarks/>
        boolean,

        /// <remarks/>
        hexBinary,

        /// <remarks/>
        base64Binary,

        /// <remarks/>
        hexFloat,

        /// <remarks/>
        base64Float,

        /// <remarks/>
        partialDate,

        /// <remarks/>
        partialTime,

        /// <remarks/>
        partialDatetime,

        /// <remarks/>
        durationDatetime,

        /// <remarks/>
        intervalDatetime,

        /// <remarks/>
        incompleteDatetime,

        /// <remarks/>
        incompleteDate,

        /// <remarks/>
        incompleteTime,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-CodeList", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("CodeList", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionCodeList : EntityBase<ODMcomplexTypeDefinitionCodeList>
    {

        private ODMcomplexTypeDefinitionDescription descriptionField;

        private List<object> itemsField;

        private List<ODMcomplexTypeDefinitionAlias> aliasField;

        private string oIDField;

        private string nameField;

        private CLDataType dataTypeField;

        private string sASFormatNameField;

        public ODMcomplexTypeDefinitionCodeList()
        {
            this.aliasField = new List<ODMcomplexTypeDefinitionAlias>();
            this.itemsField = new List<object>();
            this.descriptionField = new ODMcomplexTypeDefinitionDescription();
        }

        public ODMcomplexTypeDefinitionDescription Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                if ((this.descriptionField != null))
                {
                    if ((descriptionField.Equals(value) != true))
                    {
                        this.descriptionField = value;
                        this.OnPropertyChanged("Description", value);
                    }
                }
                else
                {
                    this.descriptionField = value;
                    this.OnPropertyChanged("Description", value);
                }
            }
        }

        [XmlElement("CodeListItem", typeof(ODMcomplexTypeDefinitionCodeListItem))]
        [XmlElement("EnumeratedItem", typeof(ODMcomplexTypeDefinitionEnumeratedItem))]
        [XmlElement("ExternalCodeList", typeof(ODMcomplexTypeDefinitionExternalCodeList))]
        public List<object> Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                if ((this.itemsField != null))
                {
                    if ((itemsField.Equals(value) != true))
                    {
                        this.itemsField = value;
                        this.OnPropertyChanged("Items", value);
                    }
                }
                else
                {
                    this.itemsField = value;
                    this.OnPropertyChanged("Items", value);
                }
            }
        }

        [XmlElement("Alias")]
        public List<ODMcomplexTypeDefinitionAlias> Alias
        {
            get
            {
                return this.aliasField;
            }
            set
            {
                if ((this.aliasField != null))
                {
                    if ((aliasField.Equals(value) != true))
                    {
                        this.aliasField = value;
                        this.OnPropertyChanged("Alias", value);
                    }
                }
                else
                {
                    this.aliasField = value;
                    this.OnPropertyChanged("Alias", value);
                }
            }
        }

        [XmlAttribute]
        public string OID
        {
            get
            {
                return this.oIDField;
            }
            set
            {
                if ((this.oIDField != null))
                {
                    if ((oIDField.Equals(value) != true))
                    {
                        this.oIDField = value;
                        this.OnPropertyChanged("OID", value);
                    }
                }
                else
                {
                    this.oIDField = value;
                    this.OnPropertyChanged("OID", value);
                }
            }
        }

        [XmlAttribute]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name", value);
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name", value);
                }
            }
        }

        [XmlAttribute]
        public CLDataType DataType
        {
            get
            {
                return this.dataTypeField;
            }
            set
            {
                if ((dataTypeField.Equals(value) != true))
                {
                    this.dataTypeField = value;
                    this.OnPropertyChanged("DataType", value);
                }
            }
        }

        [XmlAttribute]
        public string SASFormatName
        {
            get
            {
                return this.sASFormatNameField;
            }
            set
            {
                if ((this.sASFormatNameField != null))
                {
                    if ((sASFormatNameField.Equals(value) != true))
                    {
                        this.sASFormatNameField = value;
                        this.OnPropertyChanged("SASFormatName", value);
                    }
                }
                else
                {
                    this.sASFormatNameField = value;
                    this.OnPropertyChanged("SASFormatName", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-CodeListItem", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("CodeListItem", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionCodeListItem : EntityBase<ODMcomplexTypeDefinitionCodeListItem>
    {

        private ODMcomplexTypeDefinitionDecode decodeField;

        private List<ODMcomplexTypeDefinitionAlias> aliasField;

        private string codedValueField;

        private decimal rankField;

        private bool rankFieldSpecified;

        private string orderNumberField;

        public ODMcomplexTypeDefinitionCodeListItem()
        {
            this.aliasField = new List<ODMcomplexTypeDefinitionAlias>();
            this.decodeField = new ODMcomplexTypeDefinitionDecode();
        }

        public ODMcomplexTypeDefinitionDecode Decode
        {
            get
            {
                return this.decodeField;
            }
            set
            {
                if ((this.decodeField != null))
                {
                    if ((decodeField.Equals(value) != true))
                    {
                        this.decodeField = value;
                        this.OnPropertyChanged("Decode", value);
                    }
                }
                else
                {
                    this.decodeField = value;
                    this.OnPropertyChanged("Decode", value);
                }
            }
        }

        [XmlElement("Alias")]
        public List<ODMcomplexTypeDefinitionAlias> Alias
        {
            get
            {
                return this.aliasField;
            }
            set
            {
                if ((this.aliasField != null))
                {
                    if ((aliasField.Equals(value) != true))
                    {
                        this.aliasField = value;
                        this.OnPropertyChanged("Alias", value);
                    }
                }
                else
                {
                    this.aliasField = value;
                    this.OnPropertyChanged("Alias", value);
                }
            }
        }

        [XmlAttribute]
        public string CodedValue
        {
            get
            {
                return this.codedValueField;
            }
            set
            {
                if ((this.codedValueField != null))
                {
                    if ((codedValueField.Equals(value) != true))
                    {
                        this.codedValueField = value;
                        this.OnPropertyChanged("CodedValue", value);
                    }
                }
                else
                {
                    this.codedValueField = value;
                    this.OnPropertyChanged("CodedValue", value);
                }
            }
        }

        [XmlAttribute]
        public decimal Rank
        {
            get
            {
                return this.rankField;
            }
            set
            {
                if ((this.rankField != null))
                {
                    if ((rankField.Equals(value) != true))
                    {
                        this.rankField = value;
                        this.OnPropertyChanged("Rank", value);
                    }
                }
                else
                {
                    this.rankField = value;
                    this.OnPropertyChanged("Rank", value);
                }
            }
        }

        [XmlIgnore]
        public bool RankSpecified
        {
            get
            {
                return this.rankFieldSpecified;
            }
            set
            {
                if ((rankFieldSpecified.Equals(value) != true))
                {
                    this.rankFieldSpecified = value;
                    this.OnPropertyChanged("RankSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "integer")]
        public string OrderNumber
        {
            get
            {
                return this.orderNumberField;
            }
            set
            {
                if ((this.orderNumberField != null))
                {
                    if ((orderNumberField.Equals(value) != true))
                    {
                        this.orderNumberField = value;
                        this.OnPropertyChanged("OrderNumber", value);
                    }
                }
                else
                {
                    this.orderNumberField = value;
                    this.OnPropertyChanged("OrderNumber", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Decode", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Decode", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionDecode : EntityBase<ODMcomplexTypeDefinitionDecode>
    {

        private List<ODMcomplexTypeDefinitionTranslatedText> translatedTextField;

        public ODMcomplexTypeDefinitionDecode()
        {
            this.translatedTextField = new List<ODMcomplexTypeDefinitionTranslatedText>();
        }

        [XmlElement("TranslatedText")]
        public List<ODMcomplexTypeDefinitionTranslatedText> TranslatedText
        {
            get
            {
                return this.translatedTextField;
            }
            set
            {
                if ((this.translatedTextField != null))
                {
                    if ((translatedTextField.Equals(value) != true))
                    {
                        this.translatedTextField = value;
                        this.OnPropertyChanged("TranslatedText", value);
                    }
                }
                else
                {
                    this.translatedTextField = value;
                    this.OnPropertyChanged("TranslatedText", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-EnumeratedItem", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("EnumeratedItem", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionEnumeratedItem : EntityBase<ODMcomplexTypeDefinitionEnumeratedItem>
    {

        private List<ODMcomplexTypeDefinitionAlias> aliasField;

        private string codedValueField;

        private decimal rankField;

        private bool rankFieldSpecified;

        private string orderNumberField;

        public ODMcomplexTypeDefinitionEnumeratedItem()
        {
            this.aliasField = new List<ODMcomplexTypeDefinitionAlias>();
        }

        [XmlElement("Alias")]
        public List<ODMcomplexTypeDefinitionAlias> Alias
        {
            get
            {
                return this.aliasField;
            }
            set
            {
                if ((this.aliasField != null))
                {
                    if ((aliasField.Equals(value) != true))
                    {
                        this.aliasField = value;
                        this.OnPropertyChanged("Alias", value);
                    }
                }
                else
                {
                    this.aliasField = value;
                    this.OnPropertyChanged("Alias", value);
                }
            }
        }

        [XmlAttribute]
        public string CodedValue
        {
            get
            {
                return this.codedValueField;
            }
            set
            {
                if ((this.codedValueField != null))
                {
                    if ((codedValueField.Equals(value) != true))
                    {
                        this.codedValueField = value;
                        this.OnPropertyChanged("CodedValue", value);
                    }
                }
                else
                {
                    this.codedValueField = value;
                    this.OnPropertyChanged("CodedValue", value);
                }
            }
        }

        [XmlAttribute]
        public decimal Rank
        {
            get
            {
                return this.rankField;
            }
            set
            {
                if ((this.rankField != null))
                {
                    if ((rankField.Equals(value) != true))
                    {
                        this.rankField = value;
                        this.OnPropertyChanged("Rank", value);
                    }
                }
                else
                {
                    this.rankField = value;
                    this.OnPropertyChanged("Rank", value);
                }
            }
        }

        [XmlIgnore]
        public bool RankSpecified
        {
            get
            {
                return this.rankFieldSpecified;
            }
            set
            {
                if ((rankFieldSpecified.Equals(value) != true))
                {
                    this.rankFieldSpecified = value;
                    this.OnPropertyChanged("RankSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "integer")]
        public string OrderNumber
        {
            get
            {
                return this.orderNumberField;
            }
            set
            {
                if ((this.orderNumberField != null))
                {
                    if ((orderNumberField.Equals(value) != true))
                    {
                        this.orderNumberField = value;
                        this.OnPropertyChanged("OrderNumber", value);
                    }
                }
                else
                {
                    this.orderNumberField = value;
                    this.OnPropertyChanged("OrderNumber", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ExternalCodeList", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ExternalCodeList", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionExternalCodeList : EntityBase<ODMcomplexTypeDefinitionExternalCodeList>
    {

        private string dictionaryField;

        private string versionField;

        private string hrefField;

        private string refField;

        [XmlAttribute]
        public string Dictionary
        {
            get
            {
                return this.dictionaryField;
            }
            set
            {
                if ((this.dictionaryField != null))
                {
                    if ((dictionaryField.Equals(value) != true))
                    {
                        this.dictionaryField = value;
                        this.OnPropertyChanged("Dictionary", value);
                    }
                }
                else
                {
                    this.dictionaryField = value;
                    this.OnPropertyChanged("Dictionary", value);
                }
            }
        }

        [XmlAttribute]
        public string Version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                if ((this.versionField != null))
                {
                    if ((versionField.Equals(value) != true))
                    {
                        this.versionField = value;
                        this.OnPropertyChanged("Version", value);
                    }
                }
                else
                {
                    this.versionField = value;
                    this.OnPropertyChanged("Version", value);
                }
            }
        }

        [XmlAttribute(DataType = "anyURI")]
        public string href
        {
            get
            {
                return this.hrefField;
            }
            set
            {
                if ((this.hrefField != null))
                {
                    if ((hrefField.Equals(value) != true))
                    {
                        this.hrefField = value;
                        this.OnPropertyChanged("href", value);
                    }
                }
                else
                {
                    this.hrefField = value;
                    this.OnPropertyChanged("href", value);
                }
            }
        }

        [XmlAttribute]
        public string @ref
        {
            get
            {
                return this.refField;
            }
            set
            {
                if ((this.refField != null))
                {
                    if ((refField.Equals(value) != true))
                    {
                        this.refField = value;
                        this.OnPropertyChanged("ref", value);
                    }
                }
                else
                {
                    this.refField = value;
                    this.OnPropertyChanged("ref", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    public enum CLDataType
    {

        /// <remarks/>
        integer,

        /// <remarks/>
        @float,

        /// <remarks/>
        text,

        /// <remarks/>
        @string,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ImputationMethod", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ImputationMethod", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionImputationMethod : EntityBase<ODMcomplexTypeDefinitionImputationMethod>
    {

        private string oIDField;

        private string valueField;

        [XmlAttribute]
        public string OID
        {
            get
            {
                return this.oIDField;
            }
            set
            {
                if ((this.oIDField != null))
                {
                    if ((oIDField.Equals(value) != true))
                    {
                        this.oIDField = value;
                        this.OnPropertyChanged("OID", value);
                    }
                }
                else
                {
                    this.oIDField = value;
                    this.OnPropertyChanged("OID", value);
                }
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Presentation", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Presentation", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionPresentation : EntityBase<ODMcomplexTypeDefinitionPresentation>
    {

        private string oIDField;

        private string langField;

        private string valueField;

        [XmlAttribute]
        public string OID
        {
            get
            {
                return this.oIDField;
            }
            set
            {
                if ((this.oIDField != null))
                {
                    if ((oIDField.Equals(value) != true))
                    {
                        this.oIDField = value;
                        this.OnPropertyChanged("OID", value);
                    }
                }
                else
                {
                    this.oIDField = value;
                    this.OnPropertyChanged("OID", value);
                }
            }
        }

        [XmlAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.w3.org/XML/1998/namespace")]
        public string lang
        {
            get
            {
                return this.langField;
            }
            set
            {
                if ((this.langField != null))
                {
                    if ((langField.Equals(value) != true))
                    {
                        this.langField = value;
                        this.OnPropertyChanged("lang", value);
                    }
                }
                else
                {
                    this.langField = value;
                    this.OnPropertyChanged("lang", value);
                }
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-AdminData", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("AdminData", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionAdminData : EntityBase<ODMcomplexTypeDefinitionAdminData>
    {

        private List<ODMcomplexTypeDefinitionUser> userField;

        private List<ODMcomplexTypeDefinitionLocation> locationField;

        private List<ODMcomplexTypeDefinitionSignatureDef> signatureDefField;

        private string studyOIDField;

        public ODMcomplexTypeDefinitionAdminData()
        {
            this.signatureDefField = new List<ODMcomplexTypeDefinitionSignatureDef>();
            this.locationField = new List<ODMcomplexTypeDefinitionLocation>();
            this.userField = new List<ODMcomplexTypeDefinitionUser>();
        }

        [XmlElement("User")]
        public List<ODMcomplexTypeDefinitionUser> User
        {
            get
            {
                return this.userField;
            }
            set
            {
                if ((this.userField != null))
                {
                    if ((userField.Equals(value) != true))
                    {
                        this.userField = value;
                        this.OnPropertyChanged("User", value);
                    }
                }
                else
                {
                    this.userField = value;
                    this.OnPropertyChanged("User", value);
                }
            }
        }

        [XmlElement("Location")]
        public List<ODMcomplexTypeDefinitionLocation> Location
        {
            get
            {
                return this.locationField;
            }
            set
            {
                if ((this.locationField != null))
                {
                    if ((locationField.Equals(value) != true))
                    {
                        this.locationField = value;
                        this.OnPropertyChanged("Location", value);
                    }
                }
                else
                {
                    this.locationField = value;
                    this.OnPropertyChanged("Location", value);
                }
            }
        }

        [XmlElement("SignatureDef")]
        public List<ODMcomplexTypeDefinitionSignatureDef> SignatureDef
        {
            get
            {
                return this.signatureDefField;
            }
            set
            {
                if ((this.signatureDefField != null))
                {
                    if ((signatureDefField.Equals(value) != true))
                    {
                        this.signatureDefField = value;
                        this.OnPropertyChanged("SignatureDef", value);
                    }
                }
                else
                {
                    this.signatureDefField = value;
                    this.OnPropertyChanged("SignatureDef", value);
                }
            }
        }

        [XmlAttribute]
        public string StudyOID
        {
            get
            {
                return this.studyOIDField;
            }
            set
            {
                if ((this.studyOIDField != null))
                {
                    if ((studyOIDField.Equals(value) != true))
                    {
                        this.studyOIDField = value;
                        this.OnPropertyChanged("StudyOID", value);
                    }
                }
                else
                {
                    this.studyOIDField = value;
                    this.OnPropertyChanged("StudyOID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-User", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("User", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionUser : EntityBase<ODMcomplexTypeDefinitionUser>
    {

        private ODMcomplexTypeDefinitionLoginName loginNameField;

        private ODMcomplexTypeDefinitionDisplayName displayNameField;

        private ODMcomplexTypeDefinitionFullName fullNameField;

        private ODMcomplexTypeDefinitionFirstName firstNameField;

        private ODMcomplexTypeDefinitionLastName lastNameField;

        private ODMcomplexTypeDefinitionOrganization organizationField;

        private List<ODMcomplexTypeDefinitionAddress> addressField;

        private List<ODMcomplexTypeDefinitionEmail> emailField;

        private ODMcomplexTypeDefinitionPicture pictureField;

        private ODMcomplexTypeDefinitionPager pagerField;

        private List<ODMcomplexTypeDefinitionFax> faxField;

        private List<ODMcomplexTypeDefinitionPhone> phoneField;

        private List<ODMcomplexTypeDefinitionLocationRef> locationRefField;

        private List<ODMcomplexTypeDefinitionCertificate> certificateField;

        private string oIDField;

        private UserType userTypeField;

        private bool userTypeFieldSpecified;

        public ODMcomplexTypeDefinitionUser()
        {
            this.certificateField = new List<ODMcomplexTypeDefinitionCertificate>();
            this.locationRefField = new List<ODMcomplexTypeDefinitionLocationRef>();
            this.phoneField = new List<ODMcomplexTypeDefinitionPhone>();
            this.faxField = new List<ODMcomplexTypeDefinitionFax>();
            this.pagerField = new ODMcomplexTypeDefinitionPager();
            this.pictureField = new ODMcomplexTypeDefinitionPicture();
            this.emailField = new List<ODMcomplexTypeDefinitionEmail>();
            this.addressField = new List<ODMcomplexTypeDefinitionAddress>();
            this.organizationField = new ODMcomplexTypeDefinitionOrganization();
            this.lastNameField = new ODMcomplexTypeDefinitionLastName();
            this.firstNameField = new ODMcomplexTypeDefinitionFirstName();
            this.fullNameField = new ODMcomplexTypeDefinitionFullName();
            this.displayNameField = new ODMcomplexTypeDefinitionDisplayName();
            this.loginNameField = new ODMcomplexTypeDefinitionLoginName();
        }

        public ODMcomplexTypeDefinitionLoginName LoginName
        {
            get
            {
                return this.loginNameField;
            }
            set
            {
                if ((this.loginNameField != null))
                {
                    if ((loginNameField.Equals(value) != true))
                    {
                        this.loginNameField = value;
                        this.OnPropertyChanged("LoginName", value);
                    }
                }
                else
                {
                    this.loginNameField = value;
                    this.OnPropertyChanged("LoginName", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionDisplayName DisplayName
        {
            get
            {
                return this.displayNameField;
            }
            set
            {
                if ((this.displayNameField != null))
                {
                    if ((displayNameField.Equals(value) != true))
                    {
                        this.displayNameField = value;
                        this.OnPropertyChanged("DisplayName", value);
                    }
                }
                else
                {
                    this.displayNameField = value;
                    this.OnPropertyChanged("DisplayName", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionFullName FullName
        {
            get
            {
                return this.fullNameField;
            }
            set
            {
                if ((this.fullNameField != null))
                {
                    if ((fullNameField.Equals(value) != true))
                    {
                        this.fullNameField = value;
                        this.OnPropertyChanged("FullName", value);
                    }
                }
                else
                {
                    this.fullNameField = value;
                    this.OnPropertyChanged("FullName", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionFirstName FirstName
        {
            get
            {
                return this.firstNameField;
            }
            set
            {
                if ((this.firstNameField != null))
                {
                    if ((firstNameField.Equals(value) != true))
                    {
                        this.firstNameField = value;
                        this.OnPropertyChanged("FirstName", value);
                    }
                }
                else
                {
                    this.firstNameField = value;
                    this.OnPropertyChanged("FirstName", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionLastName LastName
        {
            get
            {
                return this.lastNameField;
            }
            set
            {
                if ((this.lastNameField != null))
                {
                    if ((lastNameField.Equals(value) != true))
                    {
                        this.lastNameField = value;
                        this.OnPropertyChanged("LastName", value);
                    }
                }
                else
                {
                    this.lastNameField = value;
                    this.OnPropertyChanged("LastName", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionOrganization Organization
        {
            get
            {
                return this.organizationField;
            }
            set
            {
                if ((this.organizationField != null))
                {
                    if ((organizationField.Equals(value) != true))
                    {
                        this.organizationField = value;
                        this.OnPropertyChanged("Organization", value);
                    }
                }
                else
                {
                    this.organizationField = value;
                    this.OnPropertyChanged("Organization", value);
                }
            }
        }

        [XmlElement("Address")]
        public List<ODMcomplexTypeDefinitionAddress> Address
        {
            get
            {
                return this.addressField;
            }
            set
            {
                if ((this.addressField != null))
                {
                    if ((addressField.Equals(value) != true))
                    {
                        this.addressField = value;
                        this.OnPropertyChanged("Address", value);
                    }
                }
                else
                {
                    this.addressField = value;
                    this.OnPropertyChanged("Address", value);
                }
            }
        }

        [XmlElement("Email")]
        public List<ODMcomplexTypeDefinitionEmail> Email
        {
            get
            {
                return this.emailField;
            }
            set
            {
                if ((this.emailField != null))
                {
                    if ((emailField.Equals(value) != true))
                    {
                        this.emailField = value;
                        this.OnPropertyChanged("Email", value);
                    }
                }
                else
                {
                    this.emailField = value;
                    this.OnPropertyChanged("Email", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionPicture Picture
        {
            get
            {
                return this.pictureField;
            }
            set
            {
                if ((this.pictureField != null))
                {
                    if ((pictureField.Equals(value) != true))
                    {
                        this.pictureField = value;
                        this.OnPropertyChanged("Picture", value);
                    }
                }
                else
                {
                    this.pictureField = value;
                    this.OnPropertyChanged("Picture", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionPager Pager
        {
            get
            {
                return this.pagerField;
            }
            set
            {
                if ((this.pagerField != null))
                {
                    if ((pagerField.Equals(value) != true))
                    {
                        this.pagerField = value;
                        this.OnPropertyChanged("Pager", value);
                    }
                }
                else
                {
                    this.pagerField = value;
                    this.OnPropertyChanged("Pager", value);
                }
            }
        }

        [XmlElement("Fax")]
        public List<ODMcomplexTypeDefinitionFax> Fax
        {
            get
            {
                return this.faxField;
            }
            set
            {
                if ((this.faxField != null))
                {
                    if ((faxField.Equals(value) != true))
                    {
                        this.faxField = value;
                        this.OnPropertyChanged("Fax", value);
                    }
                }
                else
                {
                    this.faxField = value;
                    this.OnPropertyChanged("Fax", value);
                }
            }
        }

        [XmlElement("Phone")]
        public List<ODMcomplexTypeDefinitionPhone> Phone
        {
            get
            {
                return this.phoneField;
            }
            set
            {
                if ((this.phoneField != null))
                {
                    if ((phoneField.Equals(value) != true))
                    {
                        this.phoneField = value;
                        this.OnPropertyChanged("Phone", value);
                    }
                }
                else
                {
                    this.phoneField = value;
                    this.OnPropertyChanged("Phone", value);
                }
            }
        }

        [XmlElement("LocationRef")]
        public List<ODMcomplexTypeDefinitionLocationRef> LocationRef
        {
            get
            {
                return this.locationRefField;
            }
            set
            {
                if ((this.locationRefField != null))
                {
                    if ((locationRefField.Equals(value) != true))
                    {
                        this.locationRefField = value;
                        this.OnPropertyChanged("LocationRef", value);
                    }
                }
                else
                {
                    this.locationRefField = value;
                    this.OnPropertyChanged("LocationRef", value);
                }
            }
        }

        [XmlElement("Certificate")]
        public List<ODMcomplexTypeDefinitionCertificate> Certificate
        {
            get
            {
                return this.certificateField;
            }
            set
            {
                if ((this.certificateField != null))
                {
                    if ((certificateField.Equals(value) != true))
                    {
                        this.certificateField = value;
                        this.OnPropertyChanged("Certificate", value);
                    }
                }
                else
                {
                    this.certificateField = value;
                    this.OnPropertyChanged("Certificate", value);
                }
            }
        }

        [XmlAttribute]
        public string OID
        {
            get
            {
                return this.oIDField;
            }
            set
            {
                if ((this.oIDField != null))
                {
                    if ((oIDField.Equals(value) != true))
                    {
                        this.oIDField = value;
                        this.OnPropertyChanged("OID", value);
                    }
                }
                else
                {
                    this.oIDField = value;
                    this.OnPropertyChanged("OID", value);
                }
            }
        }

        [XmlAttribute]
        public UserType UserType
        {
            get
            {
                return this.userTypeField;
            }
            set
            {
                if ((userTypeField.Equals(value) != true))
                {
                    this.userTypeField = value;
                    this.OnPropertyChanged("UserType", value);
                }
            }
        }

        [XmlIgnore]
        public bool UserTypeSpecified
        {
            get
            {
                return this.userTypeFieldSpecified;
            }
            set
            {
                if ((userTypeFieldSpecified.Equals(value) != true))
                {
                    this.userTypeFieldSpecified = value;
                    this.OnPropertyChanged("UserTypeSpecified", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-LoginName", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("LoginName", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionLoginName : EntityBase<ODMcomplexTypeDefinitionLoginName>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-DisplayName", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("DisplayName", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionDisplayName : EntityBase<ODMcomplexTypeDefinitionDisplayName>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-FullName", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("FullName", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionFullName : EntityBase<ODMcomplexTypeDefinitionFullName>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-FirstName", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("FirstName", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionFirstName : EntityBase<ODMcomplexTypeDefinitionFirstName>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-LastName", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("LastName", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionLastName : EntityBase<ODMcomplexTypeDefinitionLastName>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Organization", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Organization", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionOrganization : EntityBase<ODMcomplexTypeDefinitionOrganization>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Address", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Address", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionAddress : EntityBase<ODMcomplexTypeDefinitionAddress>
    {

        private List<ODMcomplexTypeDefinitionStreetName> streetNameField;

        private ODMcomplexTypeDefinitionCity cityField;

        private ODMcomplexTypeDefinitionStateProv stateProvField;

        private ODMcomplexTypeDefinitionCountry countryField;

        private ODMcomplexTypeDefinitionPostalCode postalCodeField;

        private ODMcomplexTypeDefinitionOtherText otherTextField;

        public ODMcomplexTypeDefinitionAddress()
        {
            this.otherTextField = new ODMcomplexTypeDefinitionOtherText();
            this.postalCodeField = new ODMcomplexTypeDefinitionPostalCode();
            this.countryField = new ODMcomplexTypeDefinitionCountry();
            this.stateProvField = new ODMcomplexTypeDefinitionStateProv();
            this.cityField = new ODMcomplexTypeDefinitionCity();
            this.streetNameField = new List<ODMcomplexTypeDefinitionStreetName>();
        }

        [XmlElement("StreetName")]
        public List<ODMcomplexTypeDefinitionStreetName> StreetName
        {
            get
            {
                return this.streetNameField;
            }
            set
            {
                if ((this.streetNameField != null))
                {
                    if ((streetNameField.Equals(value) != true))
                    {
                        this.streetNameField = value;
                        this.OnPropertyChanged("StreetName", value);
                    }
                }
                else
                {
                    this.streetNameField = value;
                    this.OnPropertyChanged("StreetName", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionCity City
        {
            get
            {
                return this.cityField;
            }
            set
            {
                if ((this.cityField != null))
                {
                    if ((cityField.Equals(value) != true))
                    {
                        this.cityField = value;
                        this.OnPropertyChanged("City", value);
                    }
                }
                else
                {
                    this.cityField = value;
                    this.OnPropertyChanged("City", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionStateProv StateProv
        {
            get
            {
                return this.stateProvField;
            }
            set
            {
                if ((this.stateProvField != null))
                {
                    if ((stateProvField.Equals(value) != true))
                    {
                        this.stateProvField = value;
                        this.OnPropertyChanged("StateProv", value);
                    }
                }
                else
                {
                    this.stateProvField = value;
                    this.OnPropertyChanged("StateProv", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionCountry Country
        {
            get
            {
                return this.countryField;
            }
            set
            {
                if ((this.countryField != null))
                {
                    if ((countryField.Equals(value) != true))
                    {
                        this.countryField = value;
                        this.OnPropertyChanged("Country", value);
                    }
                }
                else
                {
                    this.countryField = value;
                    this.OnPropertyChanged("Country", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionPostalCode PostalCode
        {
            get
            {
                return this.postalCodeField;
            }
            set
            {
                if ((this.postalCodeField != null))
                {
                    if ((postalCodeField.Equals(value) != true))
                    {
                        this.postalCodeField = value;
                        this.OnPropertyChanged("PostalCode", value);
                    }
                }
                else
                {
                    this.postalCodeField = value;
                    this.OnPropertyChanged("PostalCode", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionOtherText OtherText
        {
            get
            {
                return this.otherTextField;
            }
            set
            {
                if ((this.otherTextField != null))
                {
                    if ((otherTextField.Equals(value) != true))
                    {
                        this.otherTextField = value;
                        this.OnPropertyChanged("OtherText", value);
                    }
                }
                else
                {
                    this.otherTextField = value;
                    this.OnPropertyChanged("OtherText", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-StreetName", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("StreetName", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionStreetName : EntityBase<ODMcomplexTypeDefinitionStreetName>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-City", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("City", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionCity : EntityBase<ODMcomplexTypeDefinitionCity>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-StateProv", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("StateProv", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionStateProv : EntityBase<ODMcomplexTypeDefinitionStateProv>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Country", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Country", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionCountry : EntityBase<ODMcomplexTypeDefinitionCountry>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-PostalCode", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("PostalCode", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionPostalCode : EntityBase<ODMcomplexTypeDefinitionPostalCode>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-OtherText", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("OtherText", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionOtherText : EntityBase<ODMcomplexTypeDefinitionOtherText>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Email", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Email", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionEmail : EntityBase<ODMcomplexTypeDefinitionEmail>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Picture", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Picture", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionPicture : EntityBase<ODMcomplexTypeDefinitionPicture>
    {

        private string pictureFileNameField;

        private string imageTypeField;

        [XmlAttribute(DataType = "anyURI")]
        public string PictureFileName
        {
            get
            {
                return this.pictureFileNameField;
            }
            set
            {
                if ((this.pictureFileNameField != null))
                {
                    if ((pictureFileNameField.Equals(value) != true))
                    {
                        this.pictureFileNameField = value;
                        this.OnPropertyChanged("PictureFileName", value);
                    }
                }
                else
                {
                    this.pictureFileNameField = value;
                    this.OnPropertyChanged("PictureFileName", value);
                }
            }
        }

        [XmlAttribute]
        public string ImageType
        {
            get
            {
                return this.imageTypeField;
            }
            set
            {
                if ((this.imageTypeField != null))
                {
                    if ((imageTypeField.Equals(value) != true))
                    {
                        this.imageTypeField = value;
                        this.OnPropertyChanged("ImageType", value);
                    }
                }
                else
                {
                    this.imageTypeField = value;
                    this.OnPropertyChanged("ImageType", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Pager", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Pager", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionPager : EntityBase<ODMcomplexTypeDefinitionPager>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Fax", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Fax", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionFax : EntityBase<ODMcomplexTypeDefinitionFax>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Phone", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Phone", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionPhone : EntityBase<ODMcomplexTypeDefinitionPhone>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-LocationRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("LocationRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionLocationRef : EntityBase<ODMcomplexTypeDefinitionLocationRef>
    {

        private string locationOIDField;

        [XmlAttribute]
        public string LocationOID
        {
            get
            {
                return this.locationOIDField;
            }
            set
            {
                if ((this.locationOIDField != null))
                {
                    if ((locationOIDField.Equals(value) != true))
                    {
                        this.locationOIDField = value;
                        this.OnPropertyChanged("LocationOID", value);
                    }
                }
                else
                {
                    this.locationOIDField = value;
                    this.OnPropertyChanged("LocationOID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Certificate", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Certificate", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionCertificate : EntityBase<ODMcomplexTypeDefinitionCertificate>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    public enum UserType
    {

        /// <remarks/>
        Sponsor,

        /// <remarks/>
        Investigator,

        /// <remarks/>
        Lab,

        /// <remarks/>
        Other,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Location", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Location", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionLocation : EntityBase<ODMcomplexTypeDefinitionLocation>
    {

        private List<ODMcomplexTypeDefinitionMetaDataVersionRef> metaDataVersionRefField;

        private string oIDField;

        private string nameField;

        private LocationType locationTypeField;

        private bool locationTypeFieldSpecified;

        public ODMcomplexTypeDefinitionLocation()
        {
            this.metaDataVersionRefField = new List<ODMcomplexTypeDefinitionMetaDataVersionRef>();
        }

        [XmlElement("MetaDataVersionRef")]
        public List<ODMcomplexTypeDefinitionMetaDataVersionRef> MetaDataVersionRef
        {
            get
            {
                return this.metaDataVersionRefField;
            }
            set
            {
                if ((this.metaDataVersionRefField != null))
                {
                    if ((metaDataVersionRefField.Equals(value) != true))
                    {
                        this.metaDataVersionRefField = value;
                        this.OnPropertyChanged("MetaDataVersionRef", value);
                    }
                }
                else
                {
                    this.metaDataVersionRefField = value;
                    this.OnPropertyChanged("MetaDataVersionRef", value);
                }
            }
        }

        [XmlAttribute]
        public string OID
        {
            get
            {
                return this.oIDField;
            }
            set
            {
                if ((this.oIDField != null))
                {
                    if ((oIDField.Equals(value) != true))
                    {
                        this.oIDField = value;
                        this.OnPropertyChanged("OID", value);
                    }
                }
                else
                {
                    this.oIDField = value;
                    this.OnPropertyChanged("OID", value);
                }
            }
        }

        [XmlAttribute]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("Name", value);
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("Name", value);
                }
            }
        }

        [XmlAttribute]
        public LocationType LocationType
        {
            get
            {
                return this.locationTypeField;
            }
            set
            {
                if ((locationTypeField.Equals(value) != true))
                {
                    this.locationTypeField = value;
                    this.OnPropertyChanged("LocationType", value);
                }
            }
        }

        [XmlIgnore]
        public bool LocationTypeSpecified
        {
            get
            {
                return this.locationTypeFieldSpecified;
            }
            set
            {
                if ((locationTypeFieldSpecified.Equals(value) != true))
                {
                    this.locationTypeFieldSpecified = value;
                    this.OnPropertyChanged("LocationTypeSpecified", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-MetaDataVersionRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("MetaDataVersionRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionMetaDataVersionRef : EntityBase<ODMcomplexTypeDefinitionMetaDataVersionRef>
    {

        private string studyOIDField;

        private string metaDataVersionOIDField;

        private System.DateTime effectiveDateField;

        [XmlAttribute]
        public string StudyOID
        {
            get
            {
                return this.studyOIDField;
            }
            set
            {
                if ((this.studyOIDField != null))
                {
                    if ((studyOIDField.Equals(value) != true))
                    {
                        this.studyOIDField = value;
                        this.OnPropertyChanged("StudyOID", value);
                    }
                }
                else
                {
                    this.studyOIDField = value;
                    this.OnPropertyChanged("StudyOID", value);
                }
            }
        }

        [XmlAttribute]
        public string MetaDataVersionOID
        {
            get
            {
                return this.metaDataVersionOIDField;
            }
            set
            {
                if ((this.metaDataVersionOIDField != null))
                {
                    if ((metaDataVersionOIDField.Equals(value) != true))
                    {
                        this.metaDataVersionOIDField = value;
                        this.OnPropertyChanged("MetaDataVersionOID", value);
                    }
                }
                else
                {
                    this.metaDataVersionOIDField = value;
                    this.OnPropertyChanged("MetaDataVersionOID", value);
                }
            }
        }

        [XmlAttribute(DataType = "date")]
        public System.DateTime EffectiveDate
        {
            get
            {
                return this.effectiveDateField;
            }
            set
            {
                if ((effectiveDateField.Equals(value) != true))
                {
                    this.effectiveDateField = value;
                    this.OnPropertyChanged("EffectiveDate", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    public enum LocationType
    {

        /// <remarks/>
        Sponsor,

        /// <remarks/>
        Site,

        /// <remarks/>
        CRO,

        /// <remarks/>
        Lab,

        /// <remarks/>
        Other,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-SignatureDef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("SignatureDef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionSignatureDef : EntityBase<ODMcomplexTypeDefinitionSignatureDef>
    {

        private ODMcomplexTypeDefinitionMeaning meaningField;

        private ODMcomplexTypeDefinitionLegalReason legalReasonField;

        private string oIDField;

        private SignMethod methodologyField;

        private bool methodologyFieldSpecified;

        public ODMcomplexTypeDefinitionSignatureDef()
        {
            this.legalReasonField = new ODMcomplexTypeDefinitionLegalReason();
            this.meaningField = new ODMcomplexTypeDefinitionMeaning();
        }

        public ODMcomplexTypeDefinitionMeaning Meaning
        {
            get
            {
                return this.meaningField;
            }
            set
            {
                if ((this.meaningField != null))
                {
                    if ((meaningField.Equals(value) != true))
                    {
                        this.meaningField = value;
                        this.OnPropertyChanged("Meaning", value);
                    }
                }
                else
                {
                    this.meaningField = value;
                    this.OnPropertyChanged("Meaning", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionLegalReason LegalReason
        {
            get
            {
                return this.legalReasonField;
            }
            set
            {
                if ((this.legalReasonField != null))
                {
                    if ((legalReasonField.Equals(value) != true))
                    {
                        this.legalReasonField = value;
                        this.OnPropertyChanged("LegalReason", value);
                    }
                }
                else
                {
                    this.legalReasonField = value;
                    this.OnPropertyChanged("LegalReason", value);
                }
            }
        }

        [XmlAttribute]
        public string OID
        {
            get
            {
                return this.oIDField;
            }
            set
            {
                if ((this.oIDField != null))
                {
                    if ((oIDField.Equals(value) != true))
                    {
                        this.oIDField = value;
                        this.OnPropertyChanged("OID", value);
                    }
                }
                else
                {
                    this.oIDField = value;
                    this.OnPropertyChanged("OID", value);
                }
            }
        }

        [XmlAttribute]
        public SignMethod Methodology
        {
            get
            {
                return this.methodologyField;
            }
            set
            {
                if ((methodologyField.Equals(value) != true))
                {
                    this.methodologyField = value;
                    this.OnPropertyChanged("Methodology", value);
                }
            }
        }

        [XmlIgnore]
        public bool MethodologySpecified
        {
            get
            {
                return this.methodologyFieldSpecified;
            }
            set
            {
                if ((methodologyFieldSpecified.Equals(value) != true))
                {
                    this.methodologyFieldSpecified = value;
                    this.OnPropertyChanged("MethodologySpecified", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Meaning", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Meaning", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionMeaning : EntityBase<ODMcomplexTypeDefinitionMeaning>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-LegalReason", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("LegalReason", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionLegalReason : EntityBase<ODMcomplexTypeDefinitionLegalReason>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    public enum SignMethod
    {

        /// <remarks/>
        Digital,

        /// <remarks/>
        Electronic,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ReferenceData", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ReferenceData", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionReferenceData : EntityBase<ODMcomplexTypeDefinitionReferenceData>
    {

        private List<ODMcomplexTypeDefinitionItemGroupData> itemGroupDataField;

        private List<ODMcomplexTypeDefinitionAuditRecord> auditRecordsField;

        private List<ODMcomplexTypeDefinitionSignature> signaturesField;

        private List<ODMcomplexTypeDefinitionAnnotation> annotationsField;

        private string studyOIDField;

        private string metaDataVersionOIDField;

        public ODMcomplexTypeDefinitionReferenceData()
        {
            this.annotationsField = new List<ODMcomplexTypeDefinitionAnnotation>();
            this.signaturesField = new List<ODMcomplexTypeDefinitionSignature>();
            this.auditRecordsField = new List<ODMcomplexTypeDefinitionAuditRecord>();
            this.itemGroupDataField = new List<ODMcomplexTypeDefinitionItemGroupData>();
        }

        [XmlElement("ItemGroupData")]
        public List<ODMcomplexTypeDefinitionItemGroupData> ItemGroupData
        {
            get
            {
                return this.itemGroupDataField;
            }
            set
            {
                if ((this.itemGroupDataField != null))
                {
                    if ((itemGroupDataField.Equals(value) != true))
                    {
                        this.itemGroupDataField = value;
                        this.OnPropertyChanged("ItemGroupData", value);
                    }
                }
                else
                {
                    this.itemGroupDataField = value;
                    this.OnPropertyChanged("ItemGroupData", value);
                }
            }
        }

        [XmlArrayItem("AuditRecord", typeof(ODMcomplexTypeDefinitionAuditRecord), IsNullable = false)]
        public List<ODMcomplexTypeDefinitionAuditRecord> AuditRecords
        {
            get
            {
                return this.auditRecordsField;
            }
            set
            {
                if ((this.auditRecordsField != null))
                {
                    if ((auditRecordsField.Equals(value) != true))
                    {
                        this.auditRecordsField = value;
                        this.OnPropertyChanged("AuditRecords", value);
                    }
                }
                else
                {
                    this.auditRecordsField = value;
                    this.OnPropertyChanged("AuditRecords", value);
                }
            }
        }

        [XmlArrayItem("Signature", typeof(ODMcomplexTypeDefinitionSignature), IsNullable = false)]
        public List<ODMcomplexTypeDefinitionSignature> Signatures
        {
            get
            {
                return this.signaturesField;
            }
            set
            {
                if ((this.signaturesField != null))
                {
                    if ((signaturesField.Equals(value) != true))
                    {
                        this.signaturesField = value;
                        this.OnPropertyChanged("Signatures", value);
                    }
                }
                else
                {
                    this.signaturesField = value;
                    this.OnPropertyChanged("Signatures", value);
                }
            }
        }

        [XmlArrayItem("Annotation", typeof(ODMcomplexTypeDefinitionAnnotation), IsNullable = false)]
        public List<ODMcomplexTypeDefinitionAnnotation> Annotations
        {
            get
            {
                return this.annotationsField;
            }
            set
            {
                if ((this.annotationsField != null))
                {
                    if ((annotationsField.Equals(value) != true))
                    {
                        this.annotationsField = value;
                        this.OnPropertyChanged("Annotations", value);
                    }
                }
                else
                {
                    this.annotationsField = value;
                    this.OnPropertyChanged("Annotations", value);
                }
            }
        }

        [XmlAttribute]
        public string StudyOID
        {
            get
            {
                return this.studyOIDField;
            }
            set
            {
                if ((this.studyOIDField != null))
                {
                    if ((studyOIDField.Equals(value) != true))
                    {
                        this.studyOIDField = value;
                        this.OnPropertyChanged("StudyOID", value);
                    }
                }
                else
                {
                    this.studyOIDField = value;
                    this.OnPropertyChanged("StudyOID", value);
                }
            }
        }

        [XmlAttribute]
        public string MetaDataVersionOID
        {
            get
            {
                return this.metaDataVersionOIDField;
            }
            set
            {
                if ((this.metaDataVersionOIDField != null))
                {
                    if ((metaDataVersionOIDField.Equals(value) != true))
                    {
                        this.metaDataVersionOIDField = value;
                        this.OnPropertyChanged("MetaDataVersionOID", value);
                    }
                }
                else
                {
                    this.metaDataVersionOIDField = value;
                    this.OnPropertyChanged("MetaDataVersionOID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemGroupData", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemGroupData", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemGroupData : EntityBase<ODMcomplexTypeDefinitionItemGroupData>
    {

        private ODMcomplexTypeDefinitionAuditRecord auditRecordField;

        private ODMcomplexTypeDefinitionSignature signatureField;

        private List<ODMcomplexTypeDefinitionAnnotation> annotationField;

        private List<object> itemsField;

        private string itemGroupOIDField;

        private string itemGroupRepeatKeyField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        public ODMcomplexTypeDefinitionItemGroupData()
        {
            this.itemsField = new List<object>();
            this.annotationField = new List<ODMcomplexTypeDefinitionAnnotation>();
            this.signatureField = new ODMcomplexTypeDefinitionSignature();
            this.auditRecordField = new ODMcomplexTypeDefinitionAuditRecord();
        }

        public ODMcomplexTypeDefinitionAuditRecord AuditRecord
        {
            get
            {
                return this.auditRecordField;
            }
            set
            {
                if ((this.auditRecordField != null))
                {
                    if ((auditRecordField.Equals(value) != true))
                    {
                        this.auditRecordField = value;
                        this.OnPropertyChanged("AuditRecord", value);
                    }
                }
                else
                {
                    this.auditRecordField = value;
                    this.OnPropertyChanged("AuditRecord", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionSignature Signature
        {
            get
            {
                return this.signatureField;
            }
            set
            {
                if ((this.signatureField != null))
                {
                    if ((signatureField.Equals(value) != true))
                    {
                        this.signatureField = value;
                        this.OnPropertyChanged("Signature", value);
                    }
                }
                else
                {
                    this.signatureField = value;
                    this.OnPropertyChanged("Signature", value);
                }
            }
        }

        [XmlElement("Annotation")]
        public List<ODMcomplexTypeDefinitionAnnotation> Annotation
        {
            get
            {
                return this.annotationField;
            }
            set
            {
                if ((this.annotationField != null))
                {
                    if ((annotationField.Equals(value) != true))
                    {
                        this.annotationField = value;
                        this.OnPropertyChanged("Annotation", value);
                    }
                }
                else
                {
                    this.annotationField = value;
                    this.OnPropertyChanged("Annotation", value);
                }
            }
        }

        [XmlElement("ItemData", typeof(ODMcomplexTypeDefinitionItemData))]
        [XmlElement("ItemDataAny", typeof(ODMcomplexTypeDefinitionItemDataAny))]
        [XmlElement("ItemDataBase64Binary", typeof(ODMcomplexTypeDefinitionItemDataBase64Binary))]
        [XmlElement("ItemDataBase64Float", typeof(ODMcomplexTypeDefinitionItemDataBase64Float))]
        [XmlElement("ItemDataBoolean", typeof(ODMcomplexTypeDefinitionItemDataBoolean))]
        [XmlElement("ItemDataDate", typeof(ODMcomplexTypeDefinitionItemDataDate))]
        [XmlElement("ItemDataDatetime", typeof(ODMcomplexTypeDefinitionItemDataDatetime))]
        [XmlElement("ItemDataDouble", typeof(ODMcomplexTypeDefinitionItemDataDouble))]
        [XmlElement("ItemDataDurationDatetime", typeof(ODMcomplexTypeDefinitionItemDataDurationDatetime))]
        [XmlElement("ItemDataFloat", typeof(ODMcomplexTypeDefinitionItemDataFloat))]
        [XmlElement("ItemDataHexBinary", typeof(ODMcomplexTypeDefinitionItemDataHexBinary))]
        [XmlElement("ItemDataHexFloat", typeof(ODMcomplexTypeDefinitionItemDataHexFloat))]
        [XmlElement("ItemDataIncompleteDate", typeof(ODMcomplexTypeDefinitionItemDataIncompleteDate))]
        [XmlElement("ItemDataIncompleteDatetime", typeof(ODMcomplexTypeDefinitionItemDataIncompleteDatetime))]
        [XmlElement("ItemDataIncompleteTime", typeof(ODMcomplexTypeDefinitionItemDataIncompleteTime))]
        [XmlElement("ItemDataInteger", typeof(ODMcomplexTypeDefinitionItemDataInteger))]
        [XmlElement("ItemDataIntervalDatetime", typeof(ODMcomplexTypeDefinitionItemDataIntervalDatetime))]
        [XmlElement("ItemDataPartialDate", typeof(ODMcomplexTypeDefinitionItemDataPartialDate))]
        [XmlElement("ItemDataPartialDatetime", typeof(ODMcomplexTypeDefinitionItemDataPartialDatetime))]
        [XmlElement("ItemDataPartialTime", typeof(ODMcomplexTypeDefinitionItemDataPartialTime))]
        [XmlElement("ItemDataString", typeof(ODMcomplexTypeDefinitionItemDataString))]
        [XmlElement("ItemDataTime", typeof(ODMcomplexTypeDefinitionItemDataTime))]
        [XmlElement("ItemDataURI", typeof(ODMcomplexTypeDefinitionItemDataURI))]
        public List<object> Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                if ((this.itemsField != null))
                {
                    if ((itemsField.Equals(value) != true))
                    {
                        this.itemsField = value;
                        this.OnPropertyChanged("Items", value);
                    }
                }
                else
                {
                    this.itemsField = value;
                    this.OnPropertyChanged("Items", value);
                }
            }
        }

        [XmlAttribute]
        public string ItemGroupOID
        {
            get
            {
                return this.itemGroupOIDField;
            }
            set
            {
                if ((this.itemGroupOIDField != null))
                {
                    if ((itemGroupOIDField.Equals(value) != true))
                    {
                        this.itemGroupOIDField = value;
                        this.OnPropertyChanged("ItemGroupOID", value);
                    }
                }
                else
                {
                    this.itemGroupOIDField = value;
                    this.OnPropertyChanged("ItemGroupOID", value);
                }
            }
        }

        [XmlAttribute]
        public string ItemGroupRepeatKey
        {
            get
            {
                return this.itemGroupRepeatKeyField;
            }
            set
            {
                if ((this.itemGroupRepeatKeyField != null))
                {
                    if ((itemGroupRepeatKeyField.Equals(value) != true))
                    {
                        this.itemGroupRepeatKeyField = value;
                        this.OnPropertyChanged("ItemGroupRepeatKey", value);
                    }
                }
                else
                {
                    this.itemGroupRepeatKeyField = value;
                    this.OnPropertyChanged("ItemGroupRepeatKey", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-AuditRecord", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("AuditRecord", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionAuditRecord : EntityBase<ODMcomplexTypeDefinitionAuditRecord>
    {

        private ODMcomplexTypeDefinitionUserRef userRefField;

        private ODMcomplexTypeDefinitionLocationRef locationRefField;

        private ODMcomplexTypeDefinitionDateTimeStamp dateTimeStampField;

        private ODMcomplexTypeDefinitionReasonForChange reasonForChangeField;

        private ODMcomplexTypeDefinitionSourceID sourceIDField;

        private EditPointType editPointField;

        private bool editPointFieldSpecified;

        private YesOrNo usedImputationMethodField;

        private bool usedImputationMethodFieldSpecified;

        private string idField;

        public ODMcomplexTypeDefinitionAuditRecord()
        {
            this.sourceIDField = new ODMcomplexTypeDefinitionSourceID();
            this.reasonForChangeField = new ODMcomplexTypeDefinitionReasonForChange();
            this.dateTimeStampField = new ODMcomplexTypeDefinitionDateTimeStamp();
            this.locationRefField = new ODMcomplexTypeDefinitionLocationRef();
            this.userRefField = new ODMcomplexTypeDefinitionUserRef();
        }

        public ODMcomplexTypeDefinitionUserRef UserRef
        {
            get
            {
                return this.userRefField;
            }
            set
            {
                if ((this.userRefField != null))
                {
                    if ((userRefField.Equals(value) != true))
                    {
                        this.userRefField = value;
                        this.OnPropertyChanged("UserRef", value);
                    }
                }
                else
                {
                    this.userRefField = value;
                    this.OnPropertyChanged("UserRef", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionLocationRef LocationRef
        {
            get
            {
                return this.locationRefField;
            }
            set
            {
                if ((this.locationRefField != null))
                {
                    if ((locationRefField.Equals(value) != true))
                    {
                        this.locationRefField = value;
                        this.OnPropertyChanged("LocationRef", value);
                    }
                }
                else
                {
                    this.locationRefField = value;
                    this.OnPropertyChanged("LocationRef", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionDateTimeStamp DateTimeStamp
        {
            get
            {
                return this.dateTimeStampField;
            }
            set
            {
                if ((this.dateTimeStampField != null))
                {
                    if ((dateTimeStampField.Equals(value) != true))
                    {
                        this.dateTimeStampField = value;
                        this.OnPropertyChanged("DateTimeStamp", value);
                    }
                }
                else
                {
                    this.dateTimeStampField = value;
                    this.OnPropertyChanged("DateTimeStamp", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionReasonForChange ReasonForChange
        {
            get
            {
                return this.reasonForChangeField;
            }
            set
            {
                if ((this.reasonForChangeField != null))
                {
                    if ((reasonForChangeField.Equals(value) != true))
                    {
                        this.reasonForChangeField = value;
                        this.OnPropertyChanged("ReasonForChange", value);
                    }
                }
                else
                {
                    this.reasonForChangeField = value;
                    this.OnPropertyChanged("ReasonForChange", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionSourceID SourceID
        {
            get
            {
                return this.sourceIDField;
            }
            set
            {
                if ((this.sourceIDField != null))
                {
                    if ((sourceIDField.Equals(value) != true))
                    {
                        this.sourceIDField = value;
                        this.OnPropertyChanged("SourceID", value);
                    }
                }
                else
                {
                    this.sourceIDField = value;
                    this.OnPropertyChanged("SourceID", value);
                }
            }
        }

        [XmlAttribute]
        public EditPointType EditPoint
        {
            get
            {
                return this.editPointField;
            }
            set
            {
                if ((editPointField.Equals(value) != true))
                {
                    this.editPointField = value;
                    this.OnPropertyChanged("EditPoint", value);
                }
            }
        }

        [XmlIgnore]
        public bool EditPointSpecified
        {
            get
            {
                return this.editPointFieldSpecified;
            }
            set
            {
                if ((editPointFieldSpecified.Equals(value) != true))
                {
                    this.editPointFieldSpecified = value;
                    this.OnPropertyChanged("EditPointSpecified", value);
                }
            }
        }

        [XmlAttribute]
        public YesOrNo UsedImputationMethod
        {
            get
            {
                return this.usedImputationMethodField;
            }
            set
            {
                if ((usedImputationMethodField.Equals(value) != true))
                {
                    this.usedImputationMethodField = value;
                    this.OnPropertyChanged("UsedImputationMethod", value);
                }
            }
        }

        [XmlIgnore]
        public bool UsedImputationMethodSpecified
        {
            get
            {
                return this.usedImputationMethodFieldSpecified;
            }
            set
            {
                if ((usedImputationMethodFieldSpecified.Equals(value) != true))
                {
                    this.usedImputationMethodFieldSpecified = value;
                    this.OnPropertyChanged("UsedImputationMethodSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "ID")]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                if ((this.idField != null))
                {
                    if ((idField.Equals(value) != true))
                    {
                        this.idField = value;
                        this.OnPropertyChanged("ID", value);
                    }
                }
                else
                {
                    this.idField = value;
                    this.OnPropertyChanged("ID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-UserRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("UserRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionUserRef : EntityBase<ODMcomplexTypeDefinitionUserRef>
    {

        private string userOIDField;

        [XmlAttribute]
        public string UserOID
        {
            get
            {
                return this.userOIDField;
            }
            set
            {
                if ((this.userOIDField != null))
                {
                    if ((userOIDField.Equals(value) != true))
                    {
                        this.userOIDField = value;
                        this.OnPropertyChanged("UserOID", value);
                    }
                }
                else
                {
                    this.userOIDField = value;
                    this.OnPropertyChanged("UserOID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-DateTimeStamp", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("DateTimeStamp", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionDateTimeStamp : EntityBase<ODMcomplexTypeDefinitionDateTimeStamp>
    {

        private System.DateTime valueField;

        [XmlAttribute]
        public System.DateTime Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((valueField.Equals(value) != true))
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ReasonForChange", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ReasonForChange", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionReasonForChange : EntityBase<ODMcomplexTypeDefinitionReasonForChange>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-SourceID", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("SourceID", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionSourceID : EntityBase<ODMcomplexTypeDefinitionSourceID>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    public enum EditPointType
    {

        /// <remarks/>
        Monitoring,

        /// <remarks/>
        DataManagement,

        /// <remarks/>
        DBAudit,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Signature", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Signature", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionSignature : EntityBase<ODMcomplexTypeDefinitionSignature>
    {

        private ODMcomplexTypeDefinitionUserRef userRefField;

        private ODMcomplexTypeDefinitionLocationRef locationRefField;

        private ODMcomplexTypeDefinitionSignatureRef signatureRefField;

        private ODMcomplexTypeDefinitionDateTimeStamp dateTimeStampField;

        private ODMcomplexTypeDefinitionCryptoBindingManifest cryptoBindingManifestField;

        private string idField;

        public ODMcomplexTypeDefinitionSignature()
        {
            this.cryptoBindingManifestField = new ODMcomplexTypeDefinitionCryptoBindingManifest();
            this.dateTimeStampField = new ODMcomplexTypeDefinitionDateTimeStamp();
            this.signatureRefField = new ODMcomplexTypeDefinitionSignatureRef();
            this.locationRefField = new ODMcomplexTypeDefinitionLocationRef();
            this.userRefField = new ODMcomplexTypeDefinitionUserRef();
        }

        public ODMcomplexTypeDefinitionUserRef UserRef
        {
            get
            {
                return this.userRefField;
            }
            set
            {
                if ((this.userRefField != null))
                {
                    if ((userRefField.Equals(value) != true))
                    {
                        this.userRefField = value;
                        this.OnPropertyChanged("UserRef", value);
                    }
                }
                else
                {
                    this.userRefField = value;
                    this.OnPropertyChanged("UserRef", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionLocationRef LocationRef
        {
            get
            {
                return this.locationRefField;
            }
            set
            {
                if ((this.locationRefField != null))
                {
                    if ((locationRefField.Equals(value) != true))
                    {
                        this.locationRefField = value;
                        this.OnPropertyChanged("LocationRef", value);
                    }
                }
                else
                {
                    this.locationRefField = value;
                    this.OnPropertyChanged("LocationRef", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionSignatureRef SignatureRef
        {
            get
            {
                return this.signatureRefField;
            }
            set
            {
                if ((this.signatureRefField != null))
                {
                    if ((signatureRefField.Equals(value) != true))
                    {
                        this.signatureRefField = value;
                        this.OnPropertyChanged("SignatureRef", value);
                    }
                }
                else
                {
                    this.signatureRefField = value;
                    this.OnPropertyChanged("SignatureRef", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionDateTimeStamp DateTimeStamp
        {
            get
            {
                return this.dateTimeStampField;
            }
            set
            {
                if ((this.dateTimeStampField != null))
                {
                    if ((dateTimeStampField.Equals(value) != true))
                    {
                        this.dateTimeStampField = value;
                        this.OnPropertyChanged("DateTimeStamp", value);
                    }
                }
                else
                {
                    this.dateTimeStampField = value;
                    this.OnPropertyChanged("DateTimeStamp", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionCryptoBindingManifest CryptoBindingManifest
        {
            get
            {
                return this.cryptoBindingManifestField;
            }
            set
            {
                if ((this.cryptoBindingManifestField != null))
                {
                    if ((cryptoBindingManifestField.Equals(value) != true))
                    {
                        this.cryptoBindingManifestField = value;
                        this.OnPropertyChanged("CryptoBindingManifest", value);
                    }
                }
                else
                {
                    this.cryptoBindingManifestField = value;
                    this.OnPropertyChanged("CryptoBindingManifest", value);
                }
            }
        }

        [XmlAttribute(DataType = "ID")]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                if ((this.idField != null))
                {
                    if ((idField.Equals(value) != true))
                    {
                        this.idField = value;
                        this.OnPropertyChanged("ID", value);
                    }
                }
                else
                {
                    this.idField = value;
                    this.OnPropertyChanged("ID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-SignatureRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("SignatureRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionSignatureRef : EntityBase<ODMcomplexTypeDefinitionSignatureRef>
    {

        private string signatureOIDField;

        [XmlAttribute]
        public string SignatureOID
        {
            get
            {
                return this.signatureOIDField;
            }
            set
            {
                if ((this.signatureOIDField != null))
                {
                    if ((signatureOIDField.Equals(value) != true))
                    {
                        this.signatureOIDField = value;
                        this.OnPropertyChanged("SignatureOID", value);
                    }
                }
                else
                {
                    this.signatureOIDField = value;
                    this.OnPropertyChanged("SignatureOID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-CryptoBindingManifest", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("CryptoBindingManifest", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionCryptoBindingManifest : EntityBase<ODMcomplexTypeDefinitionCryptoBindingManifest>
    {

        private string valueField;

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Annotation", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Annotation", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionAnnotation : EntityBase<ODMcomplexTypeDefinitionAnnotation>
    {

        private ODMcomplexTypeDefinitionComment commentField;

        private List<ODMcomplexTypeDefinitionFlag> flagField;

        private string seqNumField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string idField;

        public ODMcomplexTypeDefinitionAnnotation()
        {
            this.flagField = new List<ODMcomplexTypeDefinitionFlag>();
            this.commentField = new ODMcomplexTypeDefinitionComment();
        }

        public ODMcomplexTypeDefinitionComment Comment
        {
            get
            {
                return this.commentField;
            }
            set
            {
                if ((this.commentField != null))
                {
                    if ((commentField.Equals(value) != true))
                    {
                        this.commentField = value;
                        this.OnPropertyChanged("Comment", value);
                    }
                }
                else
                {
                    this.commentField = value;
                    this.OnPropertyChanged("Comment", value);
                }
            }
        }

        [XmlElement("Flag")]
        public List<ODMcomplexTypeDefinitionFlag> Flag
        {
            get
            {
                return this.flagField;
            }
            set
            {
                if ((this.flagField != null))
                {
                    if ((flagField.Equals(value) != true))
                    {
                        this.flagField = value;
                        this.OnPropertyChanged("Flag", value);
                    }
                }
                else
                {
                    this.flagField = value;
                    this.OnPropertyChanged("Flag", value);
                }
            }
        }

        [XmlAttribute(DataType = "integer")]
        public string SeqNum
        {
            get
            {
                return this.seqNumField;
            }
            set
            {
                if ((this.seqNumField != null))
                {
                    if ((seqNumField.Equals(value) != true))
                    {
                        this.seqNumField = value;
                        this.OnPropertyChanged("SeqNum", value);
                    }
                }
                else
                {
                    this.seqNumField = value;
                    this.OnPropertyChanged("SeqNum", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "ID")]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                if ((this.idField != null))
                {
                    if ((idField.Equals(value) != true))
                    {
                        this.idField = value;
                        this.OnPropertyChanged("ID", value);
                    }
                }
                else
                {
                    this.idField = value;
                    this.OnPropertyChanged("ID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Comment", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Comment", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionComment : EntityBase<ODMcomplexTypeDefinitionComment>
    {

        private CommentType sponsorOrSiteField;

        private bool sponsorOrSiteFieldSpecified;

        private string valueField;

        [XmlAttribute]
        public CommentType SponsorOrSite
        {
            get
            {
                return this.sponsorOrSiteField;
            }
            set
            {
                if ((sponsorOrSiteField.Equals(value) != true))
                {
                    this.sponsorOrSiteField = value;
                    this.OnPropertyChanged("SponsorOrSite", value);
                }
            }
        }

        [XmlIgnore]
        public bool SponsorOrSiteSpecified
        {
            get
            {
                return this.sponsorOrSiteFieldSpecified;
            }
            set
            {
                if ((sponsorOrSiteFieldSpecified.Equals(value) != true))
                {
                    this.sponsorOrSiteFieldSpecified = value;
                    this.OnPropertyChanged("SponsorOrSiteSpecified", value);
                }
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    public enum CommentType
    {

        /// <remarks/>
        Sponsor,

        /// <remarks/>
        Site,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Flag", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Flag", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionFlag : EntityBase<ODMcomplexTypeDefinitionFlag>
    {

        private ODMcomplexTypeDefinitionFlagValue flagValueField;

        private ODMcomplexTypeDefinitionFlagType flagTypeField;

        public ODMcomplexTypeDefinitionFlag()
        {
            this.flagTypeField = new ODMcomplexTypeDefinitionFlagType();
            this.flagValueField = new ODMcomplexTypeDefinitionFlagValue();
        }

        public ODMcomplexTypeDefinitionFlagValue FlagValue
        {
            get
            {
                return this.flagValueField;
            }
            set
            {
                if ((this.flagValueField != null))
                {
                    if ((flagValueField.Equals(value) != true))
                    {
                        this.flagValueField = value;
                        this.OnPropertyChanged("FlagValue", value);
                    }
                }
                else
                {
                    this.flagValueField = value;
                    this.OnPropertyChanged("FlagValue", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionFlagType FlagType
        {
            get
            {
                return this.flagTypeField;
            }
            set
            {
                if ((this.flagTypeField != null))
                {
                    if ((flagTypeField.Equals(value) != true))
                    {
                        this.flagTypeField = value;
                        this.OnPropertyChanged("FlagType", value);
                    }
                }
                else
                {
                    this.flagTypeField = value;
                    this.OnPropertyChanged("FlagType", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-FlagValue", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("FlagValue", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionFlagValue : EntityBase<ODMcomplexTypeDefinitionFlagValue>
    {

        private string codeListOIDField;

        private string valueField;

        [XmlAttribute]
        public string CodeListOID
        {
            get
            {
                return this.codeListOIDField;
            }
            set
            {
                if ((this.codeListOIDField != null))
                {
                    if ((codeListOIDField.Equals(value) != true))
                    {
                        this.codeListOIDField = value;
                        this.OnPropertyChanged("CodeListOID", value);
                    }
                }
                else
                {
                    this.codeListOIDField = value;
                    this.OnPropertyChanged("CodeListOID", value);
                }
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-FlagType", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("FlagType", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionFlagType : EntityBase<ODMcomplexTypeDefinitionFlagType>
    {

        private string codeListOIDField;

        private string valueField;

        [XmlAttribute]
        public string CodeListOID
        {
            get
            {
                return this.codeListOIDField;
            }
            set
            {
                if ((this.codeListOIDField != null))
                {
                    if ((codeListOIDField.Equals(value) != true))
                    {
                        this.codeListOIDField = value;
                        this.OnPropertyChanged("CodeListOID", value);
                    }
                }
                else
                {
                    this.codeListOIDField = value;
                    this.OnPropertyChanged("CodeListOID", value);
                }
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    public enum TransactionType
    {

        /// <remarks/>
        Insert,

        /// <remarks/>
        Update,

        /// <remarks/>
        Remove,

        /// <remarks/>
        Upsert,

        /// <remarks/>
        Context,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemData", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemData", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemData : EntityBase<ODMcomplexTypeDefinitionItemData>
    {

        private ODMcomplexTypeDefinitionAuditRecord auditRecordField;

        private ODMcomplexTypeDefinitionSignature signatureField;

        private ODMcomplexTypeDefinitionMeasurementUnitRef measurementUnitRefField;

        private List<ODMcomplexTypeDefinitionAnnotation> annotationField;

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private YesOnly isNullField;

        private bool isNullFieldSpecified;

        private string valueField;

        public ODMcomplexTypeDefinitionItemData()
        {
            this.annotationField = new List<ODMcomplexTypeDefinitionAnnotation>();
            this.measurementUnitRefField = new ODMcomplexTypeDefinitionMeasurementUnitRef();
            this.signatureField = new ODMcomplexTypeDefinitionSignature();
            this.auditRecordField = new ODMcomplexTypeDefinitionAuditRecord();
        }

        public ODMcomplexTypeDefinitionAuditRecord AuditRecord
        {
            get
            {
                return this.auditRecordField;
            }
            set
            {
                if ((this.auditRecordField != null))
                {
                    if ((auditRecordField.Equals(value) != true))
                    {
                        this.auditRecordField = value;
                        this.OnPropertyChanged("AuditRecord", value);
                    }
                }
                else
                {
                    this.auditRecordField = value;
                    this.OnPropertyChanged("AuditRecord", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionSignature Signature
        {
            get
            {
                return this.signatureField;
            }
            set
            {
                if ((this.signatureField != null))
                {
                    if ((signatureField.Equals(value) != true))
                    {
                        this.signatureField = value;
                        this.OnPropertyChanged("Signature", value);
                    }
                }
                else
                {
                    this.signatureField = value;
                    this.OnPropertyChanged("Signature", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionMeasurementUnitRef MeasurementUnitRef
        {
            get
            {
                return this.measurementUnitRefField;
            }
            set
            {
                if ((this.measurementUnitRefField != null))
                {
                    if ((measurementUnitRefField.Equals(value) != true))
                    {
                        this.measurementUnitRefField = value;
                        this.OnPropertyChanged("MeasurementUnitRef", value);
                    }
                }
                else
                {
                    this.measurementUnitRefField = value;
                    this.OnPropertyChanged("MeasurementUnitRef", value);
                }
            }
        }

        [XmlElement("Annotation")]
        public List<ODMcomplexTypeDefinitionAnnotation> Annotation
        {
            get
            {
                return this.annotationField;
            }
            set
            {
                if ((this.annotationField != null))
                {
                    if ((annotationField.Equals(value) != true))
                    {
                        this.annotationField = value;
                        this.OnPropertyChanged("Annotation", value);
                    }
                }
                else
                {
                    this.annotationField = value;
                    this.OnPropertyChanged("Annotation", value);
                }
            }
        }

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute]
        public YesOnly IsNull
        {
            get
            {
                return this.isNullField;
            }
            set
            {
                if ((isNullField.Equals(value) != true))
                {
                    this.isNullField = value;
                    this.OnPropertyChanged("IsNull", value);
                }
            }
        }

        [XmlIgnore]
        public bool IsNullSpecified
        {
            get
            {
                return this.isNullFieldSpecified;
            }
            set
            {
                if ((isNullFieldSpecified.Equals(value) != true))
                {
                    this.isNullFieldSpecified = value;
                    this.OnPropertyChanged("IsNullSpecified", value);
                }
            }
        }

        [XmlAttribute]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    public enum YesOnly
    {

        /// <remarks/>
        Yes,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataAny", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataAny", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataAny : EntityBase<ODMcomplexTypeDefinitionItemDataAny>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private YesOnly isNullField;

        private bool isNullFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private string valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute]
        public YesOnly IsNull
        {
            get
            {
                return this.isNullField;
            }
            set
            {
                if ((isNullField.Equals(value) != true))
                {
                    this.isNullField = value;
                    this.OnPropertyChanged("IsNull", value);
                }
            }
        }

        [XmlIgnore]
        public bool IsNullSpecified
        {
            get
            {
                return this.isNullFieldSpecified;
            }
            set
            {
                if ((isNullFieldSpecified.Equals(value) != true))
                {
                    this.isNullFieldSpecified = value;
                    this.OnPropertyChanged("IsNullSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataBase64Binary", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataBase64Binary", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataBase64Binary : EntityBase<ODMcomplexTypeDefinitionItemDataBase64Binary>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private byte[] valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlAttribute(DataType = "base64Binary")]
        public byte[] Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataBase64Float", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataBase64Float", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataBase64Float : EntityBase<ODMcomplexTypeDefinitionItemDataBase64Float>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private byte[] valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlAttribute(DataType = "base64Binary")]
        public byte[] Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataBoolean", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataBoolean", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataBoolean : EntityBase<ODMcomplexTypeDefinitionItemDataBoolean>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private bool valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlAttribute]
        public bool Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((valueField.Equals(value) != true))
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataDate", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataDate", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataDate : EntityBase<ODMcomplexTypeDefinitionItemDataDate>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private System.DateTime valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlAttribute(DataType = "date")]
        public System.DateTime Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((valueField.Equals(value) != true))
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataDatetime", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataDatetime", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataDatetime : EntityBase<ODMcomplexTypeDefinitionItemDataDatetime>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private System.DateTime valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlAttribute]
        public System.DateTime Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((valueField.Equals(value) != true))
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataDouble", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataDouble", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataDouble : EntityBase<ODMcomplexTypeDefinitionItemDataDouble>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private string valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataDurationDatetime", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataDurationDatetime", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataDurationDatetime : EntityBase<ODMcomplexTypeDefinitionItemDataDurationDatetime>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private string valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataFloat", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataFloat", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataFloat : EntityBase<ODMcomplexTypeDefinitionItemDataFloat>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private decimal valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlAttribute]
        public decimal Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataHexBinary", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataHexBinary", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataHexBinary : EntityBase<ODMcomplexTypeDefinitionItemDataHexBinary>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private byte[] valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlAttribute(DataType = "hexBinary")]
        public byte[] Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataHexFloat", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataHexFloat", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataHexFloat : EntityBase<ODMcomplexTypeDefinitionItemDataHexFloat>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private byte[] valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlAttribute(DataType = "hexBinary")]
        public byte[] Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataIncompleteDate", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataIncompleteDate", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataIncompleteDate : EntityBase<ODMcomplexTypeDefinitionItemDataIncompleteDate>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private string valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataIncompleteDatetime", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataIncompleteDatetime", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataIncompleteDatetime : EntityBase<ODMcomplexTypeDefinitionItemDataIncompleteDatetime>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private string valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataIncompleteTime", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataIncompleteTime", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataIncompleteTime : EntityBase<ODMcomplexTypeDefinitionItemDataIncompleteTime>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private string valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataInteger", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataInteger", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataInteger : EntityBase<ODMcomplexTypeDefinitionItemDataInteger>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private string valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlText(DataType = "integer")]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataIntervalDatetime", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataIntervalDatetime", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataIntervalDatetime : EntityBase<ODMcomplexTypeDefinitionItemDataIntervalDatetime>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private string valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataPartialDate", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataPartialDate", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataPartialDate : EntityBase<ODMcomplexTypeDefinitionItemDataPartialDate>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private string valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataPartialDatetime", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataPartialDatetime", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataPartialDatetime : EntityBase<ODMcomplexTypeDefinitionItemDataPartialDatetime>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private string valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataPartialTime", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataPartialTime", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataPartialTime : EntityBase<ODMcomplexTypeDefinitionItemDataPartialTime>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private string valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataString", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataString", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataString : EntityBase<ODMcomplexTypeDefinitionItemDataString>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private string valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlText]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataTime", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataTime", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataTime : EntityBase<ODMcomplexTypeDefinitionItemDataTime>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private System.DateTime valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlAttribute(DataType = "time")]
        public System.DateTime Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((valueField.Equals(value) != true))
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ItemDataURI", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ItemDataURI", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionItemDataURI : EntityBase<ODMcomplexTypeDefinitionItemDataURI>
    {

        private string itemOIDField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        private string auditRecordIDField;

        private string signatureIDField;

        private string annotationIDField;

        private string measurementUnitOIDField;

        private string valueField;

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AuditRecordID
        {
            get
            {
                return this.auditRecordIDField;
            }
            set
            {
                if ((this.auditRecordIDField != null))
                {
                    if ((auditRecordIDField.Equals(value) != true))
                    {
                        this.auditRecordIDField = value;
                        this.OnPropertyChanged("AuditRecordID", value);
                    }
                }
                else
                {
                    this.auditRecordIDField = value;
                    this.OnPropertyChanged("AuditRecordID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string SignatureID
        {
            get
            {
                return this.signatureIDField;
            }
            set
            {
                if ((this.signatureIDField != null))
                {
                    if ((signatureIDField.Equals(value) != true))
                    {
                        this.signatureIDField = value;
                        this.OnPropertyChanged("SignatureID", value);
                    }
                }
                else
                {
                    this.signatureIDField = value;
                    this.OnPropertyChanged("SignatureID", value);
                }
            }
        }

        [XmlAttribute(DataType = "IDREF")]
        public string AnnotationID
        {
            get
            {
                return this.annotationIDField;
            }
            set
            {
                if ((this.annotationIDField != null))
                {
                    if ((annotationIDField.Equals(value) != true))
                    {
                        this.annotationIDField = value;
                        this.OnPropertyChanged("AnnotationID", value);
                    }
                }
                else
                {
                    this.annotationIDField = value;
                    this.OnPropertyChanged("AnnotationID", value);
                }
            }
        }

        [XmlAttribute]
        public string MeasurementUnitOID
        {
            get
            {
                return this.measurementUnitOIDField;
            }
            set
            {
                if ((this.measurementUnitOIDField != null))
                {
                    if ((measurementUnitOIDField.Equals(value) != true))
                    {
                        this.measurementUnitOIDField = value;
                        this.OnPropertyChanged("MeasurementUnitOID", value);
                    }
                }
                else
                {
                    this.measurementUnitOIDField = value;
                    this.OnPropertyChanged("MeasurementUnitOID", value);
                }
            }
        }

        [XmlText(DataType = "anyURI")]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ClinicalData", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ClinicalData", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionClinicalData : EntityBase<ODMcomplexTypeDefinitionClinicalData>
    {

        private List<ODMcomplexTypeDefinitionSubjectData> subjectDataField;

        private List<ODMcomplexTypeDefinitionAuditRecord> auditRecordsField;

        private List<ODMcomplexTypeDefinitionSignature> signaturesField;

        private List<ODMcomplexTypeDefinitionAnnotation> annotationsField;

        private string studyOIDField;

        private string metaDataVersionOIDField;

        public ODMcomplexTypeDefinitionClinicalData()
        {
            this.annotationsField = new List<ODMcomplexTypeDefinitionAnnotation>();
            this.signaturesField = new List<ODMcomplexTypeDefinitionSignature>();
            this.auditRecordsField = new List<ODMcomplexTypeDefinitionAuditRecord>();
            this.subjectDataField = new List<ODMcomplexTypeDefinitionSubjectData>();
        }

        [XmlElement("SubjectData")]
        public List<ODMcomplexTypeDefinitionSubjectData> SubjectData
        {
            get
            {
                return this.subjectDataField;
            }
            set
            {
                if ((this.subjectDataField != null))
                {
                    if ((subjectDataField.Equals(value) != true))
                    {
                        this.subjectDataField = value;
                        this.OnPropertyChanged("SubjectData", value);
                    }
                }
                else
                {
                    this.subjectDataField = value;
                    this.OnPropertyChanged("SubjectData", value);
                }
            }
        }

        [XmlArrayItem("AuditRecord", typeof(ODMcomplexTypeDefinitionAuditRecord), IsNullable = false)]
        public List<ODMcomplexTypeDefinitionAuditRecord> AuditRecords
        {
            get
            {
                return this.auditRecordsField;
            }
            set
            {
                if ((this.auditRecordsField != null))
                {
                    if ((auditRecordsField.Equals(value) != true))
                    {
                        this.auditRecordsField = value;
                        this.OnPropertyChanged("AuditRecords", value);
                    }
                }
                else
                {
                    this.auditRecordsField = value;
                    this.OnPropertyChanged("AuditRecords", value);
                }
            }
        }

        [XmlArrayItem("Signature", typeof(ODMcomplexTypeDefinitionSignature), IsNullable = false)]
        public List<ODMcomplexTypeDefinitionSignature> Signatures
        {
            get
            {
                return this.signaturesField;
            }
            set
            {
                if ((this.signaturesField != null))
                {
                    if ((signaturesField.Equals(value) != true))
                    {
                        this.signaturesField = value;
                        this.OnPropertyChanged("Signatures", value);
                    }
                }
                else
                {
                    this.signaturesField = value;
                    this.OnPropertyChanged("Signatures", value);
                }
            }
        }

        [XmlArrayItem("Annotation", typeof(ODMcomplexTypeDefinitionAnnotation), IsNullable = false)]
        public List<ODMcomplexTypeDefinitionAnnotation> Annotations
        {
            get
            {
                return this.annotationsField;
            }
            set
            {
                if ((this.annotationsField != null))
                {
                    if ((annotationsField.Equals(value) != true))
                    {
                        this.annotationsField = value;
                        this.OnPropertyChanged("Annotations", value);
                    }
                }
                else
                {
                    this.annotationsField = value;
                    this.OnPropertyChanged("Annotations", value);
                }
            }
        }

        [XmlAttribute]
        public string StudyOID
        {
            get
            {
                return this.studyOIDField;
            }
            set
            {
                if ((this.studyOIDField != null))
                {
                    if ((studyOIDField.Equals(value) != true))
                    {
                        this.studyOIDField = value;
                        this.OnPropertyChanged("StudyOID", value);
                    }
                }
                else
                {
                    this.studyOIDField = value;
                    this.OnPropertyChanged("StudyOID", value);
                }
            }
        }

        [XmlAttribute]
        public string MetaDataVersionOID
        {
            get
            {
                return this.metaDataVersionOIDField;
            }
            set
            {
                if ((this.metaDataVersionOIDField != null))
                {
                    if ((metaDataVersionOIDField.Equals(value) != true))
                    {
                        this.metaDataVersionOIDField = value;
                        this.OnPropertyChanged("MetaDataVersionOID", value);
                    }
                }
                else
                {
                    this.metaDataVersionOIDField = value;
                    this.OnPropertyChanged("MetaDataVersionOID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-SubjectData", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("SubjectData", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionSubjectData : EntityBase<ODMcomplexTypeDefinitionSubjectData>
    {

        private ODMcomplexTypeDefinitionAuditRecord auditRecordField;

        private ODMcomplexTypeDefinitionSignature signatureField;

        private ODMcomplexTypeDefinitionInvestigatorRef investigatorRefField;

        private ODMcomplexTypeDefinitionSiteRef siteRefField;

        private List<ODMcomplexTypeDefinitionAnnotation> annotationField;

        private List<ODMcomplexTypeDefinitionStudyEventData> studyEventDataField;

        private string subjectKeyField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        public ODMcomplexTypeDefinitionSubjectData()
        {
            this.studyEventDataField = new List<ODMcomplexTypeDefinitionStudyEventData>();
            this.annotationField = new List<ODMcomplexTypeDefinitionAnnotation>();
            this.siteRefField = new ODMcomplexTypeDefinitionSiteRef();
            this.investigatorRefField = new ODMcomplexTypeDefinitionInvestigatorRef();
            this.signatureField = new ODMcomplexTypeDefinitionSignature();
            this.auditRecordField = new ODMcomplexTypeDefinitionAuditRecord();
        }

        public ODMcomplexTypeDefinitionAuditRecord AuditRecord
        {
            get
            {
                return this.auditRecordField;
            }
            set
            {
                if ((this.auditRecordField != null))
                {
                    if ((auditRecordField.Equals(value) != true))
                    {
                        this.auditRecordField = value;
                        this.OnPropertyChanged("AuditRecord", value);
                    }
                }
                else
                {
                    this.auditRecordField = value;
                    this.OnPropertyChanged("AuditRecord", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionSignature Signature
        {
            get
            {
                return this.signatureField;
            }
            set
            {
                if ((this.signatureField != null))
                {
                    if ((signatureField.Equals(value) != true))
                    {
                        this.signatureField = value;
                        this.OnPropertyChanged("Signature", value);
                    }
                }
                else
                {
                    this.signatureField = value;
                    this.OnPropertyChanged("Signature", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionInvestigatorRef InvestigatorRef
        {
            get
            {
                return this.investigatorRefField;
            }
            set
            {
                if ((this.investigatorRefField != null))
                {
                    if ((investigatorRefField.Equals(value) != true))
                    {
                        this.investigatorRefField = value;
                        this.OnPropertyChanged("InvestigatorRef", value);
                    }
                }
                else
                {
                    this.investigatorRefField = value;
                    this.OnPropertyChanged("InvestigatorRef", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionSiteRef SiteRef
        {
            get
            {
                return this.siteRefField;
            }
            set
            {
                if ((this.siteRefField != null))
                {
                    if ((siteRefField.Equals(value) != true))
                    {
                        this.siteRefField = value;
                        this.OnPropertyChanged("SiteRef", value);
                    }
                }
                else
                {
                    this.siteRefField = value;
                    this.OnPropertyChanged("SiteRef", value);
                }
            }
        }

        [XmlElement("Annotation")]
        public List<ODMcomplexTypeDefinitionAnnotation> Annotation
        {
            get
            {
                return this.annotationField;
            }
            set
            {
                if ((this.annotationField != null))
                {
                    if ((annotationField.Equals(value) != true))
                    {
                        this.annotationField = value;
                        this.OnPropertyChanged("Annotation", value);
                    }
                }
                else
                {
                    this.annotationField = value;
                    this.OnPropertyChanged("Annotation", value);
                }
            }
        }

        [XmlElement("StudyEventData")]
        public List<ODMcomplexTypeDefinitionStudyEventData> StudyEventData
        {
            get
            {
                return this.studyEventDataField;
            }
            set
            {
                if ((this.studyEventDataField != null))
                {
                    if ((studyEventDataField.Equals(value) != true))
                    {
                        this.studyEventDataField = value;
                        this.OnPropertyChanged("StudyEventData", value);
                    }
                }
                else
                {
                    this.studyEventDataField = value;
                    this.OnPropertyChanged("StudyEventData", value);
                }
            }
        }

        [XmlAttribute]
        public string SubjectKey
        {
            get
            {
                return this.subjectKeyField;
            }
            set
            {
                if ((this.subjectKeyField != null))
                {
                    if ((subjectKeyField.Equals(value) != true))
                    {
                        this.subjectKeyField = value;
                        this.OnPropertyChanged("SubjectKey", value);
                    }
                }
                else
                {
                    this.subjectKeyField = value;
                    this.OnPropertyChanged("SubjectKey", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-InvestigatorRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("InvestigatorRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionInvestigatorRef : EntityBase<ODMcomplexTypeDefinitionInvestigatorRef>
    {

        private string userOIDField;

        [XmlAttribute]
        public string UserOID
        {
            get
            {
                return this.userOIDField;
            }
            set
            {
                if ((this.userOIDField != null))
                {
                    if ((userOIDField.Equals(value) != true))
                    {
                        this.userOIDField = value;
                        this.OnPropertyChanged("UserOID", value);
                    }
                }
                else
                {
                    this.userOIDField = value;
                    this.OnPropertyChanged("UserOID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-SiteRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("SiteRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionSiteRef : EntityBase<ODMcomplexTypeDefinitionSiteRef>
    {

        private string locationOIDField;

        [XmlAttribute]
        public string LocationOID
        {
            get
            {
                return this.locationOIDField;
            }
            set
            {
                if ((this.locationOIDField != null))
                {
                    if ((locationOIDField.Equals(value) != true))
                    {
                        this.locationOIDField = value;
                        this.OnPropertyChanged("LocationOID", value);
                    }
                }
                else
                {
                    this.locationOIDField = value;
                    this.OnPropertyChanged("LocationOID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-StudyEventData", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("StudyEventData", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionStudyEventData : EntityBase<ODMcomplexTypeDefinitionStudyEventData>
    {

        private ODMcomplexTypeDefinitionAuditRecord auditRecordField;

        private ODMcomplexTypeDefinitionSignature signatureField;

        private List<ODMcomplexTypeDefinitionAnnotation> annotationField;

        private List<ODMcomplexTypeDefinitionFormData> formDataField;

        private string studyEventOIDField;

        private string studyEventRepeatKeyField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        public ODMcomplexTypeDefinitionStudyEventData()
        {
            this.formDataField = new List<ODMcomplexTypeDefinitionFormData>();
            this.annotationField = new List<ODMcomplexTypeDefinitionAnnotation>();
            this.signatureField = new ODMcomplexTypeDefinitionSignature();
            this.auditRecordField = new ODMcomplexTypeDefinitionAuditRecord();
        }

        public ODMcomplexTypeDefinitionAuditRecord AuditRecord
        {
            get
            {
                return this.auditRecordField;
            }
            set
            {
                if ((this.auditRecordField != null))
                {
                    if ((auditRecordField.Equals(value) != true))
                    {
                        this.auditRecordField = value;
                        this.OnPropertyChanged("AuditRecord", value);
                    }
                }
                else
                {
                    this.auditRecordField = value;
                    this.OnPropertyChanged("AuditRecord", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionSignature Signature
        {
            get
            {
                return this.signatureField;
            }
            set
            {
                if ((this.signatureField != null))
                {
                    if ((signatureField.Equals(value) != true))
                    {
                        this.signatureField = value;
                        this.OnPropertyChanged("Signature", value);
                    }
                }
                else
                {
                    this.signatureField = value;
                    this.OnPropertyChanged("Signature", value);
                }
            }
        }

        [XmlElement("Annotation")]
        public List<ODMcomplexTypeDefinitionAnnotation> Annotation
        {
            get
            {
                return this.annotationField;
            }
            set
            {
                if ((this.annotationField != null))
                {
                    if ((annotationField.Equals(value) != true))
                    {
                        this.annotationField = value;
                        this.OnPropertyChanged("Annotation", value);
                    }
                }
                else
                {
                    this.annotationField = value;
                    this.OnPropertyChanged("Annotation", value);
                }
            }
        }

        [XmlElement("FormData")]
        public List<ODMcomplexTypeDefinitionFormData> FormData
        {
            get
            {
                return this.formDataField;
            }
            set
            {
                if ((this.formDataField != null))
                {
                    if ((formDataField.Equals(value) != true))
                    {
                        this.formDataField = value;
                        this.OnPropertyChanged("FormData", value);
                    }
                }
                else
                {
                    this.formDataField = value;
                    this.OnPropertyChanged("FormData", value);
                }
            }
        }

        [XmlAttribute]
        public string StudyEventOID
        {
            get
            {
                return this.studyEventOIDField;
            }
            set
            {
                if ((this.studyEventOIDField != null))
                {
                    if ((studyEventOIDField.Equals(value) != true))
                    {
                        this.studyEventOIDField = value;
                        this.OnPropertyChanged("StudyEventOID", value);
                    }
                }
                else
                {
                    this.studyEventOIDField = value;
                    this.OnPropertyChanged("StudyEventOID", value);
                }
            }
        }

        [XmlAttribute]
        public string StudyEventRepeatKey
        {
            get
            {
                return this.studyEventRepeatKeyField;
            }
            set
            {
                if ((this.studyEventRepeatKeyField != null))
                {
                    if ((studyEventRepeatKeyField.Equals(value) != true))
                    {
                        this.studyEventRepeatKeyField = value;
                        this.OnPropertyChanged("StudyEventRepeatKey", value);
                    }
                }
                else
                {
                    this.studyEventRepeatKeyField = value;
                    this.OnPropertyChanged("StudyEventRepeatKey", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-FormData", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("FormData", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionFormData : EntityBase<ODMcomplexTypeDefinitionFormData>
    {

        private ODMcomplexTypeDefinitionAuditRecord auditRecordField;

        private ODMcomplexTypeDefinitionSignature signatureField;

        private ODMcomplexTypeDefinitionArchiveLayoutRef archiveLayoutRefField;

        private List<ODMcomplexTypeDefinitionAnnotation> annotationField;

        private List<ODMcomplexTypeDefinitionItemGroupData> itemGroupDataField;

        private string formOIDField;

        private string formRepeatKeyField;

        private TransactionType transactionTypeField;

        private bool transactionTypeFieldSpecified;

        public ODMcomplexTypeDefinitionFormData()
        {
            this.itemGroupDataField = new List<ODMcomplexTypeDefinitionItemGroupData>();
            this.annotationField = new List<ODMcomplexTypeDefinitionAnnotation>();
            this.archiveLayoutRefField = new ODMcomplexTypeDefinitionArchiveLayoutRef();
            this.signatureField = new ODMcomplexTypeDefinitionSignature();
            this.auditRecordField = new ODMcomplexTypeDefinitionAuditRecord();
        }

        public ODMcomplexTypeDefinitionAuditRecord AuditRecord
        {
            get
            {
                return this.auditRecordField;
            }
            set
            {
                if ((this.auditRecordField != null))
                {
                    if ((auditRecordField.Equals(value) != true))
                    {
                        this.auditRecordField = value;
                        this.OnPropertyChanged("AuditRecord", value);
                    }
                }
                else
                {
                    this.auditRecordField = value;
                    this.OnPropertyChanged("AuditRecord", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionSignature Signature
        {
            get
            {
                return this.signatureField;
            }
            set
            {
                if ((this.signatureField != null))
                {
                    if ((signatureField.Equals(value) != true))
                    {
                        this.signatureField = value;
                        this.OnPropertyChanged("Signature", value);
                    }
                }
                else
                {
                    this.signatureField = value;
                    this.OnPropertyChanged("Signature", value);
                }
            }
        }

        public ODMcomplexTypeDefinitionArchiveLayoutRef ArchiveLayoutRef
        {
            get
            {
                return this.archiveLayoutRefField;
            }
            set
            {
                if ((this.archiveLayoutRefField != null))
                {
                    if ((archiveLayoutRefField.Equals(value) != true))
                    {
                        this.archiveLayoutRefField = value;
                        this.OnPropertyChanged("ArchiveLayoutRef", value);
                    }
                }
                else
                {
                    this.archiveLayoutRefField = value;
                    this.OnPropertyChanged("ArchiveLayoutRef", value);
                }
            }
        }

        [XmlElement("Annotation")]
        public List<ODMcomplexTypeDefinitionAnnotation> Annotation
        {
            get
            {
                return this.annotationField;
            }
            set
            {
                if ((this.annotationField != null))
                {
                    if ((annotationField.Equals(value) != true))
                    {
                        this.annotationField = value;
                        this.OnPropertyChanged("Annotation", value);
                    }
                }
                else
                {
                    this.annotationField = value;
                    this.OnPropertyChanged("Annotation", value);
                }
            }
        }

        [XmlElement("ItemGroupData")]
        public List<ODMcomplexTypeDefinitionItemGroupData> ItemGroupData
        {
            get
            {
                return this.itemGroupDataField;
            }
            set
            {
                if ((this.itemGroupDataField != null))
                {
                    if ((itemGroupDataField.Equals(value) != true))
                    {
                        this.itemGroupDataField = value;
                        this.OnPropertyChanged("ItemGroupData", value);
                    }
                }
                else
                {
                    this.itemGroupDataField = value;
                    this.OnPropertyChanged("ItemGroupData", value);
                }
            }
        }

        [XmlAttribute]
        public string FormOID
        {
            get
            {
                return this.formOIDField;
            }
            set
            {
                if ((this.formOIDField != null))
                {
                    if ((formOIDField.Equals(value) != true))
                    {
                        this.formOIDField = value;
                        this.OnPropertyChanged("FormOID", value);
                    }
                }
                else
                {
                    this.formOIDField = value;
                    this.OnPropertyChanged("FormOID", value);
                }
            }
        }

        [XmlAttribute]
        public string FormRepeatKey
        {
            get
            {
                return this.formRepeatKeyField;
            }
            set
            {
                if ((this.formRepeatKeyField != null))
                {
                    if ((formRepeatKeyField.Equals(value) != true))
                    {
                        this.formRepeatKeyField = value;
                        this.OnPropertyChanged("FormRepeatKey", value);
                    }
                }
                else
                {
                    this.formRepeatKeyField = value;
                    this.OnPropertyChanged("FormRepeatKey", value);
                }
            }
        }

        [XmlAttribute]
        public TransactionType TransactionType
        {
            get
            {
                return this.transactionTypeField;
            }
            set
            {
                if ((transactionTypeField.Equals(value) != true))
                {
                    this.transactionTypeField = value;
                    this.OnPropertyChanged("TransactionType", value);
                }
            }
        }

        [XmlIgnore]
        public bool TransactionTypeSpecified
        {
            get
            {
                return this.transactionTypeFieldSpecified;
            }
            set
            {
                if ((transactionTypeFieldSpecified.Equals(value) != true))
                {
                    this.transactionTypeFieldSpecified = value;
                    this.OnPropertyChanged("TransactionTypeSpecified", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-ArchiveLayoutRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("ArchiveLayoutRef", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionArchiveLayoutRef : EntityBase<ODMcomplexTypeDefinitionArchiveLayoutRef>
    {

        private string archiveLayoutOIDField;

        [XmlAttribute]
        public string ArchiveLayoutOID
        {
            get
            {
                return this.archiveLayoutOIDField;
            }
            set
            {
                if ((this.archiveLayoutOIDField != null))
                {
                    if ((archiveLayoutOIDField.Equals(value) != true))
                    {
                        this.archiveLayoutOIDField = value;
                        this.OnPropertyChanged("ArchiveLayoutOID", value);
                    }
                }
                else
                {
                    this.archiveLayoutOIDField = value;
                    this.OnPropertyChanged("ArchiveLayoutOID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Association", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Association", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionAssociation : EntityBase<ODMcomplexTypeDefinitionAssociation>
    {

        private ODMcomplexTypeDefinitionKeySet keySetField;

        private ODMcomplexTypeDefinitionKeySet keySet1Field;

        private ODMcomplexTypeDefinitionAnnotation annotationField;

        private string studyOIDField;

        private string metaDataVersionOIDField;

        public ODMcomplexTypeDefinitionAssociation()
        {
            this.annotationField = new ODMcomplexTypeDefinitionAnnotation();
            this.keySet1Field = new ODMcomplexTypeDefinitionKeySet();
            this.keySetField = new ODMcomplexTypeDefinitionKeySet();
        }

        [XmlElement(Order = 0)]
        public ODMcomplexTypeDefinitionKeySet KeySet
        {
            get
            {
                return this.keySetField;
            }
            set
            {
                if ((this.keySetField != null))
                {
                    if ((keySetField.Equals(value) != true))
                    {
                        this.keySetField = value;
                        this.OnPropertyChanged("KeySet", value);
                    }
                }
                else
                {
                    this.keySetField = value;
                    this.OnPropertyChanged("KeySet", value);
                }
            }
        }

        [XmlElement("KeySet", Order = 1)]
        public ODMcomplexTypeDefinitionKeySet KeySet1
        {
            get
            {
                return this.keySet1Field;
            }
            set
            {
                if ((this.keySet1Field != null))
                {
                    if ((keySet1Field.Equals(value) != true))
                    {
                        this.keySet1Field = value;
                        this.OnPropertyChanged("KeySet1", value);
                    }
                }
                else
                {
                    this.keySet1Field = value;
                    this.OnPropertyChanged("KeySet1", value);
                }
            }
        }

        [XmlElement(Order = 2)]
        public ODMcomplexTypeDefinitionAnnotation Annotation
        {
            get
            {
                return this.annotationField;
            }
            set
            {
                if ((this.annotationField != null))
                {
                    if ((annotationField.Equals(value) != true))
                    {
                        this.annotationField = value;
                        this.OnPropertyChanged("Annotation", value);
                    }
                }
                else
                {
                    this.annotationField = value;
                    this.OnPropertyChanged("Annotation", value);
                }
            }
        }

        [XmlAttribute]
        public string StudyOID
        {
            get
            {
                return this.studyOIDField;
            }
            set
            {
                if ((this.studyOIDField != null))
                {
                    if ((studyOIDField.Equals(value) != true))
                    {
                        this.studyOIDField = value;
                        this.OnPropertyChanged("StudyOID", value);
                    }
                }
                else
                {
                    this.studyOIDField = value;
                    this.OnPropertyChanged("StudyOID", value);
                }
            }
        }

        [XmlAttribute]
        public string MetaDataVersionOID
        {
            get
            {
                return this.metaDataVersionOIDField;
            }
            set
            {
                if ((this.metaDataVersionOIDField != null))
                {
                    if ((metaDataVersionOIDField.Equals(value) != true))
                    {
                        this.metaDataVersionOIDField = value;
                        this.OnPropertyChanged("MetaDataVersionOID", value);
                    }
                }
                else
                {
                    this.metaDataVersionOIDField = value;
                    this.OnPropertyChanged("MetaDataVersionOID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-KeySet", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("KeySet", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionKeySet : EntityBase<ODMcomplexTypeDefinitionKeySet>
    {

        private string studyOIDField;

        private string subjectKeyField;

        private string studyEventOIDField;

        private string studyEventRepeatKeyField;

        private string formOIDField;

        private string formRepeatKeyField;

        private string itemGroupOIDField;

        private string itemGroupRepeatKeyField;

        private string itemOIDField;

        private string oIDField;

        [XmlAttribute]
        public string StudyOID
        {
            get
            {
                return this.studyOIDField;
            }
            set
            {
                if ((this.studyOIDField != null))
                {
                    if ((studyOIDField.Equals(value) != true))
                    {
                        this.studyOIDField = value;
                        this.OnPropertyChanged("StudyOID", value);
                    }
                }
                else
                {
                    this.studyOIDField = value;
                    this.OnPropertyChanged("StudyOID", value);
                }
            }
        }

        [XmlAttribute]
        public string SubjectKey
        {
            get
            {
                return this.subjectKeyField;
            }
            set
            {
                if ((this.subjectKeyField != null))
                {
                    if ((subjectKeyField.Equals(value) != true))
                    {
                        this.subjectKeyField = value;
                        this.OnPropertyChanged("SubjectKey", value);
                    }
                }
                else
                {
                    this.subjectKeyField = value;
                    this.OnPropertyChanged("SubjectKey", value);
                }
            }
        }

        [XmlAttribute]
        public string StudyEventOID
        {
            get
            {
                return this.studyEventOIDField;
            }
            set
            {
                if ((this.studyEventOIDField != null))
                {
                    if ((studyEventOIDField.Equals(value) != true))
                    {
                        this.studyEventOIDField = value;
                        this.OnPropertyChanged("StudyEventOID", value);
                    }
                }
                else
                {
                    this.studyEventOIDField = value;
                    this.OnPropertyChanged("StudyEventOID", value);
                }
            }
        }

        [XmlAttribute]
        public string StudyEventRepeatKey
        {
            get
            {
                return this.studyEventRepeatKeyField;
            }
            set
            {
                if ((this.studyEventRepeatKeyField != null))
                {
                    if ((studyEventRepeatKeyField.Equals(value) != true))
                    {
                        this.studyEventRepeatKeyField = value;
                        this.OnPropertyChanged("StudyEventRepeatKey", value);
                    }
                }
                else
                {
                    this.studyEventRepeatKeyField = value;
                    this.OnPropertyChanged("StudyEventRepeatKey", value);
                }
            }
        }

        [XmlAttribute]
        public string FormOID
        {
            get
            {
                return this.formOIDField;
            }
            set
            {
                if ((this.formOIDField != null))
                {
                    if ((formOIDField.Equals(value) != true))
                    {
                        this.formOIDField = value;
                        this.OnPropertyChanged("FormOID", value);
                    }
                }
                else
                {
                    this.formOIDField = value;
                    this.OnPropertyChanged("FormOID", value);
                }
            }
        }

        [XmlAttribute]
        public string FormRepeatKey
        {
            get
            {
                return this.formRepeatKeyField;
            }
            set
            {
                if ((this.formRepeatKeyField != null))
                {
                    if ((formRepeatKeyField.Equals(value) != true))
                    {
                        this.formRepeatKeyField = value;
                        this.OnPropertyChanged("FormRepeatKey", value);
                    }
                }
                else
                {
                    this.formRepeatKeyField = value;
                    this.OnPropertyChanged("FormRepeatKey", value);
                }
            }
        }

        [XmlAttribute]
        public string ItemGroupOID
        {
            get
            {
                return this.itemGroupOIDField;
            }
            set
            {
                if ((this.itemGroupOIDField != null))
                {
                    if ((itemGroupOIDField.Equals(value) != true))
                    {
                        this.itemGroupOIDField = value;
                        this.OnPropertyChanged("ItemGroupOID", value);
                    }
                }
                else
                {
                    this.itemGroupOIDField = value;
                    this.OnPropertyChanged("ItemGroupOID", value);
                }
            }
        }

        [XmlAttribute]
        public string ItemGroupRepeatKey
        {
            get
            {
                return this.itemGroupRepeatKeyField;
            }
            set
            {
                if ((this.itemGroupRepeatKeyField != null))
                {
                    if ((itemGroupRepeatKeyField.Equals(value) != true))
                    {
                        this.itemGroupRepeatKeyField = value;
                        this.OnPropertyChanged("ItemGroupRepeatKey", value);
                    }
                }
                else
                {
                    this.itemGroupRepeatKeyField = value;
                    this.OnPropertyChanged("ItemGroupRepeatKey", value);
                }
            }
        }

        [XmlAttribute]
        public string ItemOID
        {
            get
            {
                return this.itemOIDField;
            }
            set
            {
                if ((this.itemOIDField != null))
                {
                    if ((itemOIDField.Equals(value) != true))
                    {
                        this.itemOIDField = value;
                        this.OnPropertyChanged("ItemOID", value);
                    }
                }
                else
                {
                    this.itemOIDField = value;
                    this.OnPropertyChanged("ItemOID", value);
                }
            }
        }

        [XmlAttribute]
        public string OID
        {
            get
            {
                return this.oIDField;
            }
            set
            {
                if ((this.oIDField != null))
                {
                    if ((oIDField.Equals(value) != true))
                    {
                        this.oIDField = value;
                        this.OnPropertyChanged("OID", value);
                    }
                }
                else
                {
                    this.oIDField = value;
                    this.OnPropertyChanged("OID", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class SignatureType : EntityBase<SignatureType>
    {

        private SignedInfoType signedInfoField;

        private SignatureValueType signatureValueField;

        private KeyInfoType keyInfoField;

        private List<ObjectType> objectField;

        private string idField;

        public SignatureType()
        {
            this.objectField = new List<ObjectType>();
            this.keyInfoField = new KeyInfoType();
            this.signatureValueField = new SignatureValueType();
            this.signedInfoField = new SignedInfoType();
        }

        public SignedInfoType SignedInfo
        {
            get
            {
                return this.signedInfoField;
            }
            set
            {
                if ((this.signedInfoField != null))
                {
                    if ((signedInfoField.Equals(value) != true))
                    {
                        this.signedInfoField = value;
                        this.OnPropertyChanged("SignedInfo", value);
                    }
                }
                else
                {
                    this.signedInfoField = value;
                    this.OnPropertyChanged("SignedInfo", value);
                }
            }
        }

        public SignatureValueType SignatureValue
        {
            get
            {
                return this.signatureValueField;
            }
            set
            {
                if ((this.signatureValueField != null))
                {
                    if ((signatureValueField.Equals(value) != true))
                    {
                        this.signatureValueField = value;
                        this.OnPropertyChanged("SignatureValue", value);
                    }
                }
                else
                {
                    this.signatureValueField = value;
                    this.OnPropertyChanged("SignatureValue", value);
                }
            }
        }

        public KeyInfoType KeyInfo
        {
            get
            {
                return this.keyInfoField;
            }
            set
            {
                if ((this.keyInfoField != null))
                {
                    if ((keyInfoField.Equals(value) != true))
                    {
                        this.keyInfoField = value;
                        this.OnPropertyChanged("KeyInfo", value);
                    }
                }
                else
                {
                    this.keyInfoField = value;
                    this.OnPropertyChanged("KeyInfo", value);
                }
            }
        }

        [XmlElement("Object")]
        public List<ObjectType> Object
        {
            get
            {
                return this.objectField;
            }
            set
            {
                if ((this.objectField != null))
                {
                    if ((objectField.Equals(value) != true))
                    {
                        this.objectField = value;
                        this.OnPropertyChanged("Object", value);
                    }
                }
                else
                {
                    this.objectField = value;
                    this.OnPropertyChanged("Object", value);
                }
            }
        }

        [XmlAttribute(DataType = "ID")]
        public string Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                if ((this.idField != null))
                {
                    if ((idField.Equals(value) != true))
                    {
                        this.idField = value;
                        this.OnPropertyChanged("Id", value);
                    }
                }
                else
                {
                    this.idField = value;
                    this.OnPropertyChanged("Id", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class SignedInfoType : EntityBase<SignedInfoType>
    {

        private CanonicalizationMethodType canonicalizationMethodField;

        private SignatureMethodType signatureMethodField;

        private List<ReferenceType> referenceField;

        private string idField;

        public SignedInfoType()
        {
            this.referenceField = new List<ReferenceType>();
            this.signatureMethodField = new SignatureMethodType();
            this.canonicalizationMethodField = new CanonicalizationMethodType();
        }

        public CanonicalizationMethodType CanonicalizationMethod
        {
            get
            {
                return this.canonicalizationMethodField;
            }
            set
            {
                if ((this.canonicalizationMethodField != null))
                {
                    if ((canonicalizationMethodField.Equals(value) != true))
                    {
                        this.canonicalizationMethodField = value;
                        this.OnPropertyChanged("CanonicalizationMethod", value);
                    }
                }
                else
                {
                    this.canonicalizationMethodField = value;
                    this.OnPropertyChanged("CanonicalizationMethod", value);
                }
            }
        }

        public SignatureMethodType SignatureMethod
        {
            get
            {
                return this.signatureMethodField;
            }
            set
            {
                if ((this.signatureMethodField != null))
                {
                    if ((signatureMethodField.Equals(value) != true))
                    {
                        this.signatureMethodField = value;
                        this.OnPropertyChanged("SignatureMethod", value);
                    }
                }
                else
                {
                    this.signatureMethodField = value;
                    this.OnPropertyChanged("SignatureMethod", value);
                }
            }
        }

        [XmlElement("Reference")]
        public List<ReferenceType> Reference
        {
            get
            {
                return this.referenceField;
            }
            set
            {
                if ((this.referenceField != null))
                {
                    if ((referenceField.Equals(value) != true))
                    {
                        this.referenceField = value;
                        this.OnPropertyChanged("Reference", value);
                    }
                }
                else
                {
                    this.referenceField = value;
                    this.OnPropertyChanged("Reference", value);
                }
            }
        }

        [XmlAttribute(DataType = "ID")]
        public string Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                if ((this.idField != null))
                {
                    if ((idField.Equals(value) != true))
                    {
                        this.idField = value;
                        this.OnPropertyChanged("Id", value);
                    }
                }
                else
                {
                    this.idField = value;
                    this.OnPropertyChanged("Id", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class CanonicalizationMethodType : EntityBase<CanonicalizationMethodType>
    {

        private List<XmlNode> anyField;

        private string algorithmField;

        public CanonicalizationMethodType()
        {
            this.anyField = new List<XmlNode>();
        }

        [XmlText]
        [XmlAnyElement]
        public List<XmlNode> Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                if ((this.anyField != null))
                {
                    if ((anyField.Equals(value) != true))
                    {
                        this.anyField = value;
                        this.OnPropertyChanged("Any", value);
                    }
                }
                else
                {
                    this.anyField = value;
                    this.OnPropertyChanged("Any", value);
                }
            }
        }

        [XmlAttribute(DataType = "anyURI")]
        public string Algorithm
        {
            get
            {
                return this.algorithmField;
            }
            set
            {
                if ((this.algorithmField != null))
                {
                    if ((algorithmField.Equals(value) != true))
                    {
                        this.algorithmField = value;
                        this.OnPropertyChanged("Algorithm", value);
                    }
                }
                else
                {
                    this.algorithmField = value;
                    this.OnPropertyChanged("Algorithm", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class SignatureMethodType : EntityBase<SignatureMethodType>
    {

        private string hMACOutputLengthField;

        private List<XmlNode> anyField;

        private string algorithmField;

        public SignatureMethodType()
        {
            this.anyField = new List<XmlNode>();
        }

        [XmlElement(DataType = "integer")]
        public string HMACOutputLength
        {
            get
            {
                return this.hMACOutputLengthField;
            }
            set
            {
                if ((this.hMACOutputLengthField != null))
                {
                    if ((hMACOutputLengthField.Equals(value) != true))
                    {
                        this.hMACOutputLengthField = value;
                        this.OnPropertyChanged("HMACOutputLength", value);
                    }
                }
                else
                {
                    this.hMACOutputLengthField = value;
                    this.OnPropertyChanged("HMACOutputLength", value);
                }
            }
        }

        [XmlText]
        [XmlAnyElement]
        public List<XmlNode> Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                if ((this.anyField != null))
                {
                    if ((anyField.Equals(value) != true))
                    {
                        this.anyField = value;
                        this.OnPropertyChanged("Any", value);
                    }
                }
                else
                {
                    this.anyField = value;
                    this.OnPropertyChanged("Any", value);
                }
            }
        }

        [XmlAttribute(DataType = "anyURI")]
        public string Algorithm
        {
            get
            {
                return this.algorithmField;
            }
            set
            {
                if ((this.algorithmField != null))
                {
                    if ((algorithmField.Equals(value) != true))
                    {
                        this.algorithmField = value;
                        this.OnPropertyChanged("Algorithm", value);
                    }
                }
                else
                {
                    this.algorithmField = value;
                    this.OnPropertyChanged("Algorithm", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class ReferenceType : EntityBase<ReferenceType>
    {

        private List<TransformType> transformsField;

        private DigestMethodType digestMethodField;

        private byte[] digestValueField;

        private string idField;

        private string uRIField;

        private string typeField;

        public ReferenceType()
        {
            this.digestMethodField = new DigestMethodType();
            this.transformsField = new List<TransformType>();
        }

        [XmlArrayItem("Transform", IsNullable = false)]
        public List<TransformType> Transforms
        {
            get
            {
                return this.transformsField;
            }
            set
            {
                if ((this.transformsField != null))
                {
                    if ((transformsField.Equals(value) != true))
                    {
                        this.transformsField = value;
                        this.OnPropertyChanged("Transforms", value);
                    }
                }
                else
                {
                    this.transformsField = value;
                    this.OnPropertyChanged("Transforms", value);
                }
            }
        }

        public DigestMethodType DigestMethod
        {
            get
            {
                return this.digestMethodField;
            }
            set
            {
                if ((this.digestMethodField != null))
                {
                    if ((digestMethodField.Equals(value) != true))
                    {
                        this.digestMethodField = value;
                        this.OnPropertyChanged("DigestMethod", value);
                    }
                }
                else
                {
                    this.digestMethodField = value;
                    this.OnPropertyChanged("DigestMethod", value);
                }
            }
        }

        [XmlElement(DataType = "base64Binary")]
        public byte[] DigestValue
        {
            get
            {
                return this.digestValueField;
            }
            set
            {
                if ((this.digestValueField != null))
                {
                    if ((digestValueField.Equals(value) != true))
                    {
                        this.digestValueField = value;
                        this.OnPropertyChanged("DigestValue", value);
                    }
                }
                else
                {
                    this.digestValueField = value;
                    this.OnPropertyChanged("DigestValue", value);
                }
            }
        }

        [XmlAttribute(DataType = "ID")]
        public string Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                if ((this.idField != null))
                {
                    if ((idField.Equals(value) != true))
                    {
                        this.idField = value;
                        this.OnPropertyChanged("Id", value);
                    }
                }
                else
                {
                    this.idField = value;
                    this.OnPropertyChanged("Id", value);
                }
            }
        }

        [XmlAttribute(DataType = "anyURI")]
        public string URI
        {
            get
            {
                return this.uRIField;
            }
            set
            {
                if ((this.uRIField != null))
                {
                    if ((uRIField.Equals(value) != true))
                    {
                        this.uRIField = value;
                        this.OnPropertyChanged("URI", value);
                    }
                }
                else
                {
                    this.uRIField = value;
                    this.OnPropertyChanged("URI", value);
                }
            }
        }

        [XmlAttribute(DataType = "anyURI")]
        public string Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                if ((this.typeField != null))
                {
                    if ((typeField.Equals(value) != true))
                    {
                        this.typeField = value;
                        this.OnPropertyChanged("Type", value);
                    }
                }
                else
                {
                    this.typeField = value;
                    this.OnPropertyChanged("Type", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class TransformType : EntityBase<TransformType>
    {

        private List<object> itemsField;

        private List<string> textField;

        private string algorithmField;

        public TransformType()
        {
            this.textField = new List<string>();
            this.itemsField = new List<object>();
        }

        [XmlAnyElement]
        [XmlElement("XPath", typeof(string))]
        public List<object> Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                if ((this.itemsField != null))
                {
                    if ((itemsField.Equals(value) != true))
                    {
                        this.itemsField = value;
                        this.OnPropertyChanged("Items", value);
                    }
                }
                else
                {
                    this.itemsField = value;
                    this.OnPropertyChanged("Items", value);
                }
            }
        }

        [XmlText]
        public List<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text", value);
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text", value);
                }
            }
        }

        [XmlAttribute(DataType = "anyURI")]
        public string Algorithm
        {
            get
            {
                return this.algorithmField;
            }
            set
            {
                if ((this.algorithmField != null))
                {
                    if ((algorithmField.Equals(value) != true))
                    {
                        this.algorithmField = value;
                        this.OnPropertyChanged("Algorithm", value);
                    }
                }
                else
                {
                    this.algorithmField = value;
                    this.OnPropertyChanged("Algorithm", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class DigestMethodType : EntityBase<DigestMethodType>
    {

        private List<XmlNode> anyField;

        private string algorithmField;

        public DigestMethodType()
        {
            this.anyField = new List<XmlNode>();
        }

        [XmlText]
        [XmlAnyElement]
        public List<XmlNode> Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                if ((this.anyField != null))
                {
                    if ((anyField.Equals(value) != true))
                    {
                        this.anyField = value;
                        this.OnPropertyChanged("Any", value);
                    }
                }
                else
                {
                    this.anyField = value;
                    this.OnPropertyChanged("Any", value);
                }
            }
        }

        [XmlAttribute(DataType = "anyURI")]
        public string Algorithm
        {
            get
            {
                return this.algorithmField;
            }
            set
            {
                if ((this.algorithmField != null))
                {
                    if ((algorithmField.Equals(value) != true))
                    {
                        this.algorithmField = value;
                        this.OnPropertyChanged("Algorithm", value);
                    }
                }
                else
                {
                    this.algorithmField = value;
                    this.OnPropertyChanged("Algorithm", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class SignatureValueType : EntityBase<SignatureValueType>
    {

        private string idField;

        private byte[] valueField;

        [XmlAttribute(DataType = "ID")]
        public string Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                if ((this.idField != null))
                {
                    if ((idField.Equals(value) != true))
                    {
                        this.idField = value;
                        this.OnPropertyChanged("Id", value);
                    }
                }
                else
                {
                    this.idField = value;
                    this.OnPropertyChanged("Id", value);
                }
            }
        }

        [XmlAttribute(DataType = "base64Binary")]
        public byte[] Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != null))
                {
                    if ((valueField.Equals(value) != true))
                    {
                        this.valueField = value;
                        this.OnPropertyChanged("Value", value);
                    }
                }
                else
                {
                    this.valueField = value;
                    this.OnPropertyChanged("Value", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class KeyInfoType : EntityBase<KeyInfoType>
    {

        private object[] itemsField;

        private ItemsChoiceType2[] itemsElementNameField;

        private List<string> textField;

        private string idField;

        public KeyInfoType()
        {
            this.textField = new List<string>();
            this.itemsElementNameField = new ItemsChoiceType2[0];
            this.itemsField = new object[0];
        }

        [XmlAnyElement]
        [XmlElement("KeyName", typeof(string))]
        [XmlElement("KeyValue", typeof(KeyValueType))]
        [XmlElement("MgmtData", typeof(string))]
        [XmlElement("PGPData", typeof(PGPDataType))]
        [XmlElement("RetrievalMethod", typeof(RetrievalMethodType))]
        [XmlElement("SPKIData", typeof(SPKIDataType))]
        [XmlElement("X509Data", typeof(X509DataType))]
        [XmlChoiceIdentifier("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                if ((this.itemsField != null))
                {
                    if ((itemsField.Equals(value) != true))
                    {
                        this.itemsField = value;
                        this.OnPropertyChanged("Items", value);
                    }
                }
                else
                {
                    this.itemsField = value;
                    this.OnPropertyChanged("Items", value);
                }
            }
        }

        [XmlElement("ItemsElementName")]
        [XmlIgnore]
        public ItemsChoiceType2[] ItemsElementName
        {
            get
            {
                return this.itemsElementNameField;
            }
            set
            {
                if ((this.itemsElementNameField != null))
                {
                    if ((itemsElementNameField.Equals(value) != true))
                    {
                        this.itemsElementNameField = value;
                        this.OnPropertyChanged("ItemsElementName", value);
                    }
                }
                else
                {
                    this.itemsElementNameField = value;
                    this.OnPropertyChanged("ItemsElementName", value);
                }
            }
        }

        [XmlText]
        public List<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text", value);
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text", value);
                }
            }
        }

        [XmlAttribute(DataType = "ID")]
        public string Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                if ((this.idField != null))
                {
                    if ((idField.Equals(value) != true))
                    {
                        this.idField = value;
                        this.OnPropertyChanged("Id", value);
                    }
                }
                else
                {
                    this.idField = value;
                    this.OnPropertyChanged("Id", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class KeyValueType : EntityBase<KeyValueType>
    {

        private object itemField;

        private List<string> textField;

        public KeyValueType()
        {
            this.textField = new List<string>();
        }

        [XmlAnyElement]
        [XmlElement("DSAKeyValue", typeof(DSAKeyValueType))]
        [XmlElement("RSAKeyValue", typeof(RSAKeyValueType))]
        public object Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                if ((this.itemField != null))
                {
                    if ((itemField.Equals(value) != true))
                    {
                        this.itemField = value;
                        this.OnPropertyChanged("Item", value);
                    }
                }
                else
                {
                    this.itemField = value;
                    this.OnPropertyChanged("Item", value);
                }
            }
        }

        [XmlText]
        public List<string> Text
        {
            get
            {
                return this.textField;
            }
            set
            {
                if ((this.textField != null))
                {
                    if ((textField.Equals(value) != true))
                    {
                        this.textField = value;
                        this.OnPropertyChanged("Text", value);
                    }
                }
                else
                {
                    this.textField = value;
                    this.OnPropertyChanged("Text", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class DSAKeyValueType : EntityBase<DSAKeyValueType>
    {

        private byte[] pField;

        private byte[] qField;

        private byte[] gField;

        private byte[] yField;

        private byte[] jField;

        private byte[] seedField;

        private byte[] pgenCounterField;

        [XmlElement(DataType = "base64Binary")]
        public byte[] P
        {
            get
            {
                return this.pField;
            }
            set
            {
                if ((this.pField != null))
                {
                    if ((pField.Equals(value) != true))
                    {
                        this.pField = value;
                        this.OnPropertyChanged("P", value);
                    }
                }
                else
                {
                    this.pField = value;
                    this.OnPropertyChanged("P", value);
                }
            }
        }

        [XmlElement(DataType = "base64Binary")]
        public byte[] Q
        {
            get
            {
                return this.qField;
            }
            set
            {
                if ((this.qField != null))
                {
                    if ((qField.Equals(value) != true))
                    {
                        this.qField = value;
                        this.OnPropertyChanged("Q", value);
                    }
                }
                else
                {
                    this.qField = value;
                    this.OnPropertyChanged("Q", value);
                }
            }
        }

        [XmlElement(DataType = "base64Binary")]
        public byte[] G
        {
            get
            {
                return this.gField;
            }
            set
            {
                if ((this.gField != null))
                {
                    if ((gField.Equals(value) != true))
                    {
                        this.gField = value;
                        this.OnPropertyChanged("G", value);
                    }
                }
                else
                {
                    this.gField = value;
                    this.OnPropertyChanged("G", value);
                }
            }
        }

        [XmlElement(DataType = "base64Binary")]
        public byte[] Y
        {
            get
            {
                return this.yField;
            }
            set
            {
                if ((this.yField != null))
                {
                    if ((yField.Equals(value) != true))
                    {
                        this.yField = value;
                        this.OnPropertyChanged("Y", value);
                    }
                }
                else
                {
                    this.yField = value;
                    this.OnPropertyChanged("Y", value);
                }
            }
        }

        [XmlElement(DataType = "base64Binary")]
        public byte[] J
        {
            get
            {
                return this.jField;
            }
            set
            {
                if ((this.jField != null))
                {
                    if ((jField.Equals(value) != true))
                    {
                        this.jField = value;
                        this.OnPropertyChanged("J", value);
                    }
                }
                else
                {
                    this.jField = value;
                    this.OnPropertyChanged("J", value);
                }
            }
        }

        [XmlElement(DataType = "base64Binary")]
        public byte[] Seed
        {
            get
            {
                return this.seedField;
            }
            set
            {
                if ((this.seedField != null))
                {
                    if ((seedField.Equals(value) != true))
                    {
                        this.seedField = value;
                        this.OnPropertyChanged("Seed", value);
                    }
                }
                else
                {
                    this.seedField = value;
                    this.OnPropertyChanged("Seed", value);
                }
            }
        }

        [XmlElement(DataType = "base64Binary")]
        public byte[] PgenCounter
        {
            get
            {
                return this.pgenCounterField;
            }
            set
            {
                if ((this.pgenCounterField != null))
                {
                    if ((pgenCounterField.Equals(value) != true))
                    {
                        this.pgenCounterField = value;
                        this.OnPropertyChanged("PgenCounter", value);
                    }
                }
                else
                {
                    this.pgenCounterField = value;
                    this.OnPropertyChanged("PgenCounter", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class RSAKeyValueType : EntityBase<RSAKeyValueType>
    {

        private byte[] modulusField;

        private byte[] exponentField;

        [XmlElement(DataType = "base64Binary")]
        public byte[] Modulus
        {
            get
            {
                return this.modulusField;
            }
            set
            {
                if ((this.modulusField != null))
                {
                    if ((modulusField.Equals(value) != true))
                    {
                        this.modulusField = value;
                        this.OnPropertyChanged("Modulus", value);
                    }
                }
                else
                {
                    this.modulusField = value;
                    this.OnPropertyChanged("Modulus", value);
                }
            }
        }

        [XmlElement(DataType = "base64Binary")]
        public byte[] Exponent
        {
            get
            {
                return this.exponentField;
            }
            set
            {
                if ((this.exponentField != null))
                {
                    if ((exponentField.Equals(value) != true))
                    {
                        this.exponentField = value;
                        this.OnPropertyChanged("Exponent", value);
                    }
                }
                else
                {
                    this.exponentField = value;
                    this.OnPropertyChanged("Exponent", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class PGPDataType : EntityBase<PGPDataType>
    {

        private object[] itemsField;

        private ItemsChoiceType1[] itemsElementNameField;

        public PGPDataType()
        {
            this.itemsElementNameField = new ItemsChoiceType1[0];
            this.itemsField = new object[0];
        }

        [XmlAnyElement]
        [XmlElement("PGPKeyID", typeof(byte[]), DataType = "base64Binary")]
        [XmlElement("PGPKeyPacket", typeof(byte[]), DataType = "base64Binary")]
        [XmlChoiceIdentifier("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                if ((this.itemsField != null))
                {
                    if ((itemsField.Equals(value) != true))
                    {
                        this.itemsField = value;
                        this.OnPropertyChanged("Items", value);
                    }
                }
                else
                {
                    this.itemsField = value;
                    this.OnPropertyChanged("Items", value);
                }
            }
        }

        [XmlElement("ItemsElementName")]
        [XmlIgnore]
        public ItemsChoiceType1[] ItemsElementName
        {
            get
            {
                return this.itemsElementNameField;
            }
            set
            {
                if ((this.itemsElementNameField != null))
                {
                    if ((itemsElementNameField.Equals(value) != true))
                    {
                        this.itemsElementNameField = value;
                        this.OnPropertyChanged("ItemsElementName", value);
                    }
                }
                else
                {
                    this.itemsElementNameField = value;
                    this.OnPropertyChanged("ItemsElementName", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#", IncludeInSchema = false)]
    public enum ItemsChoiceType1
    {

        /// <remarks/>
        [XmlEnum("##any:")]
        Item,

        /// <remarks/>
        PGPKeyID,

        /// <remarks/>
        PGPKeyPacket,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class RetrievalMethodType : EntityBase<RetrievalMethodType>
    {

        private List<TransformType> transformsField;

        private string uRIField;

        private string typeField;

        public RetrievalMethodType()
        {
            this.transformsField = new List<TransformType>();
        }

        [XmlArrayItem("Transform", IsNullable = false)]
        public List<TransformType> Transforms
        {
            get
            {
                return this.transformsField;
            }
            set
            {
                if ((this.transformsField != null))
                {
                    if ((transformsField.Equals(value) != true))
                    {
                        this.transformsField = value;
                        this.OnPropertyChanged("Transforms", value);
                    }
                }
                else
                {
                    this.transformsField = value;
                    this.OnPropertyChanged("Transforms", value);
                }
            }
        }

        [XmlAttribute(DataType = "anyURI")]
        public string URI
        {
            get
            {
                return this.uRIField;
            }
            set
            {
                if ((this.uRIField != null))
                {
                    if ((uRIField.Equals(value) != true))
                    {
                        this.uRIField = value;
                        this.OnPropertyChanged("URI", value);
                    }
                }
                else
                {
                    this.uRIField = value;
                    this.OnPropertyChanged("URI", value);
                }
            }
        }

        [XmlAttribute(DataType = "anyURI")]
        public string Type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                if ((this.typeField != null))
                {
                    if ((typeField.Equals(value) != true))
                    {
                        this.typeField = value;
                        this.OnPropertyChanged("Type", value);
                    }
                }
                else
                {
                    this.typeField = value;
                    this.OnPropertyChanged("Type", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class SPKIDataType : EntityBase<SPKIDataType>
    {

        private byte[][] sPKISexpField;

        private XmlElement anyField;

        [XmlElement("SPKISexp", DataType = "base64Binary")]
        public byte[][] SPKISexp
        {
            get
            {
                return this.sPKISexpField;
            }
            set
            {
                if ((this.sPKISexpField != null))
                {
                    if ((sPKISexpField.Equals(value) != true))
                    {
                        this.sPKISexpField = value;
                        this.OnPropertyChanged("SPKISexp", value);
                    }
                }
                else
                {
                    this.sPKISexpField = value;
                    this.OnPropertyChanged("SPKISexp", value);
                }
            }
        }

        [XmlAnyElement]
        public XmlElement Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                if ((this.anyField != null))
                {
                    if ((anyField.Equals(value) != true))
                    {
                        this.anyField = value;
                        this.OnPropertyChanged("Any", value);
                    }
                }
                else
                {
                    this.anyField = value;
                    this.OnPropertyChanged("Any", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class X509DataType : EntityBase<X509DataType>
    {

        private object[] itemsField;

        private ItemsChoiceType[] itemsElementNameField;

        public X509DataType()
        {
            this.itemsElementNameField = new ItemsChoiceType[0];
            this.itemsField = new object[0];
        }

        [XmlAnyElement]
        [XmlElement("X509CRL", typeof(byte[]), DataType = "base64Binary")]
        [XmlElement("X509Certificate", typeof(byte[]), DataType = "base64Binary")]
        [XmlElement("X509IssuerSerial", typeof(X509IssuerSerialType))]
        [XmlElement("X509SKI", typeof(byte[]), DataType = "base64Binary")]
        [XmlElement("X509SubjectName", typeof(string))]
        [XmlChoiceIdentifier("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                if ((this.itemsField != null))
                {
                    if ((itemsField.Equals(value) != true))
                    {
                        this.itemsField = value;
                        this.OnPropertyChanged("Items", value);
                    }
                }
                else
                {
                    this.itemsField = value;
                    this.OnPropertyChanged("Items", value);
                }
            }
        }

        [XmlElement("ItemsElementName")]
        [XmlIgnore]
        public ItemsChoiceType[] ItemsElementName
        {
            get
            {
                return this.itemsElementNameField;
            }
            set
            {
                if ((this.itemsElementNameField != null))
                {
                    if ((itemsElementNameField.Equals(value) != true))
                    {
                        this.itemsElementNameField = value;
                        this.OnPropertyChanged("ItemsElementName", value);
                    }
                }
                else
                {
                    this.itemsElementNameField = value;
                    this.OnPropertyChanged("ItemsElementName", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class X509IssuerSerialType : EntityBase<X509IssuerSerialType>
    {

        private string x509IssuerNameField;

        private string x509SerialNumberField;

        public string X509IssuerName
        {
            get
            {
                return this.x509IssuerNameField;
            }
            set
            {
                if ((this.x509IssuerNameField != null))
                {
                    if ((x509IssuerNameField.Equals(value) != true))
                    {
                        this.x509IssuerNameField = value;
                        this.OnPropertyChanged("X509IssuerName", value);
                    }
                }
                else
                {
                    this.x509IssuerNameField = value;
                    this.OnPropertyChanged("X509IssuerName", value);
                }
            }
        }

        [XmlElement(DataType = "integer")]
        public string X509SerialNumber
        {
            get
            {
                return this.x509SerialNumberField;
            }
            set
            {
                if ((this.x509SerialNumberField != null))
                {
                    if ((x509SerialNumberField.Equals(value) != true))
                    {
                        this.x509SerialNumberField = value;
                        this.OnPropertyChanged("X509SerialNumber", value);
                    }
                }
                else
                {
                    this.x509SerialNumberField = value;
                    this.OnPropertyChanged("X509SerialNumber", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#", IncludeInSchema = false)]
    public enum ItemsChoiceType
    {

        /// <remarks/>
        [XmlEnum("##any:")]
        Item,

        /// <remarks/>
        X509CRL,

        /// <remarks/>
        X509Certificate,

        /// <remarks/>
        X509IssuerSerial,

        /// <remarks/>
        X509SKI,

        /// <remarks/>
        X509SubjectName,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#", IncludeInSchema = false)]
    public enum ItemsChoiceType2
    {

        /// <remarks/>
        [XmlEnum("##any:")]
        Item,

        /// <remarks/>
        KeyName,

        /// <remarks/>
        KeyValue,

        /// <remarks/>
        MgmtData,

        /// <remarks/>
        PGPData,

        /// <remarks/>
        RetrievalMethod,

        /// <remarks/>
        SPKIData,

        /// <remarks/>
        X509Data,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.w3.org/2000/09/xmldsig#")]
    public partial class ObjectType : EntityBase<ObjectType>
    {

        private List<XmlNode> anyField;

        private string idField;

        private string mimeTypeField;

        private string encodingField;

        public ObjectType()
        {
            this.anyField = new List<XmlNode>();
        }

        [XmlText]
        [XmlAnyElement]
        public List<XmlNode> Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                if ((this.anyField != null))
                {
                    if ((anyField.Equals(value) != true))
                    {
                        this.anyField = value;
                        this.OnPropertyChanged("Any", value);
                    }
                }
                else
                {
                    this.anyField = value;
                    this.OnPropertyChanged("Any", value);
                }
            }
        }

        [XmlAttribute(DataType = "ID")]
        public string Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                if ((this.idField != null))
                {
                    if ((idField.Equals(value) != true))
                    {
                        this.idField = value;
                        this.OnPropertyChanged("Id", value);
                    }
                }
                else
                {
                    this.idField = value;
                    this.OnPropertyChanged("Id", value);
                }
            }
        }

        [XmlAttribute]
        public string MimeType
        {
            get
            {
                return this.mimeTypeField;
            }
            set
            {
                if ((this.mimeTypeField != null))
                {
                    if ((mimeTypeField.Equals(value) != true))
                    {
                        this.mimeTypeField = value;
                        this.OnPropertyChanged("MimeType", value);
                    }
                }
                else
                {
                    this.mimeTypeField = value;
                    this.OnPropertyChanged("MimeType", value);
                }
            }
        }

        [XmlAttribute(DataType = "anyURI")]
        public string Encoding
        {
            get
            {
                return this.encodingField;
            }
            set
            {
                if ((this.encodingField != null))
                {
                    if ((encodingField.Equals(value) != true))
                    {
                        this.encodingField = value;
                        this.OnPropertyChanged("Encoding", value);
                    }
                }
                else
                {
                    this.encodingField = value;
                    this.OnPropertyChanged("Encoding", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    public enum FileType
    {

        /// <remarks/>
        Snapshot,

        /// <remarks/>
        Transactional,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    public enum Granularity
    {

        /// <remarks/>
        All,

        /// <remarks/>
        Metadata,

        /// <remarks/>
        AdminData,

        /// <remarks/>
        ReferenceData,

        /// <remarks/>
        AllClinicalData,

        /// <remarks/>
        SingleSite,

        /// <remarks/>
        SingleSubject,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [XmlType(Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    public enum ODMVersion
    {

        /// <remarks/>
        [XmlEnum("1.2")]
        Item12,

        /// <remarks/>
        [XmlEnum("1.2.1")]
        Item121,

        /// <remarks/>
        [XmlEnum("1.3")]
        Item13,

        /// <remarks/>
        [XmlEnum("1.3.1")]
        Item131,

        /// <remarks/>
        [XmlEnum("1.3.2")]
        Item132,
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-AuditRecords", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("AuditRecords", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionAuditRecords : EntityBase<ODMcomplexTypeDefinitionAuditRecords>
    {

        private List<ODMcomplexTypeDefinitionAuditRecord> auditRecordField;

        public ODMcomplexTypeDefinitionAuditRecords()
        {
            this.auditRecordField = new List<ODMcomplexTypeDefinitionAuditRecord>();
        }

        [XmlElement("AuditRecord")]
        public List<ODMcomplexTypeDefinitionAuditRecord> AuditRecord
        {
            get
            {
                return this.auditRecordField;
            }
            set
            {
                if ((this.auditRecordField != null))
                {
                    if ((auditRecordField.Equals(value) != true))
                    {
                        this.auditRecordField = value;
                        this.OnPropertyChanged("AuditRecord", value);
                    }
                }
                else
                {
                    this.auditRecordField = value;
                    this.OnPropertyChanged("AuditRecord", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Signatures", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Signatures", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionSignatures : EntityBase<ODMcomplexTypeDefinitionSignatures>
    {

        private List<ODMcomplexTypeDefinitionSignature> signatureField;

        public ODMcomplexTypeDefinitionSignatures()
        {
            this.signatureField = new List<ODMcomplexTypeDefinitionSignature>();
        }

        [XmlElement("Signature")]
        public List<ODMcomplexTypeDefinitionSignature> Signature
        {
            get
            {
                return this.signatureField;
            }
            set
            {
                if ((this.signatureField != null))
                {
                    if ((signatureField.Equals(value) != true))
                    {
                        this.signatureField = value;
                        this.OnPropertyChanged("Signature", value);
                    }
                }
                else
                {
                    this.signatureField = value;
                    this.OnPropertyChanged("Signature", value);
                }
            }
        }
    }

    [GeneratedCode("Xsd2Code", "3.4.0.32990")]
    [Serializable]
    [DesignerCategory("code")]
    [XmlType(TypeName = "ODMcomplexTypeDefinition-Annotations", Namespace = "http://www.cdisc.org/ns/odm/v1.3")]
    [XmlRoot("Annotations", Namespace = "http://www.cdisc.org/ns/odm/v1.3", IsNullable = false)]
    public partial class ODMcomplexTypeDefinitionAnnotations : EntityBase<ODMcomplexTypeDefinitionAnnotations>
    {

        private List<ODMcomplexTypeDefinitionAnnotation> annotationField;

        public ODMcomplexTypeDefinitionAnnotations()
        {
            this.annotationField = new List<ODMcomplexTypeDefinitionAnnotation>();
        }

        [XmlElement("Annotation")]
        public List<ODMcomplexTypeDefinitionAnnotation> Annotation
        {
            get
            {
                return this.annotationField;
            }
            set
            {
                if ((this.annotationField != null))
                {
                    if ((annotationField.Equals(value) != true))
                    {
                        this.annotationField = value;
                        this.OnPropertyChanged("Annotation", value);
                    }
                }
                else
                {
                    this.annotationField = value;
                    this.OnPropertyChanged("Annotation", value);
                }
            }
        }
    }
}
